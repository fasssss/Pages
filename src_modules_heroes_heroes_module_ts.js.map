{"version":3,"file":"src_modules_heroes_heroes_module_ts.js","mappings":"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CA;AACA,SAAS;AACT,KAAK;AACL;;;;;;;;;;;;;;;;;;ACnCA;AACA;AACA;AACO,SAASS,SAAT,CAAmBC,QAAnB,EAA6Bb,SAAS,GAAGP,mDAAzC,EAAgD;AACnD,SAAOkB,6CAAK,CAAC,MAAMd,wDAAK,CAACgB,QAAD,EAAWb,SAAX,CAAZ,CAAZ;AACH;;;;;;;;;;;;;;;;ACLsC;AACmB;AACnD;AACP,WAAW,mDAAO;AAClB;AACA;AACA,6BAA6B,mEAAkB;AAC/C;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;;;;;;;;;;;;;;;;;ACbiD;AACjB;AACzB;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,6CAAK;AAChB,6BAA6B,yDAAa;AAC1C;AACA;AACA;AACA,KAAK;AACL;;;;;;;;;;;;;;;;;ACrBuC;AACmB;AACnD;AACP,WAAW,mDAAO;AAClB;AACA,6BAA6B,mEAAkB;AAC/C;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;;;;;;;;;;;;;;;;;ACX4C;AACsB;AAC3D,mCAAmC,qDAAW;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+DAA+D,iGAA4C;AAC3G;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,gGAA2C;AACvD;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACzBkD;AAC3C,sCAAsC,2DAAc;AAC3D;AACA;AACA;AACA,gBAAgB,UAAU;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACvB4C;AACY;AACjD,yBAAyB,qDAAW;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+DAA+D,8EAA8B;AAC7F;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,gFAAgC;AAC5C;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACzBkD;AAC3C,4BAA4B,2DAAc;AACjD;AACA;AACA;AACA,gBAAgB,UAAU;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;ACvB8D;AACM;AAC7D,oCAAoC,6EAAuB,CAAC,uEAAoB;AAChF;;;;;;;;;;;;;;;;ACHwC;AACxC;AACP;AACA;AACA;AACA,gBAAgB,WAAW;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,mBAAmB,uDAAY;AAC/B,KAAK;AACL;AACA,gBAAgB,WAAW;AAC3B;AACA,KAAK;AACL;AACA,gBAAgB,WAAW;AAC3B;AACA,KAAK;AACL;AACA;;;;;;;;;;;;;;;;;;ACzB0C;AACM;AACzC,0BAA0B,yDAAa,CAAC,mDAAU;AAClD;;;;;;;;;;;;;;;;ACHuC;AAC9C,QAAQ,+BAA+B,EAAE,sDAAS;AAC3C;AACP;AACA,gBAAgB,WAAW;AAC3B;AACA,KAAK;AACL;AACA,gBAAgB,WAAW;AAC3B;AACA,KAAK;AACL;AACA;;;;;;;;;;;;;;;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACO;AACP;AACA;AACA;AACA;;;;;;;;;;;;;;;AC5BO;AACP;AACA;;;;;;;;;;;;;;;;;ACF2C;AACD;AACnC;AACP,oCAAoC,mDAAU,KAAK,uDAAU,cAAc,uDAAU;AACrF;;;;;;;;;;;;;;;;;;;;;;;;;;;ACJA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMoB,UAAN,CAAiB;AAEjB;;;AACA,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AACzB;AACA;AACA;AACA,SAAOA,KAAK,IAAI,OAAOA,KAAK,CAACC,OAAb,KAAyB,UAAzC;AACH;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;;AACA,MAAMC,eAAN,SAA8BJ,UAA9B,CAAyC;AACrCK,EAAA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","sources":["./src/modules/heroes/components/hero-creator/hero-creator.component.ts","./src/modules/heroes/components/hero-creator/hero-creator.component.html","./src/modules/heroes/components/hero-editor/hero-editor.component.ts","./src/modules/heroes/components/hero-editor/hero-editor.component.html","./src/modules/heroes/components/heroes-table/heroes-table.component.ts","./src/modules/heroes/components/heroes-table/heroes-table.component.html","./src/modules/heroes/components/list-page/list-page.component.ts","./src/modules/heroes/components/list-page/list-page.component.html","./src/modules/heroes/heroes.module.ts","./src/modules/heroes/settings/imports.ts","./src/modules/heroes/settings/router-config.ts","./src/modules/heroes/settings/routing.module.ts","./node_modules/rxjs/dist/esm/internal/ReplaySubject.js","./node_modules/rxjs/dist/esm/internal/observable/fromEvent.js","./node_modules/rxjs/dist/esm/internal/observable/timer.js","./node_modules/rxjs/dist/esm/internal/operators/audit.js","./node_modules/rxjs/dist/esm/internal/operators/auditTime.js","./node_modules/rxjs/dist/esm/internal/operators/pairwise.js","./node_modules/rxjs/dist/esm/internal/operators/shareReplay.js","./node_modules/rxjs/dist/esm/internal/operators/takeWhile.js","./node_modules/rxjs/dist/esm/internal/scheduler/AnimationFrameAction.js","./node_modules/rxjs/dist/esm/internal/scheduler/AnimationFrameScheduler.js","./node_modules/rxjs/dist/esm/internal/scheduler/AsapAction.js","./node_modules/rxjs/dist/esm/internal/scheduler/AsapScheduler.js","./node_modules/rxjs/dist/esm/internal/scheduler/animationFrame.js","./node_modules/rxjs/dist/esm/internal/scheduler/animationFrameProvider.js","./node_modules/rxjs/dist/esm/internal/scheduler/asap.js","./node_modules/rxjs/dist/esm/internal/scheduler/immediateProvider.js","./node_modules/rxjs/dist/esm/internal/util/Immediate.js","./node_modules/rxjs/dist/esm/internal/util/isDate.js","./node_modules/rxjs/dist/esm/internal/util/isObservable.js","./node_modules/@angular/cdk/fesm2015/collections.mjs","./node_modules/@angular/cdk/fesm2015/overlay.mjs","./node_modules/@angular/cdk/fesm2015/portal.mjs","./node_modules/@angular/cdk/fesm2015/scrolling.mjs","./node_modules/@angular/cdk/fesm2015/table.mjs","./node_modules/@angular/cdk/fesm2015/text-field.mjs","./node_modules/@angular/material/fesm2015/dialog.mjs","./node_modules/@angular/material/fesm2015/form-field.mjs","./node_modules/@angular/material/fesm2015/input.mjs","./node_modules/@angular/material/fesm2015/table.mjs"],"sourcesContent":["import {Component, Inject, OnInit} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from \"@angular/material/dialog\";\nimport {FormControl, FormGroupDirective, NgForm, Validator, Validators} from \"@angular/forms\";\nimport {ErrorStateMatcher} from \"@angular/material/core\";\nimport {Hero} from \"../../models/hero\";\nimport {Router} from \"@angular/router\";\nimport {Store} from \"@ngrx/store\";\nimport {HeroesStoreActions, RootStoreState} from \"../../../root-store\";\n\nexport class MyErrorStateMatcher implements ErrorStateMatcher {\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n    const isSubmitted = form && form.submitted;\n    return !!(control && control.invalid && (control.dirty || control.touched || isSubmitted));\n  }\n}\n\n@Component({\n  selector: 'app-hero-creator',\n  templateUrl: './hero-creator.component.html',\n  styleUrls: ['./hero-creator.component.scss']\n})\nexport class HeroCreatorComponent implements OnInit {\n  data: Hero = {name: \"\", heroPoints: 0, height: 0, superVillain: \"\", superPowers: \"\", age: 0};\n  nameFormControl = new FormControl('', [Validators.required]);\n  ageFormControl = new FormControl('', [Validators.required, Validators.min(0)]);\n  heightFormControl = new FormControl('', [Validators.required, Validators.min(0)]);\n  superPowersFormControl = new FormControl('', [Validators.required]);\n  superVillainFormControl = new FormControl('', [Validators.required]);\n  heroPointsFormControl = new FormControl('', [Validators.required, Validators.min(0)]);\n  matcher = new MyErrorStateMatcher();\n\n  constructor(\n    private store$: Store<RootStoreState.State>,\n    private router: Router,\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  onSaveClick = () =>{\n\n    this.store$.dispatch(\n      new HeroesStoreActions.PostRequestAction({\n          name: this.data.name!,\n          height: this.data.height!,\n          age: this.data.age!,\n          heroPoints: this.data.heroPoints!,\n          superPowers: this.data.superPowers!,\n          superVillain: this.data.superVillain!,\n        }\n      )\n    );\n    this.router.navigateByUrl('heroes');\n  }\n\n  closeClickHandler = () =>{\n    this.router.navigateByUrl('heroes');\n  }\n}\n","<h1 mat-dialog-title>Create new hero</h1>\n<div mat-dialog-content class=\"fields-container\">\n  <p>Fill all fields to add a new hero to the list</p>\n  <mat-form-field appearance=\"fill\" class=\"field\" >\n    <mat-label>What's heroes name?</mat-label>\n    <input matInput [(ngModel)]=\"data.name\" [formControl]=\"nameFormControl\" [errorStateMatcher]=\"matcher\">\n  </mat-form-field>\n  <mat-form-field appearance=\"fill\" class=\"field\">\n    <mat-label>What's heroes age?</mat-label>\n    <input type=\"number\" matInput [(ngModel)]=\"data.age\" [formControl]=\"ageFormControl\" [errorStateMatcher]=\"matcher\">\n  </mat-form-field>\n  <mat-form-field appearance=\"fill\" class=\"field\">\n    <mat-label>What's heroes height?</mat-label>\n    <input type=\"number\" matInput [(ngModel)]=\"data.height\" [formControl]=\"heightFormControl\" [errorStateMatcher]=\"matcher\">\n  </mat-form-field>\n  <mat-form-field appearance=\"fill\" class=\"field\">\n    <mat-label>What's heroes super powers?</mat-label>\n    <input matInput [(ngModel)]=\"data.superPowers\" [formControl]=\"superPowersFormControl\" [errorStateMatcher]=\"matcher\">\n  </mat-form-field>\n  <mat-form-field appearance=\"fill\" class=\"field\">\n    <mat-label>What's heroes initial points?</mat-label>\n    <input type=\"number\" matInput [(ngModel)]=\"data.heroPoints\" [formControl]=\"heroPointsFormControl\" [errorStateMatcher]=\"matcher\">\n  </mat-form-field>\n  <mat-form-field appearance=\"fill\" class=\"field\">\n    <mat-label>What's heroes archenemy?</mat-label>\n    <input matInput [(ngModel)]=\"data.superVillain\" [formControl]=\"superVillainFormControl\" [errorStateMatcher]=\"matcher\">\n  </mat-form-field>\n</div>\n\n<div class=\"hero-creator__buttons\">\n  <button mat-raised-button class=\"accept\"\n          [disabled]=\"nameFormControl.hasError('required')||\n            this.ageFormControl.hasError('required') ||\n            this.ageFormControl.hasError('min') ||\n            this.heightFormControl.hasError('required') ||\n            this.heightFormControl.hasError('min') ||\n            this.superPowersFormControl.hasError('required') ||\n            this.superVillainFormControl.hasError('required') ||\n            this.heroPointsFormControl.hasError('required') ||\n            this.heroPointsFormControl.hasError('min')\"\n          (click)=\"onSaveClick()\"\n  >\n    Add\n  </button>\n  <button mat-raised-button class=\"close\" (click)=\"closeClickHandler()\">Close</button>\n</div>\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from \"@angular/material/dialog\";\nimport {FormControl, FormGroupDirective, NgForm, Validator, Validators} from \"@angular/forms\";\nimport {ErrorStateMatcher} from \"@angular/material/core\";\nimport {Hero} from \"../../models/hero\";\nimport {Router} from \"@angular/router\";\nimport {Store} from \"@ngrx/store\";\nimport {HeroesStoreActions, RootStoreState} from \"../../../root-store\";\n\nexport class MyErrorStateMatcher implements ErrorStateMatcher {\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n    const isSubmitted = form && form.submitted;\n    return !!(control && control.invalid && (control.dirty || control.touched || isSubmitted));\n  }\n}\n\n@Component({\n  selector: 'app-hero-editor',\n  templateUrl: './hero-editor.component.html',\n  styleUrls: ['./hero-editor.component.scss']\n})\nexport class HeroEditorComponent implements OnInit {\n  data: Hero = {name: \"\", heroPoints: 0, height: 0, superVillain: \"\", superPowers: \"\", age: 0};\n  ageFormControl = new FormControl('', [Validators.required, Validators.min(0)]);\n  heightFormControl = new FormControl('', [Validators.required, Validators.min(0)]);\n  superPowersFormControl = new FormControl('', [Validators.required]);\n  superVillainFormControl = new FormControl('', [Validators.required]);\n  heroPointsFormControl = new FormControl('', [Validators.required, Validators.min(0)]);\n  matcher = new MyErrorStateMatcher();\n\n  constructor(\n    private store$: Store<RootStoreState.State>,\n    private router: Router,\n  ) { }\n\n  ngOnInit(): void {\n    this.data = history.state;\n  }\n\n  onSaveClick = () =>{\n\n    this.store$.dispatch(\n      new HeroesStoreActions.UpdateRequestAction({\n        name: this.data.name!,\n        height: this.data.height!,\n        age: this.data.age!,\n        heroPoints: this.data.heroPoints!,\n        superPowers: this.data.superPowers!,\n        superVillain: this.data.superVillain!,\n      })\n    );\n    this.router.navigateByUrl('heroes');\n  }\n\n  closeClickHandler = () =>{\n    this.router.navigateByUrl('heroes');\n  }\n}\n","<h1 mat-dialog-title>Editing {{data.name}} hero</h1>\n<div mat-dialog-content class=\"fields-container\">\n  <p>Fill all fields to add a new hero to the list</p>\n  <mat-form-field appearance=\"fill\" class=\"field\">\n    <mat-label>What's heroes age?</mat-label>\n    <input type=\"number\" matInput [(ngModel)]=\"data.age\" [formControl]=\"ageFormControl\" [errorStateMatcher]=\"matcher\">\n  </mat-form-field>\n  <mat-form-field appearance=\"fill\" class=\"field\">\n    <mat-label>What's heroes height?</mat-label>\n    <input type=\"number\" matInput [(ngModel)]=\"data.height\" [formControl]=\"heightFormControl\" [errorStateMatcher]=\"matcher\">\n  </mat-form-field>\n  <mat-form-field appearance=\"fill\" class=\"field\">\n    <mat-label>What's heroes super powers?</mat-label>\n    <input matInput [(ngModel)]=\"data.superPowers\" [formControl]=\"superPowersFormControl\" [errorStateMatcher]=\"matcher\">\n  </mat-form-field>\n  <mat-form-field appearance=\"fill\" class=\"field\">\n    <mat-label>What's heroes initial points?</mat-label>\n    <input type=\"number\" matInput [(ngModel)]=\"data.heroPoints\" [formControl]=\"heroPointsFormControl\" [errorStateMatcher]=\"matcher\">\n  </mat-form-field>\n  <mat-form-field appearance=\"fill\" class=\"field\">\n    <mat-label>What's heroes archenemy?</mat-label>\n    <input matInput [(ngModel)]=\"data.superVillain\" [formControl]=\"superVillainFormControl\" [errorStateMatcher]=\"matcher\">\n  </mat-form-field>\n</div>\n\n<div class=\"hero-creator__buttons\">\n  <button mat-raised-button class=\"accept\"\n          [disabled]=\"this.ageFormControl.hasError('required') ||\n            this.ageFormControl.hasError('min') ||\n            this.heightFormControl.hasError('required') ||\n            this.heightFormControl.hasError('min') ||\n            this.superPowersFormControl.hasError('required') ||\n            this.superVillainFormControl.hasError('required') ||\n            this.heroPointsFormControl.hasError('required') ||\n            this.heroPointsFormControl.hasError('min')\"\n          (click)=\"onSaveClick()\"\n  >\n    Save\n  </button>\n  <button mat-raised-button class=\"close\" (click)=\"closeClickHandler()\">Close</button>\n</div>\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {Hero} from \"../../models/hero\";\n\n@Component({\n  selector: 'app-heroes-table',\n  templateUrl: './heroes-table.component.html',\n  styleUrls: ['./heroes-table.component.scss']\n})\nexport class HeroesTableComponent implements OnInit {\n  @Input() heroesList: Hero[] = []\n  @Input() displayedColumns: Array<string> = [\"name\", \"age\", \"height\", \"heroPoints\", \"superPowers\", \"superVillain\",\"Actions\"];\n  @Output() deleteEvent = new EventEmitter<Hero>();\n  @Output() updateEvent = new EventEmitter<Hero>();\n  constructor() { }\n\n  handleDelete = (row: Hero) => {\n    this.deleteEvent.emit(row);\n  }\n\n  handleUpdate = (row: Hero) => {\n    this.updateEvent.emit(row);\n  }\n\n  ngOnInit(): void {\n  }\n\n\n}\n","<table mat-table [dataSource]=\"heroesList\">\n  <ng-container matColumnDef=\"name\">\n    <th mat-header-cell *matHeaderCellDef>Name</th>\n    <td mat-cell *matCellDef=\"let element\">{{element.name}}</td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"age\">\n    <th mat-header-cell *matHeaderCellDef>Age</th>\n    <td mat-cell *matCellDef=\"let element\">{{element.age}}</td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"height\">\n    <th mat-header-cell *matHeaderCellDef>Height</th>\n    <td mat-cell *matCellDef=\"let element\">{{element.height}}</td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"heroPoints\">\n    <th mat-header-cell *matHeaderCellDef>Hero points</th>\n    <td mat-cell *matCellDef=\"let element\">{{element.heroPoints}}</td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"superPowers\">\n    <th mat-header-cell *matHeaderCellDef>Super powers</th>\n    <td mat-cell *matCellDef=\"let element\">{{element.superPowers}}</td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"superVillain\">\n    <th mat-header-cell *matHeaderCellDef>Super villain</th>\n    <td mat-cell *matCellDef=\"let element\">{{element.superVillain}}</td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"Actions\">\n    <th mat-header-cell *matHeaderCellDef>Actions</th>\n    <td mat-cell *matCellDef=\"let row\">\n      <button mat-button (click)=\"handleDelete(row)\">Remove</button>\n      <button mat-button (click)=\"handleUpdate(row)\">Update</button>\n    </td>\n  </ng-container>\n\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n  <tr mat-row\n      *matRowDef=\"let row; columns: displayedColumns\"\n  ></tr>\n</table>\n","import {ChangeDetectionStrategy, ChangeDetectorRef, Component, OnInit} from '@angular/core';\r\nimport { Hero } from \"../../models/hero\";\r\nimport {MatDialog} from \"@angular/material/dialog\";\r\nimport {Store} from \"@ngrx/store\";\r\nimport {\r\n  RootStoreState,\r\n  HeroesStoreSelector,\r\n} from \"../../../root-store\";\r\nimport {HeroesStoreActions} from \"../../../root-store\"\r\nimport {Observable, of} from \"rxjs\";\r\nimport {Router} from \"@angular/router\";\r\nimport {Actions} from \"@ngrx/effects\";\r\n\r\n@Component({\r\n  selector: 'app-main-page',\r\n  templateUrl: './list-page.component.html',\r\n  styleUrls: ['./list-page.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ListPageComponent implements OnInit{\r\n\r\n  displayedColumns: Array<string> = [\"name\", \"age\", \"height\", \"heroPoints\", \"superPowers\", \"superVillain\",\"Actions\"];\r\n  selectedRow?: Hero;\r\n  heroFromModal: Hero = {name: '', age: 0, height: 0, superVillain: '', superPowers: '', heroPoints: 0,};\r\n  heroesList$?: Observable<Array<Hero> | null>;\r\n  heroesList: Hero[] = [];\r\n  displayHeroList: Hero[] = [];\r\n  updatedHero: Hero | undefined;\r\n  currentPage: number = 1;\r\n  pageCapacity: number = 2;\r\n  searchFilter: string = '';\r\n\r\n  constructor(public dialog: MatDialog,\r\n              private store$: Store<RootStoreState.State>,\r\n              private  cdr: ChangeDetectorRef,\r\n              private router: Router) { }\r\n\r\n  ngOnInit() {\r\n    this.store$.dispatch(new HeroesStoreActions.FetchActionRequest({name: null}));\r\n    this.heroesList$ = this.store$.select(HeroesStoreSelector.selectHeroesList);\r\n\r\n    this.heroesList$.subscribe(res => {\r\n      this.heroesList = res!;\r\n      if(this.heroesList){this.formDisplayList();}\r\n      this.cdr.detectChanges();});\r\n\r\n    this.store$.select(HeroesStoreSelector.selectHero).subscribe(res => {\r\n      if (res !== null) {\r\n        this.heroesList = new Array(...this.heroesList, res);\r\n        this.formDisplayList();\r\n        this.cdr.detectChanges();\r\n      }\r\n    });\r\n\r\n    this.store$.select(HeroesStoreSelector.selectError).subscribe(res => {\r\n      if(res !== null) {\r\n        console.log(\"(Temporary console error notification) Sorry, Can't add this user\");\r\n      }\r\n    });\r\n\r\n    this.store$.select(HeroesStoreSelector.selectHeroName).subscribe( res =>{\r\n      if(res !== null){\r\n        this.heroesList = this.heroesList.filter(item => item.name !== res);\r\n        this.formDisplayList();\r\n      }\r\n    });\r\n\r\n    this.store$.select(HeroesStoreSelector.selectHero).subscribe(res => {\r\n      if(res !== null && this.updatedHero !== undefined){\r\n        let copyArray = [...this.heroesList];\r\n        let index = copyArray.indexOf(this.updatedHero);\r\n        copyArray[index] = res;\r\n        this.heroesList = copyArray;\r\n        this.formDisplayList();\r\n        this.cdr.detectChanges();\r\n      }\r\n    });\r\n  }\r\n\r\n  handleSearch(){\r\n    this.formDisplayList();\r\n  }\r\n\r\n  handleDelete(row: Hero){\r\n    if(row !== undefined) {\r\n      this.store$.dispatch(new HeroesStoreActions.DeleteActionRequest({name: row.name!}));\r\n    }\r\n  }\r\n\r\n  handleUpdate(row: Hero){\r\n    console.log(this.router.config);\r\n    this.router.navigateByUrl('heroes/edit', {state: row});\r\n  }\r\n\r\n  handleCreate(){\r\n    console.log(this.router.config);\r\n    this.router.navigateByUrl('heroes/create');\r\n  }\r\n\r\n  refreshClickHandler(){\r\n    this.store$.dispatch(new HeroesStoreActions.FetchActionRequest({name: null}));\r\n    this.heroesList$ = this.store$.select(HeroesStoreSelector.selectHeroesList);\r\n    this.heroesList$.subscribe(res => {\r\n      this.heroesList = res!;\r\n      this.formDisplayList();\r\n      this.cdr.detectChanges();});\r\n  }\r\n\r\n  handlePrevPage(){\r\n    this.currentPage--;\r\n    this.formDisplayList();\r\n    console.log(this.currentPage);\r\n  }\r\n\r\n  handleNextPage(){\r\n    this.currentPage++;\r\n    this.formDisplayList();\r\n    console.log(this.currentPage);\r\n  }\r\n\r\n  formDisplayList(){\r\n    this.displayHeroList = this.heroesList.filter(hero => hero.name?.startsWith(this.searchFilter));\r\n    let showStart = this.displayHeroList.length / this.pageCapacity * (this.currentPage - 1);\r\n    this.displayHeroList = this.displayHeroList.slice(showStart, showStart + this.pageCapacity);\r\n  }\r\n}\r\n","<h1>Heroes list</h1>\r\n<div class=\"table-zone\">\r\n<div class=\"above-block\">\r\n  <div class=\"search-block\">\r\n  <mat-form-field class=\"example-form-field\" appearance=\"fill\">\r\n    <mat-label>Heroes name</mat-label>\r\n    <input matInput type=\"text\" (change)=\"handleSearch()\" [(ngModel)]=\"searchFilter\">\r\n    <button matSuffix mat-icon-button aria-label=\"Search\" (click)=\"handleSearch()\">\r\n      <mat-icon>search</mat-icon>\r\n    </button>\r\n    <button *ngIf=\"searchFilter\" matSuffix mat-icon-button aria-label=\"Clear\" (click)=\"searchFilter=''; handleSearch()\">\r\n      <mat-icon>close</mat-icon>\r\n    </button>\r\n  </mat-form-field>\r\n  </div>\r\n  <div class=\"one-row right-position\">\r\n    <button mat-raised-button (click)=\"refreshClickHandler()\">Refresh</button>\r\n  </div>\r\n</div>\r\n  <app-heroes-table\r\n    [heroesList]=\"displayHeroList\"\r\n    [displayedColumns]=\"displayedColumns\"\r\n    (updateEvent)=\"handleUpdate($event)\"\r\n    (deleteEvent)=\"handleDelete($event)\">\r\n  </app-heroes-table>\r\n  <div class=\"bottom-block\">\r\n    <div class=\"table-buttons\">\r\n      <button mat-raised-button (click)=\"handleCreate()\">New item</button>\r\n    </div>\r\n    <div class=\"right-position\">\r\n      <button mat-raised-button *ngIf=\"currentPage > 1\" (click)=\"handlePrevPage()\"><mat-icon>keyboard_arrow_left</mat-icon></button>\r\n      <button mat-raised-button *ngIf=\"currentPage < pageCapacity\" (click)=\"handleNextPage()\"><mat-icon>keyboard_arrow_right</mat-icon></button>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport {ListPageComponent} from \"./components/list-page/list-page.component\";\r\nimport {imports} from \"./settings/imports\";\r\nimport {declarations} from \"./settings/declarations\";\r\nimport {MatIconModule} from \"@angular/material/icon\";\r\n\r\n@NgModule({\r\n  declarations: declarations,\r\n    imports: [\r\n        imports,\r\n        MatIconModule\r\n    ],\r\n  exports: [ListPageComponent],\r\n})\r\nexport default class HeroesModule { }\r\n","import {CommonModule} from \"@angular/common\";\r\nimport {MatTableModule} from \"@angular/material/table\";\r\nimport {MatButtonModule} from \"@angular/material/button\";\r\nimport {MatDialogModule} from \"@angular/material/dialog\";\r\nimport {MatFormFieldModule} from \"@angular/material/form-field\";\r\nimport {MatInputModule} from \"@angular/material/input\";\r\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\r\nimport {RoutingModule} from \"./routing.module\";\r\n\r\nexport const imports = [\r\n  CommonModule,\r\n  MatTableModule,\r\n  MatButtonModule,\r\n  MatDialogModule,\r\n  MatFormFieldModule,\r\n  MatInputModule,\r\n  FormsModule,\r\n  ReactiveFormsModule,\r\n  RoutingModule,\r\n]\r\n","import {HeroCreatorComponent} from \"../components/hero-creator/hero-creator.component\";\r\nimport {HeroEditorComponent} from \"../components/hero-editor/hero-editor.component\";\r\nimport {ListPageComponent} from \"../components/list-page/list-page.component\";\r\n\r\nexport const routerConfig = [\r\n  {\r\n    path: '',\r\n    component: ListPageComponent\r\n  },\r\n  {\r\n    path: 'create',\r\n    component: HeroCreatorComponent,\r\n  },\r\n  {\r\n    path: 'edit',\r\n    component: HeroEditorComponent,\r\n  },];\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {RouterModule} from \"@angular/router\";\nimport {routerConfig} from \"./router-config\";\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    RouterModule,\n    RouterModule.forChild(routerConfig),\n  ]\n})\nexport class RoutingModule { }\n","import { Subject } from './Subject';\nimport { dateTimestampProvider } from './scheduler/dateTimestampProvider';\nexport class ReplaySubject extends Subject {\n    constructor(_bufferSize = Infinity, _windowTime = Infinity, _timestampProvider = dateTimestampProvider) {\n        super();\n        this._bufferSize = _bufferSize;\n        this._windowTime = _windowTime;\n        this._timestampProvider = _timestampProvider;\n        this._buffer = [];\n        this._infiniteTimeWindow = true;\n        this._infiniteTimeWindow = _windowTime === Infinity;\n        this._bufferSize = Math.max(1, _bufferSize);\n        this._windowTime = Math.max(1, _windowTime);\n    }\n    next(value) {\n        const { isStopped, _buffer, _infiniteTimeWindow, _timestampProvider, _windowTime } = this;\n        if (!isStopped) {\n            _buffer.push(value);\n            !_infiniteTimeWindow && _buffer.push(_timestampProvider.now() + _windowTime);\n        }\n        this._trimBuffer();\n        super.next(value);\n    }\n    _subscribe(subscriber) {\n        this._throwIfClosed();\n        this._trimBuffer();\n        const subscription = this._innerSubscribe(subscriber);\n        const { _infiniteTimeWindow, _buffer } = this;\n        const copy = _buffer.slice();\n        for (let i = 0; i < copy.length && !subscriber.closed; i += _infiniteTimeWindow ? 1 : 2) {\n            subscriber.next(copy[i]);\n        }\n        this._checkFinalizedStatuses(subscriber);\n        return subscription;\n    }\n    _trimBuffer() {\n        const { _bufferSize, _timestampProvider, _buffer, _infiniteTimeWindow } = this;\n        const adjustedBufferSize = (_infiniteTimeWindow ? 1 : 2) * _bufferSize;\n        _bufferSize < Infinity && adjustedBufferSize < _buffer.length && _buffer.splice(0, _buffer.length - adjustedBufferSize);\n        if (!_infiniteTimeWindow) {\n            const now = _timestampProvider.now();\n            let last = 0;\n            for (let i = 1; i < _buffer.length && _buffer[i] <= now; i += 2) {\n                last = i;\n            }\n            last && _buffer.splice(0, last + 1);\n        }\n    }\n}\n","import { innerFrom } from '../observable/innerFrom';\nimport { Observable } from '../Observable';\nimport { mergeMap } from '../operators/mergeMap';\nimport { isArrayLike } from '../util/isArrayLike';\nimport { isFunction } from '../util/isFunction';\nimport { mapOneOrManyArgs } from '../util/mapOneOrManyArgs';\nconst nodeEventEmitterMethods = ['addListener', 'removeListener'];\nconst eventTargetMethods = ['addEventListener', 'removeEventListener'];\nconst jqueryMethods = ['on', 'off'];\nexport function fromEvent(target, eventName, options, resultSelector) {\n    if (isFunction(options)) {\n        resultSelector = options;\n        options = undefined;\n    }\n    if (resultSelector) {\n        return fromEvent(target, eventName, options).pipe(mapOneOrManyArgs(resultSelector));\n    }\n    const [add, remove] = isEventTarget(target)\n        ? eventTargetMethods.map((methodName) => (handler) => target[methodName](eventName, handler, options))\n        :\n            isNodeStyleEventEmitter(target)\n                ? nodeEventEmitterMethods.map(toCommonHandlerRegistry(target, eventName))\n                : isJQueryStyleEventEmitter(target)\n                    ? jqueryMethods.map(toCommonHandlerRegistry(target, eventName))\n                    : [];\n    if (!add) {\n        if (isArrayLike(target)) {\n            return mergeMap((subTarget) => fromEvent(subTarget, eventName, options))(innerFrom(target));\n        }\n    }\n    if (!add) {\n        throw new TypeError('Invalid event target');\n    }\n    return new Observable((subscriber) => {\n        const handler = (...args) => subscriber.next(1 < args.length ? args : args[0]);\n        add(handler);\n        return () => remove(handler);\n    });\n}\nfunction toCommonHandlerRegistry(target, eventName) {\n    return (methodName) => (handler) => target[methodName](eventName, handler);\n}\nfunction isNodeStyleEventEmitter(target) {\n    return isFunction(target.addListener) && isFunction(target.removeListener);\n}\nfunction isJQueryStyleEventEmitter(target) {\n    return isFunction(target.on) && isFunction(target.off);\n}\nfunction isEventTarget(target) {\n    return isFunction(target.addEventListener) && isFunction(target.removeEventListener);\n}\n","import { Observable } from '../Observable';\nimport { async as asyncScheduler } from '../scheduler/async';\nimport { isScheduler } from '../util/isScheduler';\nimport { isValidDate } from '../util/isDate';\nexport function timer(dueTime = 0, intervalOrScheduler, scheduler = asyncScheduler) {\n    let intervalDuration = -1;\n    if (intervalOrScheduler != null) {\n        if (isScheduler(intervalOrScheduler)) {\n            scheduler = intervalOrScheduler;\n        }\n        else {\n            intervalDuration = intervalOrScheduler;\n        }\n    }\n    return new Observable((subscriber) => {\n        let due = isValidDate(dueTime) ? +dueTime - scheduler.now() : dueTime;\n        if (due < 0) {\n            due = 0;\n        }\n        let n = 0;\n        return scheduler.schedule(function () {\n            if (!subscriber.closed) {\n                subscriber.next(n++);\n                if (0 <= intervalDuration) {\n                    this.schedule(undefined, intervalDuration);\n                }\n                else {\n                    subscriber.complete();\n                }\n            }\n        }, due);\n    });\n}\n","import { operate } from '../util/lift';\nimport { innerFrom } from '../observable/innerFrom';\nimport { OperatorSubscriber } from './OperatorSubscriber';\nexport function audit(durationSelector) {\n    return operate((source, subscriber) => {\n        let hasValue = false;\n        let lastValue = null;\n        let durationSubscriber = null;\n        let isComplete = false;\n        const endDuration = () => {\n            durationSubscriber === null || durationSubscriber === void 0 ? void 0 : durationSubscriber.unsubscribe();\n            durationSubscriber = null;\n            if (hasValue) {\n                hasValue = false;\n                const value = lastValue;\n                lastValue = null;\n                subscriber.next(value);\n            }\n            isComplete && subscriber.complete();\n        };\n        const cleanupDuration = () => {\n            durationSubscriber = null;\n            isComplete && subscriber.complete();\n        };\n        source.subscribe(new OperatorSubscriber(subscriber, (value) => {\n            hasValue = true;\n            lastValue = value;\n            if (!durationSubscriber) {\n                innerFrom(durationSelector(value)).subscribe((durationSubscriber = new OperatorSubscriber(subscriber, endDuration, cleanupDuration)));\n            }\n        }, () => {\n            isComplete = true;\n            (!hasValue || !durationSubscriber || durationSubscriber.closed) && subscriber.complete();\n        }));\n    });\n}\n","import { async } from '../scheduler/async';\nimport { audit } from './audit';\nimport { timer } from '../observable/timer';\nexport function auditTime(duration, scheduler = async) {\n    return audit(() => timer(duration, scheduler));\n}\n","import { operate } from '../util/lift';\nimport { OperatorSubscriber } from './OperatorSubscriber';\nexport function pairwise() {\n    return operate((source, subscriber) => {\n        let prev;\n        let hasPrev = false;\n        source.subscribe(new OperatorSubscriber(subscriber, (value) => {\n            const p = prev;\n            prev = value;\n            hasPrev && subscriber.next([p, value]);\n            hasPrev = true;\n        }));\n    });\n}\n","import { ReplaySubject } from '../ReplaySubject';\nimport { share } from './share';\nexport function shareReplay(configOrBufferSize, windowTime, scheduler) {\n    var _a, _b;\n    let bufferSize;\n    let refCount = false;\n    if (configOrBufferSize && typeof configOrBufferSize === 'object') {\n        bufferSize = (_a = configOrBufferSize.bufferSize) !== null && _a !== void 0 ? _a : Infinity;\n        windowTime = (_b = configOrBufferSize.windowTime) !== null && _b !== void 0 ? _b : Infinity;\n        refCount = !!configOrBufferSize.refCount;\n        scheduler = configOrBufferSize.scheduler;\n    }\n    else {\n        bufferSize = configOrBufferSize !== null && configOrBufferSize !== void 0 ? configOrBufferSize : Infinity;\n    }\n    return share({\n        connector: () => new ReplaySubject(bufferSize, windowTime, scheduler),\n        resetOnError: true,\n        resetOnComplete: false,\n        resetOnRefCountZero: refCount\n    });\n}\n","import { operate } from '../util/lift';\nimport { OperatorSubscriber } from './OperatorSubscriber';\nexport function takeWhile(predicate, inclusive = false) {\n    return operate((source, subscriber) => {\n        let index = 0;\n        source.subscribe(new OperatorSubscriber(subscriber, (value) => {\n            const result = predicate(value, index++);\n            (result || inclusive) && subscriber.next(value);\n            !result && subscriber.complete();\n        }));\n    });\n}\n","import { AsyncAction } from './AsyncAction';\nimport { animationFrameProvider } from './animationFrameProvider';\nexport class AnimationFrameAction extends AsyncAction {\n    constructor(scheduler, work) {\n        super(scheduler, work);\n        this.scheduler = scheduler;\n        this.work = work;\n    }\n    requestAsyncId(scheduler, id, delay = 0) {\n        if (delay !== null && delay > 0) {\n            return super.requestAsyncId(scheduler, id, delay);\n        }\n        scheduler.actions.push(this);\n        return scheduler._scheduled || (scheduler._scheduled = animationFrameProvider.requestAnimationFrame(() => scheduler.flush(undefined)));\n    }\n    recycleAsyncId(scheduler, id, delay = 0) {\n        if ((delay != null && delay > 0) || (delay == null && this.delay > 0)) {\n            return super.recycleAsyncId(scheduler, id, delay);\n        }\n        if (scheduler.actions.length === 0) {\n            animationFrameProvider.cancelAnimationFrame(id);\n            scheduler._scheduled = undefined;\n        }\n        return undefined;\n    }\n}\n","import { AsyncScheduler } from './AsyncScheduler';\nexport class AnimationFrameScheduler extends AsyncScheduler {\n    flush(action) {\n        this._active = true;\n        this._scheduled = undefined;\n        const { actions } = this;\n        let error;\n        let index = -1;\n        action = action || actions.shift();\n        const count = actions.length;\n        do {\n            if ((error = action.execute(action.state, action.delay))) {\n                break;\n            }\n        } while (++index < count && (action = actions.shift()));\n        this._active = false;\n        if (error) {\n            while (++index < count && (action = actions.shift())) {\n                action.unsubscribe();\n            }\n            throw error;\n        }\n    }\n}\n","import { AsyncAction } from './AsyncAction';\nimport { immediateProvider } from './immediateProvider';\nexport class AsapAction extends AsyncAction {\n    constructor(scheduler, work) {\n        super(scheduler, work);\n        this.scheduler = scheduler;\n        this.work = work;\n    }\n    requestAsyncId(scheduler, id, delay = 0) {\n        if (delay !== null && delay > 0) {\n            return super.requestAsyncId(scheduler, id, delay);\n        }\n        scheduler.actions.push(this);\n        return scheduler._scheduled || (scheduler._scheduled = immediateProvider.setImmediate(scheduler.flush.bind(scheduler, undefined)));\n    }\n    recycleAsyncId(scheduler, id, delay = 0) {\n        if ((delay != null && delay > 0) || (delay == null && this.delay > 0)) {\n            return super.recycleAsyncId(scheduler, id, delay);\n        }\n        if (scheduler.actions.length === 0) {\n            immediateProvider.clearImmediate(id);\n            scheduler._scheduled = undefined;\n        }\n        return undefined;\n    }\n}\n","import { AsyncScheduler } from './AsyncScheduler';\nexport class AsapScheduler extends AsyncScheduler {\n    flush(action) {\n        this._active = true;\n        this._scheduled = undefined;\n        const { actions } = this;\n        let error;\n        let index = -1;\n        action = action || actions.shift();\n        const count = actions.length;\n        do {\n            if ((error = action.execute(action.state, action.delay))) {\n                break;\n            }\n        } while (++index < count && (action = actions.shift()));\n        this._active = false;\n        if (error) {\n            while (++index < count && (action = actions.shift())) {\n                action.unsubscribe();\n            }\n            throw error;\n        }\n    }\n}\n","import { AnimationFrameAction } from './AnimationFrameAction';\nimport { AnimationFrameScheduler } from './AnimationFrameScheduler';\nexport const animationFrameScheduler = new AnimationFrameScheduler(AnimationFrameAction);\nexport const animationFrame = animationFrameScheduler;\n","import { Subscription } from '../Subscription';\nexport const animationFrameProvider = {\n    schedule(callback) {\n        let request = requestAnimationFrame;\n        let cancel = cancelAnimationFrame;\n        const { delegate } = animationFrameProvider;\n        if (delegate) {\n            request = delegate.requestAnimationFrame;\n            cancel = delegate.cancelAnimationFrame;\n        }\n        const handle = request((timestamp) => {\n            cancel = undefined;\n            callback(timestamp);\n        });\n        return new Subscription(() => cancel === null || cancel === void 0 ? void 0 : cancel(handle));\n    },\n    requestAnimationFrame(...args) {\n        const { delegate } = animationFrameProvider;\n        return ((delegate === null || delegate === void 0 ? void 0 : delegate.requestAnimationFrame) || requestAnimationFrame)(...args);\n    },\n    cancelAnimationFrame(...args) {\n        const { delegate } = animationFrameProvider;\n        return ((delegate === null || delegate === void 0 ? void 0 : delegate.cancelAnimationFrame) || cancelAnimationFrame)(...args);\n    },\n    delegate: undefined,\n};\n","import { AsapAction } from './AsapAction';\nimport { AsapScheduler } from './AsapScheduler';\nexport const asapScheduler = new AsapScheduler(AsapAction);\nexport const asap = asapScheduler;\n","import { Immediate } from '../util/Immediate';\nconst { setImmediate, clearImmediate } = Immediate;\nexport const immediateProvider = {\n    setImmediate(...args) {\n        const { delegate } = immediateProvider;\n        return ((delegate === null || delegate === void 0 ? void 0 : delegate.setImmediate) || setImmediate)(...args);\n    },\n    clearImmediate(handle) {\n        const { delegate } = immediateProvider;\n        return ((delegate === null || delegate === void 0 ? void 0 : delegate.clearImmediate) || clearImmediate)(handle);\n    },\n    delegate: undefined,\n};\n","let nextHandle = 1;\nlet resolved;\nconst activeHandles = {};\nfunction findAndClearHandle(handle) {\n    if (handle in activeHandles) {\n        delete activeHandles[handle];\n        return true;\n    }\n    return false;\n}\nexport const Immediate = {\n    setImmediate(cb) {\n        const handle = nextHandle++;\n        activeHandles[handle] = true;\n        if (!resolved) {\n            resolved = Promise.resolve();\n        }\n        resolved.then(() => findAndClearHandle(handle) && cb());\n        return handle;\n    },\n    clearImmediate(handle) {\n        findAndClearHandle(handle);\n    },\n};\nexport const TestTools = {\n    pending() {\n        return Object.keys(activeHandles).length;\n    }\n};\n","export function isValidDate(value) {\n    return value instanceof Date && !isNaN(value);\n}\n","import { Observable } from '../Observable';\nimport { isFunction } from './isFunction';\nexport function isObservable(obj) {\n    return !!obj && (obj instanceof Observable || (isFunction(obj.lift) && isFunction(obj.subscribe)));\n}\n","import { isObservable, of, Subject } from 'rxjs';\nimport * as i0 from '@angular/core';\nimport { Injectable, InjectionToken } from '@angular/core';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass DataSource {\n}\n/** Checks whether an object is a data source. */\nfunction isDataSource(value) {\n    // Check if the value is a DataSource by observing if it has a connect function. Cannot\n    // be checked as an `instanceof DataSource` since people could create their own sources\n    // that match the interface, but don't extend DataSource.\n    return value && typeof value.connect === 'function';\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** DataSource wrapper for a native array. */\nclass ArrayDataSource extends DataSource {\n    constructor(_data) {\n        super();\n        this._data = _data;\n    }\n    connect() {\n        return isObservable(this._data) ? this._data : of(this._data);\n    }\n    disconnect() { }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A repeater that destroys views when they are removed from a\n * {@link ViewContainerRef}. When new items are inserted into the container,\n * the repeater will always construct a new embedded view for each item.\n *\n * @template T The type for the embedded view's $implicit property.\n * @template R The type for the item in each IterableDiffer change record.\n * @template C The type for the context passed to each embedded view.\n */\nclass _DisposeViewRepeaterStrategy {\n    applyChanges(changes, viewContainerRef, itemContextFactory, itemValueResolver, itemViewChanged) {\n        changes.forEachOperation((record, adjustedPreviousIndex, currentIndex) => {\n            let view;\n            let operation;\n            if (record.previousIndex == null) {\n                const insertContext = itemContextFactory(record, adjustedPreviousIndex, currentIndex);\n                view = viewContainerRef.createEmbeddedView(insertContext.templateRef, insertContext.context, insertContext.index);\n                operation = 1 /* INSERTED */;\n            }\n            else if (currentIndex == null) {\n                viewContainerRef.remove(adjustedPreviousIndex);\n                operation = 3 /* REMOVED */;\n            }\n            else {\n                view = viewContainerRef.get(adjustedPreviousIndex);\n                viewContainerRef.move(view, currentIndex);\n                operation = 2 /* MOVED */;\n            }\n            if (itemViewChanged) {\n                itemViewChanged({\n                    context: view === null || view === void 0 ? void 0 : view.context,\n                    operation,\n                    record,\n                });\n            }\n        });\n    }\n    detach() { }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A repeater that caches views when they are removed from a\n * {@link ViewContainerRef}. When new items are inserted into the container,\n * the repeater will reuse one of the cached views instead of creating a new\n * embedded view. Recycling cached views reduces the quantity of expensive DOM\n * inserts.\n *\n * @template T The type for the embedded view's $implicit property.\n * @template R The type for the item in each IterableDiffer change record.\n * @template C The type for the context passed to each embedded view.\n */\nclass _RecycleViewRepeaterStrategy {\n    constructor() {\n        /**\n         * The size of the cache used to store unused views.\n         * Setting the cache size to `0` will disable caching. Defaults to 20 views.\n         */\n        this.viewCacheSize = 20;\n        /**\n         * View cache that stores embedded view instances that have been previously stamped out,\n         * but don't are not currently rendered. The view repeater will reuse these views rather than\n         * creating brand new ones.\n         *\n         * TODO(michaeljamesparsons) Investigate whether using a linked list would improve performance.\n         */\n        this._viewCache = [];\n    }\n    /** Apply changes to the DOM. */\n    applyChanges(changes, viewContainerRef, itemContextFactory, itemValueResolver, itemViewChanged) {\n        // Rearrange the views to put them in the right location.\n        changes.forEachOperation((record, adjustedPreviousIndex, currentIndex) => {\n            let view;\n            let operation;\n            if (record.previousIndex == null) {\n                // Item added.\n                const viewArgsFactory = () => itemContextFactory(record, adjustedPreviousIndex, currentIndex);\n                view = this._insertView(viewArgsFactory, currentIndex, viewContainerRef, itemValueResolver(record));\n                operation = view ? 1 /* INSERTED */ : 0 /* REPLACED */;\n            }\n            else if (currentIndex == null) {\n                // Item removed.\n                this._detachAndCacheView(adjustedPreviousIndex, viewContainerRef);\n                operation = 3 /* REMOVED */;\n            }\n            else {\n                // Item moved.\n                view = this._moveView(adjustedPreviousIndex, currentIndex, viewContainerRef, itemValueResolver(record));\n                operation = 2 /* MOVED */;\n            }\n            if (itemViewChanged) {\n                itemViewChanged({\n                    context: view === null || view === void 0 ? void 0 : view.context,\n                    operation,\n                    record,\n                });\n            }\n        });\n    }\n    detach() {\n        for (const view of this._viewCache) {\n            view.destroy();\n        }\n        this._viewCache = [];\n    }\n    /**\n     * Inserts a view for a new item, either from the cache or by creating a new\n     * one. Returns `undefined` if the item was inserted into a cached view.\n     */\n    _insertView(viewArgsFactory, currentIndex, viewContainerRef, value) {\n        const cachedView = this._insertViewFromCache(currentIndex, viewContainerRef);\n        if (cachedView) {\n            cachedView.context.$implicit = value;\n            return undefined;\n        }\n        const viewArgs = viewArgsFactory();\n        return viewContainerRef.createEmbeddedView(viewArgs.templateRef, viewArgs.context, viewArgs.index);\n    }\n    /** Detaches the view at the given index and inserts into the view cache. */\n    _detachAndCacheView(index, viewContainerRef) {\n        const detachedView = viewContainerRef.detach(index);\n        this._maybeCacheView(detachedView, viewContainerRef);\n    }\n    /** Moves view at the previous index to the current index. */\n    _moveView(adjustedPreviousIndex, currentIndex, viewContainerRef, value) {\n        const view = viewContainerRef.get(adjustedPreviousIndex);\n        viewContainerRef.move(view, currentIndex);\n        view.context.$implicit = value;\n        return view;\n    }\n    /**\n     * Cache the given detached view. If the cache is full, the view will be\n     * destroyed.\n     */\n    _maybeCacheView(view, viewContainerRef) {\n        if (this._viewCache.length < this.viewCacheSize) {\n            this._viewCache.push(view);\n        }\n        else {\n            const index = viewContainerRef.indexOf(view);\n            // The host component could remove views from the container outside of\n            // the view repeater. It's unlikely this will occur, but just in case,\n            // destroy the view on its own, otherwise destroy it through the\n            // container to ensure that all the references are removed.\n            if (index === -1) {\n                view.destroy();\n            }\n            else {\n                viewContainerRef.remove(index);\n            }\n        }\n    }\n    /** Inserts a recycled view from the cache at the given index. */\n    _insertViewFromCache(index, viewContainerRef) {\n        const cachedView = this._viewCache.pop();\n        if (cachedView) {\n            viewContainerRef.insert(cachedView, index);\n        }\n        return cachedView || null;\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Class to be used to power selecting one or more options from a list.\n */\nclass SelectionModel {\n    constructor(_multiple = false, initiallySelectedValues, _emitChanges = true) {\n        this._multiple = _multiple;\n        this._emitChanges = _emitChanges;\n        /** Currently-selected values. */\n        this._selection = new Set();\n        /** Keeps track of the deselected options that haven't been emitted by the change event. */\n        this._deselectedToEmit = [];\n        /** Keeps track of the selected options that haven't been emitted by the change event. */\n        this._selectedToEmit = [];\n        /** Event emitted when the value has changed. */\n        this.changed = new Subject();\n        if (initiallySelectedValues && initiallySelectedValues.length) {\n            if (_multiple) {\n                initiallySelectedValues.forEach(value => this._markSelected(value));\n            }\n            else {\n                this._markSelected(initiallySelectedValues[0]);\n            }\n            // Clear the array in order to avoid firing the change event for preselected values.\n            this._selectedToEmit.length = 0;\n        }\n    }\n    /** Selected values. */\n    get selected() {\n        if (!this._selected) {\n            this._selected = Array.from(this._selection.values());\n        }\n        return this._selected;\n    }\n    /**\n     * Selects a value or an array of values.\n     */\n    select(...values) {\n        this._verifyValueAssignment(values);\n        values.forEach(value => this._markSelected(value));\n        this._emitChangeEvent();\n    }\n    /**\n     * Deselects a value or an array of values.\n     */\n    deselect(...values) {\n        this._verifyValueAssignment(values);\n        values.forEach(value => this._unmarkSelected(value));\n        this._emitChangeEvent();\n    }\n    /**\n     * Toggles a value between selected and deselected.\n     */\n    toggle(value) {\n        this.isSelected(value) ? this.deselect(value) : this.select(value);\n    }\n    /**\n     * Clears all of the selected values.\n     */\n    clear() {\n        this._unmarkAll();\n        this._emitChangeEvent();\n    }\n    /**\n     * Determines whether a value is selected.\n     */\n    isSelected(value) {\n        return this._selection.has(value);\n    }\n    /**\n     * Determines whether the model does not have a value.\n     */\n    isEmpty() {\n        return this._selection.size === 0;\n    }\n    /**\n     * Determines whether the model has a value.\n     */\n    hasValue() {\n        return !this.isEmpty();\n    }\n    /**\n     * Sorts the selected values based on a predicate function.\n     */\n    sort(predicate) {\n        if (this._multiple && this.selected) {\n            this._selected.sort(predicate);\n        }\n    }\n    /**\n     * Gets whether multiple values can be selected.\n     */\n    isMultipleSelection() {\n        return this._multiple;\n    }\n    /** Emits a change event and clears the records of selected and deselected values. */\n    _emitChangeEvent() {\n        // Clear the selected values so they can be re-cached.\n        this._selected = null;\n        if (this._selectedToEmit.length || this._deselectedToEmit.length) {\n            this.changed.next({\n                source: this,\n                added: this._selectedToEmit,\n                removed: this._deselectedToEmit,\n            });\n            this._deselectedToEmit = [];\n            this._selectedToEmit = [];\n        }\n    }\n    /** Selects a value. */\n    _markSelected(value) {\n        if (!this.isSelected(value)) {\n            if (!this._multiple) {\n                this._unmarkAll();\n            }\n            this._selection.add(value);\n            if (this._emitChanges) {\n                this._selectedToEmit.push(value);\n            }\n        }\n    }\n    /** Deselects a value. */\n    _unmarkSelected(value) {\n        if (this.isSelected(value)) {\n            this._selection.delete(value);\n            if (this._emitChanges) {\n                this._deselectedToEmit.push(value);\n            }\n        }\n    }\n    /** Clears out the selected values. */\n    _unmarkAll() {\n        if (!this.isEmpty()) {\n            this._selection.forEach(value => this._unmarkSelected(value));\n        }\n    }\n    /**\n     * Verifies the value assignment and throws an error if the specified value array is\n     * including multiple values while the selection model is not supporting multiple values.\n     */\n    _verifyValueAssignment(values) {\n        if (values.length > 1 && !this._multiple && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getMultipleValuesInSingleSelectionError();\n        }\n    }\n}\n/**\n * Returns an error that reports that multiple values are passed into a selection model\n * with a single value.\n * @docs-private\n */\nfunction getMultipleValuesInSingleSelectionError() {\n    return Error('Cannot pass multiple values into SelectionModel with single-value mode.');\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Class to coordinate unique selection based on name.\n * Intended to be consumed as an Angular service.\n * This service is needed because native radio change events are only fired on the item currently\n * being selected, and we still need to uncheck the previous selection.\n *\n * This service does not *store* any IDs and names because they may change at any time, so it is\n * less error-prone if they are simply passed through when the events occur.\n */\nclass UniqueSelectionDispatcher {\n    constructor() {\n        this._listeners = [];\n    }\n    /**\n     * Notify other items that selection for the given name has been set.\n     * @param id ID of the item.\n     * @param name Name of the item.\n     */\n    notify(id, name) {\n        for (let listener of this._listeners) {\n            listener(id, name);\n        }\n    }\n    /**\n     * Listen for future changes to item selection.\n     * @return Function used to deregister listener\n     */\n    listen(listener) {\n        this._listeners.push(listener);\n        return () => {\n            this._listeners = this._listeners.filter((registered) => {\n                return listener !== registered;\n            });\n        };\n    }\n    ngOnDestroy() {\n        this._listeners = [];\n    }\n}\nUniqueSelectionDispatcher.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: UniqueSelectionDispatcher, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nUniqueSelectionDispatcher.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: UniqueSelectionDispatcher, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: UniqueSelectionDispatcher, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token for {@link _ViewRepeater}. This token is for use by Angular Material only.\n * @docs-private\n */\nconst _VIEW_REPEATER_STRATEGY = new InjectionToken('_ViewRepeater');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ArrayDataSource, DataSource, SelectionModel, UniqueSelectionDispatcher, _DisposeViewRepeaterStrategy, _RecycleViewRepeaterStrategy, _VIEW_REPEATER_STRATEGY, getMultipleValuesInSingleSelectionError, isDataSource };\n","import * as i1 from '@angular/cdk/scrolling';\nimport { ScrollingModule } from '@angular/cdk/scrolling';\nexport { CdkScrollable, ScrollDispatcher, ViewportRuler } from '@angular/cdk/scrolling';\nimport * as i6 from '@angular/common';\nimport { DOCUMENT } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Injectable, Inject, ElementRef, ApplicationRef, InjectionToken, Directive, EventEmitter, Optional, Input, Output, NgModule } from '@angular/core';\nimport { coerceCssPixelValue, coerceArray, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport * as i1$1 from '@angular/cdk/platform';\nimport { supportsScrollBehavior, _isTestEnvironment, _getEventTarget } from '@angular/cdk/platform';\nimport * as i5 from '@angular/cdk/bidi';\nimport { BidiModule } from '@angular/cdk/bidi';\nimport { DomPortalOutlet, TemplatePortal, PortalModule } from '@angular/cdk/portal';\nimport { Subject, Subscription, merge } from 'rxjs';\nimport { take, takeUntil, takeWhile } from 'rxjs/operators';\nimport { ESCAPE, hasModifierKey } from '@angular/cdk/keycodes';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst scrollBehaviorSupported = supportsScrollBehavior();\n/**\n * Strategy that will prevent the user from scrolling while the overlay is visible.\n */\nclass BlockScrollStrategy {\n    constructor(_viewportRuler, document) {\n        this._viewportRuler = _viewportRuler;\n        this._previousHTMLStyles = { top: '', left: '' };\n        this._isEnabled = false;\n        this._document = document;\n    }\n    /** Attaches this scroll strategy to an overlay. */\n    attach() { }\n    /** Blocks page-level scroll while the attached overlay is open. */\n    enable() {\n        if (this._canBeEnabled()) {\n            const root = this._document.documentElement;\n            this._previousScrollPosition = this._viewportRuler.getViewportScrollPosition();\n            // Cache the previous inline styles in case the user had set them.\n            this._previousHTMLStyles.left = root.style.left || '';\n            this._previousHTMLStyles.top = root.style.top || '';\n            // Note: we're using the `html` node, instead of the `body`, because the `body` may\n            // have the user agent margin, whereas the `html` is guaranteed not to have one.\n            root.style.left = coerceCssPixelValue(-this._previousScrollPosition.left);\n            root.style.top = coerceCssPixelValue(-this._previousScrollPosition.top);\n            root.classList.add('cdk-global-scrollblock');\n            this._isEnabled = true;\n        }\n    }\n    /** Unblocks page-level scroll while the attached overlay is open. */\n    disable() {\n        if (this._isEnabled) {\n            const html = this._document.documentElement;\n            const body = this._document.body;\n            const htmlStyle = html.style;\n            const bodyStyle = body.style;\n            const previousHtmlScrollBehavior = htmlStyle.scrollBehavior || '';\n            const previousBodyScrollBehavior = bodyStyle.scrollBehavior || '';\n            this._isEnabled = false;\n            htmlStyle.left = this._previousHTMLStyles.left;\n            htmlStyle.top = this._previousHTMLStyles.top;\n            html.classList.remove('cdk-global-scrollblock');\n            // Disable user-defined smooth scrolling temporarily while we restore the scroll position.\n            // See https://developer.mozilla.org/en-US/docs/Web/CSS/scroll-behavior\n            // Note that we don't mutate the property if the browser doesn't support `scroll-behavior`,\n            // because it can throw off feature detections in `supportsScrollBehavior` which\n            // checks for `'scrollBehavior' in documentElement.style`.\n            if (scrollBehaviorSupported) {\n                htmlStyle.scrollBehavior = bodyStyle.scrollBehavior = 'auto';\n            }\n            window.scroll(this._previousScrollPosition.left, this._previousScrollPosition.top);\n            if (scrollBehaviorSupported) {\n                htmlStyle.scrollBehavior = previousHtmlScrollBehavior;\n                bodyStyle.scrollBehavior = previousBodyScrollBehavior;\n            }\n        }\n    }\n    _canBeEnabled() {\n        // Since the scroll strategies can't be singletons, we have to use a global CSS class\n        // (`cdk-global-scrollblock`) to make sure that we don't try to disable global\n        // scrolling multiple times.\n        const html = this._document.documentElement;\n        if (html.classList.contains('cdk-global-scrollblock') || this._isEnabled) {\n            return false;\n        }\n        const body = this._document.body;\n        const viewport = this._viewportRuler.getViewportSize();\n        return body.scrollHeight > viewport.height || body.scrollWidth > viewport.width;\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Returns an error to be thrown when attempting to attach an already-attached scroll strategy.\n */\nfunction getMatScrollStrategyAlreadyAttachedError() {\n    return Error(`Scroll strategy has already been attached.`);\n}\n\n/**\n * Strategy that will close the overlay as soon as the user starts scrolling.\n */\nclass CloseScrollStrategy {\n    constructor(_scrollDispatcher, _ngZone, _viewportRuler, _config) {\n        this._scrollDispatcher = _scrollDispatcher;\n        this._ngZone = _ngZone;\n        this._viewportRuler = _viewportRuler;\n        this._config = _config;\n        this._scrollSubscription = null;\n        /** Detaches the overlay ref and disables the scroll strategy. */\n        this._detach = () => {\n            this.disable();\n            if (this._overlayRef.hasAttached()) {\n                this._ngZone.run(() => this._overlayRef.detach());\n            }\n        };\n    }\n    /** Attaches this scroll strategy to an overlay. */\n    attach(overlayRef) {\n        if (this._overlayRef && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getMatScrollStrategyAlreadyAttachedError();\n        }\n        this._overlayRef = overlayRef;\n    }\n    /** Enables the closing of the attached overlay on scroll. */\n    enable() {\n        if (this._scrollSubscription) {\n            return;\n        }\n        const stream = this._scrollDispatcher.scrolled(0);\n        if (this._config && this._config.threshold && this._config.threshold > 1) {\n            this._initialScrollPosition = this._viewportRuler.getViewportScrollPosition().top;\n            this._scrollSubscription = stream.subscribe(() => {\n                const scrollPosition = this._viewportRuler.getViewportScrollPosition().top;\n                if (Math.abs(scrollPosition - this._initialScrollPosition) > this._config.threshold) {\n                    this._detach();\n                }\n                else {\n                    this._overlayRef.updatePosition();\n                }\n            });\n        }\n        else {\n            this._scrollSubscription = stream.subscribe(this._detach);\n        }\n    }\n    /** Disables the closing the attached overlay on scroll. */\n    disable() {\n        if (this._scrollSubscription) {\n            this._scrollSubscription.unsubscribe();\n            this._scrollSubscription = null;\n        }\n    }\n    detach() {\n        this.disable();\n        this._overlayRef = null;\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Scroll strategy that doesn't do anything. */\nclass NoopScrollStrategy {\n    /** Does nothing, as this scroll strategy is a no-op. */\n    enable() { }\n    /** Does nothing, as this scroll strategy is a no-op. */\n    disable() { }\n    /** Does nothing, as this scroll strategy is a no-op. */\n    attach() { }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Gets whether an element is scrolled outside of view by any of its parent scrolling containers.\n * @param element Dimensions of the element (from getBoundingClientRect)\n * @param scrollContainers Dimensions of element's scrolling containers (from getBoundingClientRect)\n * @returns Whether the element is scrolled out of view\n * @docs-private\n */\nfunction isElementScrolledOutsideView(element, scrollContainers) {\n    return scrollContainers.some(containerBounds => {\n        const outsideAbove = element.bottom < containerBounds.top;\n        const outsideBelow = element.top > containerBounds.bottom;\n        const outsideLeft = element.right < containerBounds.left;\n        const outsideRight = element.left > containerBounds.right;\n        return outsideAbove || outsideBelow || outsideLeft || outsideRight;\n    });\n}\n/**\n * Gets whether an element is clipped by any of its scrolling containers.\n * @param element Dimensions of the element (from getBoundingClientRect)\n * @param scrollContainers Dimensions of element's scrolling containers (from getBoundingClientRect)\n * @returns Whether the element is clipped\n * @docs-private\n */\nfunction isElementClippedByScrolling(element, scrollContainers) {\n    return scrollContainers.some(scrollContainerRect => {\n        const clippedAbove = element.top < scrollContainerRect.top;\n        const clippedBelow = element.bottom > scrollContainerRect.bottom;\n        const clippedLeft = element.left < scrollContainerRect.left;\n        const clippedRight = element.right > scrollContainerRect.right;\n        return clippedAbove || clippedBelow || clippedLeft || clippedRight;\n    });\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Strategy that will update the element position as the user is scrolling.\n */\nclass RepositionScrollStrategy {\n    constructor(_scrollDispatcher, _viewportRuler, _ngZone, _config) {\n        this._scrollDispatcher = _scrollDispatcher;\n        this._viewportRuler = _viewportRuler;\n        this._ngZone = _ngZone;\n        this._config = _config;\n        this._scrollSubscription = null;\n    }\n    /** Attaches this scroll strategy to an overlay. */\n    attach(overlayRef) {\n        if (this._overlayRef && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getMatScrollStrategyAlreadyAttachedError();\n        }\n        this._overlayRef = overlayRef;\n    }\n    /** Enables repositioning of the attached overlay on scroll. */\n    enable() {\n        if (!this._scrollSubscription) {\n            const throttle = this._config ? this._config.scrollThrottle : 0;\n            this._scrollSubscription = this._scrollDispatcher.scrolled(throttle).subscribe(() => {\n                this._overlayRef.updatePosition();\n                // TODO(crisbeto): make `close` on by default once all components can handle it.\n                if (this._config && this._config.autoClose) {\n                    const overlayRect = this._overlayRef.overlayElement.getBoundingClientRect();\n                    const { width, height } = this._viewportRuler.getViewportSize();\n                    // TODO(crisbeto): include all ancestor scroll containers here once\n                    // we have a way of exposing the trigger element to the scroll strategy.\n                    const parentRects = [{ width, height, bottom: height, right: width, top: 0, left: 0 }];\n                    if (isElementScrolledOutsideView(overlayRect, parentRects)) {\n                        this.disable();\n                        this._ngZone.run(() => this._overlayRef.detach());\n                    }\n                }\n            });\n        }\n    }\n    /** Disables repositioning of the attached overlay on scroll. */\n    disable() {\n        if (this._scrollSubscription) {\n            this._scrollSubscription.unsubscribe();\n            this._scrollSubscription = null;\n        }\n    }\n    detach() {\n        this.disable();\n        this._overlayRef = null;\n    }\n}\n\n/**\n * Options for how an overlay will handle scrolling.\n *\n * Users can provide a custom value for `ScrollStrategyOptions` to replace the default\n * behaviors. This class primarily acts as a factory for ScrollStrategy instances.\n */\nclass ScrollStrategyOptions {\n    constructor(_scrollDispatcher, _viewportRuler, _ngZone, document) {\n        this._scrollDispatcher = _scrollDispatcher;\n        this._viewportRuler = _viewportRuler;\n        this._ngZone = _ngZone;\n        /** Do nothing on scroll. */\n        this.noop = () => new NoopScrollStrategy();\n        /**\n         * Close the overlay as soon as the user scrolls.\n         * @param config Configuration to be used inside the scroll strategy.\n         */\n        this.close = (config) => new CloseScrollStrategy(this._scrollDispatcher, this._ngZone, this._viewportRuler, config);\n        /** Block scrolling. */\n        this.block = () => new BlockScrollStrategy(this._viewportRuler, this._document);\n        /**\n         * Update the overlay's position on scroll.\n         * @param config Configuration to be used inside the scroll strategy.\n         * Allows debouncing the reposition calls.\n         */\n        this.reposition = (config) => new RepositionScrollStrategy(this._scrollDispatcher, this._viewportRuler, this._ngZone, config);\n        this._document = document;\n    }\n}\nScrollStrategyOptions.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: ScrollStrategyOptions, deps: [{ token: i1.ScrollDispatcher }, { token: i1.ViewportRuler }, { token: i0.NgZone }, { token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Injectable });\nScrollStrategyOptions.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: ScrollStrategyOptions, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: ScrollStrategyOptions, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () {\n        return [{ type: i1.ScrollDispatcher }, { type: i1.ViewportRuler }, { type: i0.NgZone }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [DOCUMENT]\n                    }] }];\n    } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Initial configuration used when creating an overlay. */\nclass OverlayConfig {\n    constructor(config) {\n        /** Strategy to be used when handling scroll events while the overlay is open. */\n        this.scrollStrategy = new NoopScrollStrategy();\n        /** Custom class to add to the overlay pane. */\n        this.panelClass = '';\n        /** Whether the overlay has a backdrop. */\n        this.hasBackdrop = false;\n        /** Custom class to add to the backdrop */\n        this.backdropClass = 'cdk-overlay-dark-backdrop';\n        /**\n         * Whether the overlay should be disposed of when the user goes backwards/forwards in history.\n         * Note that this usually doesn't include clicking on links (unless the user is using\n         * the `HashLocationStrategy`).\n         */\n        this.disposeOnNavigation = false;\n        if (config) {\n            // Use `Iterable` instead of `Array` because TypeScript, as of 3.6.3,\n            // loses the array generic type in the `for of`. But we *also* have to use `Array` because\n            // typescript won't iterate over an `Iterable` unless you compile with `--downlevelIteration`\n            const configKeys = Object.keys(config);\n            for (const key of configKeys) {\n                if (config[key] !== undefined) {\n                    // TypeScript, as of version 3.5, sees the left-hand-side of this expression\n                    // as \"I don't know *which* key this is, so the only valid value is the intersection\n                    // of all the posible values.\" In this case, that happens to be `undefined`. TypeScript\n                    // is not smart enough to see that the right-hand-side is actually an access of the same\n                    // exact type with the same exact key, meaning that the value type must be identical.\n                    // So we use `any` to work around this.\n                    this[key] = config[key];\n                }\n            }\n        }\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** The points of the origin element and the overlay element to connect. */\nclass ConnectionPositionPair {\n    constructor(origin, overlay, \n    /** Offset along the X axis. */\n    offsetX, \n    /** Offset along the Y axis. */\n    offsetY, \n    /** Class(es) to be applied to the panel while this position is active. */\n    panelClass) {\n        this.offsetX = offsetX;\n        this.offsetY = offsetY;\n        this.panelClass = panelClass;\n        this.originX = origin.originX;\n        this.originY = origin.originY;\n        this.overlayX = overlay.overlayX;\n        this.overlayY = overlay.overlayY;\n    }\n}\n/**\n * Set of properties regarding the position of the origin and overlay relative to the viewport\n * with respect to the containing Scrollable elements.\n *\n * The overlay and origin are clipped if any part of their bounding client rectangle exceeds the\n * bounds of any one of the strategy's Scrollable's bounding client rectangle.\n *\n * The overlay and origin are outside view if there is no overlap between their bounding client\n * rectangle and any one of the strategy's Scrollable's bounding client rectangle.\n *\n *       -----------                    -----------\n *       | outside |                    | clipped |\n *       |  view   |              --------------------------\n *       |         |              |     |         |        |\n *       ----------               |     -----------        |\n *  --------------------------    |                        |\n *  |                        |    |      Scrollable        |\n *  |                        |    |                        |\n *  |                        |     --------------------------\n *  |      Scrollable        |\n *  |                        |\n *  --------------------------\n *\n *  @docs-private\n */\nclass ScrollingVisibility {\n}\n/** The change event emitted by the strategy when a fallback position is used. */\nclass ConnectedOverlayPositionChange {\n    constructor(\n    /** The position used as a result of this change. */\n    connectionPair, \n    /** @docs-private */\n    scrollableViewProperties) {\n        this.connectionPair = connectionPair;\n        this.scrollableViewProperties = scrollableViewProperties;\n    }\n}\n/**\n * Validates whether a vertical position property matches the expected values.\n * @param property Name of the property being validated.\n * @param value Value of the property being validated.\n * @docs-private\n */\nfunction validateVerticalPosition(property, value) {\n    if (value !== 'top' && value !== 'bottom' && value !== 'center') {\n        throw Error(`ConnectedPosition: Invalid ${property} \"${value}\". ` +\n            `Expected \"top\", \"bottom\" or \"center\".`);\n    }\n}\n/**\n * Validates whether a horizontal position property matches the expected values.\n * @param property Name of the property being validated.\n * @param value Value of the property being validated.\n * @docs-private\n */\nfunction validateHorizontalPosition(property, value) {\n    if (value !== 'start' && value !== 'end' && value !== 'center') {\n        throw Error(`ConnectedPosition: Invalid ${property} \"${value}\". ` +\n            `Expected \"start\", \"end\" or \"center\".`);\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Reference to an overlay that has been created with the Overlay service.\n * Used to manipulate or dispose of said overlay.\n */\nclass OverlayRef {\n    constructor(_portalOutlet, _host, _pane, _config, _ngZone, _keyboardDispatcher, _document, _location, _outsideClickDispatcher) {\n        this._portalOutlet = _portalOutlet;\n        this._host = _host;\n        this._pane = _pane;\n        this._config = _config;\n        this._ngZone = _ngZone;\n        this._keyboardDispatcher = _keyboardDispatcher;\n        this._document = _document;\n        this._location = _location;\n        this._outsideClickDispatcher = _outsideClickDispatcher;\n        this._backdropElement = null;\n        this._backdropClick = new Subject();\n        this._attachments = new Subject();\n        this._detachments = new Subject();\n        this._locationChanges = Subscription.EMPTY;\n        this._backdropClickHandler = (event) => this._backdropClick.next(event);\n        /** Stream of keydown events dispatched to this overlay. */\n        this._keydownEvents = new Subject();\n        /** Stream of mouse outside events dispatched to this overlay. */\n        this._outsidePointerEvents = new Subject();\n        if (_config.scrollStrategy) {\n            this._scrollStrategy = _config.scrollStrategy;\n            this._scrollStrategy.attach(this);\n        }\n        this._positionStrategy = _config.positionStrategy;\n    }\n    /** The overlay's HTML element */\n    get overlayElement() {\n        return this._pane;\n    }\n    /** The overlay's backdrop HTML element. */\n    get backdropElement() {\n        return this._backdropElement;\n    }\n    /**\n     * Wrapper around the panel element. Can be used for advanced\n     * positioning where a wrapper with specific styling is\n     * required around the overlay pane.\n     */\n    get hostElement() {\n        return this._host;\n    }\n    /**\n     * Attaches content, given via a Portal, to the overlay.\n     * If the overlay is configured to have a backdrop, it will be created.\n     *\n     * @param portal Portal instance to which to attach the overlay.\n     * @returns The portal attachment result.\n     */\n    attach(portal) {\n        let attachResult = this._portalOutlet.attach(portal);\n        // Update the pane element with the given configuration.\n        if (!this._host.parentElement && this._previousHostParent) {\n            this._previousHostParent.appendChild(this._host);\n        }\n        if (this._positionStrategy) {\n            this._positionStrategy.attach(this);\n        }\n        this._updateStackingOrder();\n        this._updateElementSize();\n        this._updateElementDirection();\n        if (this._scrollStrategy) {\n            this._scrollStrategy.enable();\n        }\n        // Update the position once the zone is stable so that the overlay will be fully rendered\n        // before attempting to position it, as the position may depend on the size of the rendered\n        // content.\n        this._ngZone.onStable.pipe(take(1)).subscribe(() => {\n            // The overlay could've been detached before the zone has stabilized.\n            if (this.hasAttached()) {\n                this.updatePosition();\n            }\n        });\n        // Enable pointer events for the overlay pane element.\n        this._togglePointerEvents(true);\n        if (this._config.hasBackdrop) {\n            this._attachBackdrop();\n        }\n        if (this._config.panelClass) {\n            this._toggleClasses(this._pane, this._config.panelClass, true);\n        }\n        // Only emit the `attachments` event once all other setup is done.\n        this._attachments.next();\n        // Track this overlay by the keyboard dispatcher\n        this._keyboardDispatcher.add(this);\n        if (this._config.disposeOnNavigation) {\n            this._locationChanges = this._location.subscribe(() => this.dispose());\n        }\n        this._outsideClickDispatcher.add(this);\n        return attachResult;\n    }\n    /**\n     * Detaches an overlay from a portal.\n     * @returns The portal detachment result.\n     */\n    detach() {\n        if (!this.hasAttached()) {\n            return;\n        }\n        this.detachBackdrop();\n        // When the overlay is detached, the pane element should disable pointer events.\n        // This is necessary because otherwise the pane element will cover the page and disable\n        // pointer events therefore. Depends on the position strategy and the applied pane boundaries.\n        this._togglePointerEvents(false);\n        if (this._positionStrategy && this._positionStrategy.detach) {\n            this._positionStrategy.detach();\n        }\n        if (this._scrollStrategy) {\n            this._scrollStrategy.disable();\n        }\n        const detachmentResult = this._portalOutlet.detach();\n        // Only emit after everything is detached.\n        this._detachments.next();\n        // Remove this overlay from keyboard dispatcher tracking.\n        this._keyboardDispatcher.remove(this);\n        // Keeping the host element in the DOM can cause scroll jank, because it still gets\n        // rendered, even though it's transparent and unclickable which is why we remove it.\n        this._detachContentWhenStable();\n        this._locationChanges.unsubscribe();\n        this._outsideClickDispatcher.remove(this);\n        return detachmentResult;\n    }\n    /** Cleans up the overlay from the DOM. */\n    dispose() {\n        var _a;\n        const isAttached = this.hasAttached();\n        if (this._positionStrategy) {\n            this._positionStrategy.dispose();\n        }\n        this._disposeScrollStrategy();\n        this._disposeBackdrop(this._backdropElement);\n        this._locationChanges.unsubscribe();\n        this._keyboardDispatcher.remove(this);\n        this._portalOutlet.dispose();\n        this._attachments.complete();\n        this._backdropClick.complete();\n        this._keydownEvents.complete();\n        this._outsidePointerEvents.complete();\n        this._outsideClickDispatcher.remove(this);\n        (_a = this._host) === null || _a === void 0 ? void 0 : _a.remove();\n        this._previousHostParent = this._pane = this._host = null;\n        if (isAttached) {\n            this._detachments.next();\n        }\n        this._detachments.complete();\n    }\n    /** Whether the overlay has attached content. */\n    hasAttached() {\n        return this._portalOutlet.hasAttached();\n    }\n    /** Gets an observable that emits when the backdrop has been clicked. */\n    backdropClick() {\n        return this._backdropClick;\n    }\n    /** Gets an observable that emits when the overlay has been attached. */\n    attachments() {\n        return this._attachments;\n    }\n    /** Gets an observable that emits when the overlay has been detached. */\n    detachments() {\n        return this._detachments;\n    }\n    /** Gets an observable of keydown events targeted to this overlay. */\n    keydownEvents() {\n        return this._keydownEvents;\n    }\n    /** Gets an observable of pointer events targeted outside this overlay. */\n    outsidePointerEvents() {\n        return this._outsidePointerEvents;\n    }\n    /** Gets the current overlay configuration, which is immutable. */\n    getConfig() {\n        return this._config;\n    }\n    /** Updates the position of the overlay based on the position strategy. */\n    updatePosition() {\n        if (this._positionStrategy) {\n            this._positionStrategy.apply();\n        }\n    }\n    /** Switches to a new position strategy and updates the overlay position. */\n    updatePositionStrategy(strategy) {\n        if (strategy === this._positionStrategy) {\n            return;\n        }\n        if (this._positionStrategy) {\n            this._positionStrategy.dispose();\n        }\n        this._positionStrategy = strategy;\n        if (this.hasAttached()) {\n            strategy.attach(this);\n            this.updatePosition();\n        }\n    }\n    /** Update the size properties of the overlay. */\n    updateSize(sizeConfig) {\n        this._config = Object.assign(Object.assign({}, this._config), sizeConfig);\n        this._updateElementSize();\n    }\n    /** Sets the LTR/RTL direction for the overlay. */\n    setDirection(dir) {\n        this._config = Object.assign(Object.assign({}, this._config), { direction: dir });\n        this._updateElementDirection();\n    }\n    /** Add a CSS class or an array of classes to the overlay pane. */\n    addPanelClass(classes) {\n        if (this._pane) {\n            this._toggleClasses(this._pane, classes, true);\n        }\n    }\n    /** Remove a CSS class or an array of classes from the overlay pane. */\n    removePanelClass(classes) {\n        if (this._pane) {\n            this._toggleClasses(this._pane, classes, false);\n        }\n    }\n    /**\n     * Returns the layout direction of the overlay panel.\n     */\n    getDirection() {\n        const direction = this._config.direction;\n        if (!direction) {\n            return 'ltr';\n        }\n        return typeof direction === 'string' ? direction : direction.value;\n    }\n    /** Switches to a new scroll strategy. */\n    updateScrollStrategy(strategy) {\n        if (strategy === this._scrollStrategy) {\n            return;\n        }\n        this._disposeScrollStrategy();\n        this._scrollStrategy = strategy;\n        if (this.hasAttached()) {\n            strategy.attach(this);\n            strategy.enable();\n        }\n    }\n    /** Updates the text direction of the overlay panel. */\n    _updateElementDirection() {\n        this._host.setAttribute('dir', this.getDirection());\n    }\n    /** Updates the size of the overlay element based on the overlay config. */\n    _updateElementSize() {\n        if (!this._pane) {\n            return;\n        }\n        const style = this._pane.style;\n        style.width = coerceCssPixelValue(this._config.width);\n        style.height = coerceCssPixelValue(this._config.height);\n        style.minWidth = coerceCssPixelValue(this._config.minWidth);\n        style.minHeight = coerceCssPixelValue(this._config.minHeight);\n        style.maxWidth = coerceCssPixelValue(this._config.maxWidth);\n        style.maxHeight = coerceCssPixelValue(this._config.maxHeight);\n    }\n    /** Toggles the pointer events for the overlay pane element. */\n    _togglePointerEvents(enablePointer) {\n        this._pane.style.pointerEvents = enablePointer ? '' : 'none';\n    }\n    /** Attaches a backdrop for this overlay. */\n    _attachBackdrop() {\n        const showingClass = 'cdk-overlay-backdrop-showing';\n        this._backdropElement = this._document.createElement('div');\n        this._backdropElement.classList.add('cdk-overlay-backdrop');\n        if (this._config.backdropClass) {\n            this._toggleClasses(this._backdropElement, this._config.backdropClass, true);\n        }\n        // Insert the backdrop before the pane in the DOM order,\n        // in order to handle stacked overlays properly.\n        this._host.parentElement.insertBefore(this._backdropElement, this._host);\n        // Forward backdrop clicks such that the consumer of the overlay can perform whatever\n        // action desired when such a click occurs (usually closing the overlay).\n        this._backdropElement.addEventListener('click', this._backdropClickHandler);\n        // Add class to fade-in the backdrop after one frame.\n        if (typeof requestAnimationFrame !== 'undefined') {\n            this._ngZone.runOutsideAngular(() => {\n                requestAnimationFrame(() => {\n                    if (this._backdropElement) {\n                        this._backdropElement.classList.add(showingClass);\n                    }\n                });\n            });\n        }\n        else {\n            this._backdropElement.classList.add(showingClass);\n        }\n    }\n    /**\n     * Updates the stacking order of the element, moving it to the top if necessary.\n     * This is required in cases where one overlay was detached, while another one,\n     * that should be behind it, was destroyed. The next time both of them are opened,\n     * the stacking will be wrong, because the detached element's pane will still be\n     * in its original DOM position.\n     */\n    _updateStackingOrder() {\n        if (this._host.nextSibling) {\n            this._host.parentNode.appendChild(this._host);\n        }\n    }\n    /** Detaches the backdrop (if any) associated with the overlay. */\n    detachBackdrop() {\n        const backdropToDetach = this._backdropElement;\n        if (!backdropToDetach) {\n            return;\n        }\n        let timeoutId;\n        const finishDetach = () => {\n            // It may not be attached to anything in certain cases (e.g. unit tests).\n            if (backdropToDetach) {\n                backdropToDetach.removeEventListener('click', this._backdropClickHandler);\n                backdropToDetach.removeEventListener('transitionend', finishDetach);\n                this._disposeBackdrop(backdropToDetach);\n            }\n            if (this._config.backdropClass) {\n                this._toggleClasses(backdropToDetach, this._config.backdropClass, false);\n            }\n            clearTimeout(timeoutId);\n        };\n        backdropToDetach.classList.remove('cdk-overlay-backdrop-showing');\n        this._ngZone.runOutsideAngular(() => {\n            backdropToDetach.addEventListener('transitionend', finishDetach);\n        });\n        // If the backdrop doesn't have a transition, the `transitionend` event won't fire.\n        // In this case we make it unclickable and we try to remove it after a delay.\n        backdropToDetach.style.pointerEvents = 'none';\n        // Run this outside the Angular zone because there's nothing that Angular cares about.\n        // If it were to run inside the Angular zone, every test that used Overlay would have to be\n        // either async or fakeAsync.\n        timeoutId = this._ngZone.runOutsideAngular(() => setTimeout(finishDetach, 500));\n    }\n    /** Toggles a single CSS class or an array of classes on an element. */\n    _toggleClasses(element, cssClasses, isAdd) {\n        const classes = coerceArray(cssClasses || []).filter(c => !!c);\n        if (classes.length) {\n            isAdd ? element.classList.add(...classes) : element.classList.remove(...classes);\n        }\n    }\n    /** Detaches the overlay content next time the zone stabilizes. */\n    _detachContentWhenStable() {\n        // Normally we wouldn't have to explicitly run this outside the `NgZone`, however\n        // if the consumer is using `zone-patch-rxjs`, the `Subscription.unsubscribe` call will\n        // be patched to run inside the zone, which will throw us into an infinite loop.\n        this._ngZone.runOutsideAngular(() => {\n            // We can't remove the host here immediately, because the overlay pane's content\n            // might still be animating. This stream helps us avoid interrupting the animation\n            // by waiting for the pane to become empty.\n            const subscription = this._ngZone.onStable\n                .pipe(takeUntil(merge(this._attachments, this._detachments)))\n                .subscribe(() => {\n                // Needs a couple of checks for the pane and host, because\n                // they may have been removed by the time the zone stabilizes.\n                if (!this._pane || !this._host || this._pane.children.length === 0) {\n                    if (this._pane && this._config.panelClass) {\n                        this._toggleClasses(this._pane, this._config.panelClass, false);\n                    }\n                    if (this._host && this._host.parentElement) {\n                        this._previousHostParent = this._host.parentElement;\n                        this._host.remove();\n                    }\n                    subscription.unsubscribe();\n                }\n            });\n        });\n    }\n    /** Disposes of a scroll strategy. */\n    _disposeScrollStrategy() {\n        const scrollStrategy = this._scrollStrategy;\n        if (scrollStrategy) {\n            scrollStrategy.disable();\n            if (scrollStrategy.detach) {\n                scrollStrategy.detach();\n            }\n        }\n    }\n    /** Removes a backdrop element from the DOM. */\n    _disposeBackdrop(backdrop) {\n        if (backdrop) {\n            backdrop.remove();\n            // It is possible that a new portal has been attached to this overlay since we started\n            // removing the backdrop. If that is the case, only clear the backdrop reference if it\n            // is still the same instance that we started to remove.\n            if (this._backdropElement === backdrop) {\n                this._backdropElement = null;\n            }\n        }\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Container inside which all overlays will render. */\nclass OverlayContainer {\n    constructor(document, _platform) {\n        this._platform = _platform;\n        this._document = document;\n    }\n    ngOnDestroy() {\n        var _a;\n        (_a = this._containerElement) === null || _a === void 0 ? void 0 : _a.remove();\n    }\n    /**\n     * This method returns the overlay container element. It will lazily\n     * create the element the first time it is called to facilitate using\n     * the container in non-browser environments.\n     * @returns the container element\n     */\n    getContainerElement() {\n        if (!this._containerElement) {\n            this._createContainer();\n        }\n        return this._containerElement;\n    }\n    /**\n     * Create the overlay container element, which is simply a div\n     * with the 'cdk-overlay-container' class on the document body.\n     */\n    _createContainer() {\n        const containerClass = 'cdk-overlay-container';\n        // TODO(crisbeto): remove the testing check once we have an overlay testing\n        // module or Angular starts tearing down the testing `NgModule`. See:\n        // https://github.com/angular/angular/issues/18831\n        if (this._platform.isBrowser || _isTestEnvironment()) {\n            const oppositePlatformContainers = this._document.querySelectorAll(`.${containerClass}[platform=\"server\"], ` + `.${containerClass}[platform=\"test\"]`);\n            // Remove any old containers from the opposite platform.\n            // This can happen when transitioning from the server to the client.\n            for (let i = 0; i < oppositePlatformContainers.length; i++) {\n                oppositePlatformContainers[i].remove();\n            }\n        }\n        const container = this._document.createElement('div');\n        container.classList.add(containerClass);\n        // A long time ago we kept adding new overlay containers whenever a new app was instantiated,\n        // but at some point we added logic which clears the duplicate ones in order to avoid leaks.\n        // The new logic was a little too aggressive since it was breaking some legitimate use cases.\n        // To mitigate the problem we made it so that only containers from a different platform are\n        // cleared, but the side-effect was that people started depending on the overly-aggressive\n        // logic to clean up their tests for them. Until we can introduce an overlay-specific testing\n        // module which does the cleanup, we try to detect that we're in a test environment and we\n        // always clear the container. See #17006.\n        // TODO(crisbeto): remove the test environment check once we have an overlay testing module.\n        if (_isTestEnvironment()) {\n            container.setAttribute('platform', 'test');\n        }\n        else if (!this._platform.isBrowser) {\n            container.setAttribute('platform', 'server');\n        }\n        this._document.body.appendChild(container);\n        this._containerElement = container;\n    }\n}\nOverlayContainer.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: OverlayContainer, deps: [{ token: DOCUMENT }, { token: i1$1.Platform }], target: i0.ɵɵFactoryTarget.Injectable });\nOverlayContainer.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: OverlayContainer, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: OverlayContainer, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () {\n        return [{ type: undefined, decorators: [{\n                        type: Inject,\n                        args: [DOCUMENT]\n                    }] }, { type: i1$1.Platform }];\n    } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// TODO: refactor clipping detection into a separate thing (part of scrolling module)\n// TODO: doesn't handle both flexible width and height when it has to scroll along both axis.\n/** Class to be added to the overlay bounding box. */\nconst boundingBoxClass = 'cdk-overlay-connected-position-bounding-box';\n/** Regex used to split a string on its CSS units. */\nconst cssUnitPattern = /([A-Za-z%]+)$/;\n/**\n * A strategy for positioning overlays. Using this strategy, an overlay is given an\n * implicit position relative some origin element. The relative position is defined in terms of\n * a point on the origin element that is connected to a point on the overlay element. For example,\n * a basic dropdown is connecting the bottom-left corner of the origin to the top-left corner\n * of the overlay.\n */\nclass FlexibleConnectedPositionStrategy {\n    constructor(connectedTo, _viewportRuler, _document, _platform, _overlayContainer) {\n        this._viewportRuler = _viewportRuler;\n        this._document = _document;\n        this._platform = _platform;\n        this._overlayContainer = _overlayContainer;\n        /** Last size used for the bounding box. Used to avoid resizing the overlay after open. */\n        this._lastBoundingBoxSize = { width: 0, height: 0 };\n        /** Whether the overlay was pushed in a previous positioning. */\n        this._isPushed = false;\n        /** Whether the overlay can be pushed on-screen on the initial open. */\n        this._canPush = true;\n        /** Whether the overlay can grow via flexible width/height after the initial open. */\n        this._growAfterOpen = false;\n        /** Whether the overlay's width and height can be constrained to fit within the viewport. */\n        this._hasFlexibleDimensions = true;\n        /** Whether the overlay position is locked. */\n        this._positionLocked = false;\n        /** Amount of space that must be maintained between the overlay and the edge of the viewport. */\n        this._viewportMargin = 0;\n        /** The Scrollable containers used to check scrollable view properties on position change. */\n        this._scrollables = [];\n        /** Ordered list of preferred positions, from most to least desirable. */\n        this._preferredPositions = [];\n        /** Subject that emits whenever the position changes. */\n        this._positionChanges = new Subject();\n        /** Subscription to viewport size changes. */\n        this._resizeSubscription = Subscription.EMPTY;\n        /** Default offset for the overlay along the x axis. */\n        this._offsetX = 0;\n        /** Default offset for the overlay along the y axis. */\n        this._offsetY = 0;\n        /** Keeps track of the CSS classes that the position strategy has applied on the overlay panel. */\n        this._appliedPanelClasses = [];\n        /** Observable sequence of position changes. */\n        this.positionChanges = this._positionChanges;\n        this.setOrigin(connectedTo);\n    }\n    /** Ordered list of preferred positions, from most to least desirable. */\n    get positions() {\n        return this._preferredPositions;\n    }\n    /** Attaches this position strategy to an overlay. */\n    attach(overlayRef) {\n        if (this._overlayRef &&\n            overlayRef !== this._overlayRef &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error('This position strategy is already attached to an overlay');\n        }\n        this._validatePositions();\n        overlayRef.hostElement.classList.add(boundingBoxClass);\n        this._overlayRef = overlayRef;\n        this._boundingBox = overlayRef.hostElement;\n        this._pane = overlayRef.overlayElement;\n        this._isDisposed = false;\n        this._isInitialRender = true;\n        this._lastPosition = null;\n        this._resizeSubscription.unsubscribe();\n        this._resizeSubscription = this._viewportRuler.change().subscribe(() => {\n            // When the window is resized, we want to trigger the next reposition as if it\n            // was an initial render, in order for the strategy to pick a new optimal position,\n            // otherwise position locking will cause it to stay at the old one.\n            this._isInitialRender = true;\n            this.apply();\n        });\n    }\n    /**\n     * Updates the position of the overlay element, using whichever preferred position relative\n     * to the origin best fits on-screen.\n     *\n     * The selection of a position goes as follows:\n     *  - If any positions fit completely within the viewport as-is,\n     *      choose the first position that does so.\n     *  - If flexible dimensions are enabled and at least one satifies the given minimum width/height,\n     *      choose the position with the greatest available size modified by the positions' weight.\n     *  - If pushing is enabled, take the position that went off-screen the least and push it\n     *      on-screen.\n     *  - If none of the previous criteria were met, use the position that goes off-screen the least.\n     * @docs-private\n     */\n    apply() {\n        // We shouldn't do anything if the strategy was disposed or we're on the server.\n        if (this._isDisposed || !this._platform.isBrowser) {\n            return;\n        }\n        // If the position has been applied already (e.g. when the overlay was opened) and the\n        // consumer opted into locking in the position, re-use the old position, in order to\n        // prevent the overlay from jumping around.\n        if (!this._isInitialRender && this._positionLocked && this._lastPosition) {\n            this.reapplyLastPosition();\n            return;\n        }\n        this._clearPanelClasses();\n        this._resetOverlayElementStyles();\n        this._resetBoundingBoxStyles();\n        // We need the bounding rects for the origin and the overlay to determine how to position\n        // the overlay relative to the origin.\n        // We use the viewport rect to determine whether a position would go off-screen.\n        this._viewportRect = this._getNarrowedViewportRect();\n        this._originRect = this._getOriginRect();\n        this._overlayRect = this._pane.getBoundingClientRect();\n        const originRect = this._originRect;\n        const overlayRect = this._overlayRect;\n        const viewportRect = this._viewportRect;\n        // Positions where the overlay will fit with flexible dimensions.\n        const flexibleFits = [];\n        // Fallback if none of the preferred positions fit within the viewport.\n        let fallback;\n        // Go through each of the preferred positions looking for a good fit.\n        // If a good fit is found, it will be applied immediately.\n        for (let pos of this._preferredPositions) {\n            // Get the exact (x, y) coordinate for the point-of-origin on the origin element.\n            let originPoint = this._getOriginPoint(originRect, pos);\n            // From that point-of-origin, get the exact (x, y) coordinate for the top-left corner of the\n            // overlay in this position. We use the top-left corner for calculations and later translate\n            // this into an appropriate (top, left, bottom, right) style.\n            let overlayPoint = this._getOverlayPoint(originPoint, overlayRect, pos);\n            // Calculate how well the overlay would fit into the viewport with this point.\n            let overlayFit = this._getOverlayFit(overlayPoint, overlayRect, viewportRect, pos);\n            // If the overlay, without any further work, fits into the viewport, use this position.\n            if (overlayFit.isCompletelyWithinViewport) {\n                this._isPushed = false;\n                this._applyPosition(pos, originPoint);\n                return;\n            }\n            // If the overlay has flexible dimensions, we can use this position\n            // so long as there's enough space for the minimum dimensions.\n            if (this._canFitWithFlexibleDimensions(overlayFit, overlayPoint, viewportRect)) {\n                // Save positions where the overlay will fit with flexible dimensions. We will use these\n                // if none of the positions fit *without* flexible dimensions.\n                flexibleFits.push({\n                    position: pos,\n                    origin: originPoint,\n                    overlayRect,\n                    boundingBoxRect: this._calculateBoundingBoxRect(originPoint, pos),\n                });\n                continue;\n            }\n            // If the current preferred position does not fit on the screen, remember the position\n            // if it has more visible area on-screen than we've seen and move onto the next preferred\n            // position.\n            if (!fallback || fallback.overlayFit.visibleArea < overlayFit.visibleArea) {\n                fallback = { overlayFit, overlayPoint, originPoint, position: pos, overlayRect };\n            }\n        }\n        // If there are any positions where the overlay would fit with flexible dimensions, choose the\n        // one that has the greatest area available modified by the position's weight\n        if (flexibleFits.length) {\n            let bestFit = null;\n            let bestScore = -1;\n            for (const fit of flexibleFits) {\n                const score = fit.boundingBoxRect.width * fit.boundingBoxRect.height * (fit.position.weight || 1);\n                if (score > bestScore) {\n                    bestScore = score;\n                    bestFit = fit;\n                }\n            }\n            this._isPushed = false;\n            this._applyPosition(bestFit.position, bestFit.origin);\n            return;\n        }\n        // When none of the preferred positions fit within the viewport, take the position\n        // that went off-screen the least and attempt to push it on-screen.\n        if (this._canPush) {\n            // TODO(jelbourn): after pushing, the opening \"direction\" of the overlay might not make sense.\n            this._isPushed = true;\n            this._applyPosition(fallback.position, fallback.originPoint);\n            return;\n        }\n        // All options for getting the overlay within the viewport have been exhausted, so go with the\n        // position that went off-screen the least.\n        this._applyPosition(fallback.position, fallback.originPoint);\n    }\n    detach() {\n        this._clearPanelClasses();\n        this._lastPosition = null;\n        this._previousPushAmount = null;\n        this._resizeSubscription.unsubscribe();\n    }\n    /** Cleanup after the element gets destroyed. */\n    dispose() {\n        if (this._isDisposed) {\n            return;\n        }\n        // We can't use `_resetBoundingBoxStyles` here, because it resets\n        // some properties to zero, rather than removing them.\n        if (this._boundingBox) {\n            extendStyles(this._boundingBox.style, {\n                top: '',\n                left: '',\n                right: '',\n                bottom: '',\n                height: '',\n                width: '',\n                alignItems: '',\n                justifyContent: '',\n            });\n        }\n        if (this._pane) {\n            this._resetOverlayElementStyles();\n        }\n        if (this._overlayRef) {\n            this._overlayRef.hostElement.classList.remove(boundingBoxClass);\n        }\n        this.detach();\n        this._positionChanges.complete();\n        this._overlayRef = this._boundingBox = null;\n        this._isDisposed = true;\n    }\n    /**\n     * This re-aligns the overlay element with the trigger in its last calculated position,\n     * even if a position higher in the \"preferred positions\" list would now fit. This\n     * allows one to re-align the panel without changing the orientation of the panel.\n     */\n    reapplyLastPosition() {\n        if (!this._isDisposed && (!this._platform || this._platform.isBrowser)) {\n            this._originRect = this._getOriginRect();\n            this._overlayRect = this._pane.getBoundingClientRect();\n            this._viewportRect = this._getNarrowedViewportRect();\n            const lastPosition = this._lastPosition || this._preferredPositions[0];\n            const originPoint = this._getOriginPoint(this._originRect, lastPosition);\n            this._applyPosition(lastPosition, originPoint);\n        }\n    }\n    /**\n     * Sets the list of Scrollable containers that host the origin element so that\n     * on reposition we can evaluate if it or the overlay has been clipped or outside view. Every\n     * Scrollable must be an ancestor element of the strategy's origin element.\n     */\n    withScrollableContainers(scrollables) {\n        this._scrollables = scrollables;\n        return this;\n    }\n    /**\n     * Adds new preferred positions.\n     * @param positions List of positions options for this overlay.\n     */\n    withPositions(positions) {\n        this._preferredPositions = positions;\n        // If the last calculated position object isn't part of the positions anymore, clear\n        // it in order to avoid it being picked up if the consumer tries to re-apply.\n        if (positions.indexOf(this._lastPosition) === -1) {\n            this._lastPosition = null;\n        }\n        this._validatePositions();\n        return this;\n    }\n    /**\n     * Sets a minimum distance the overlay may be positioned to the edge of the viewport.\n     * @param margin Required margin between the overlay and the viewport edge in pixels.\n     */\n    withViewportMargin(margin) {\n        this._viewportMargin = margin;\n        return this;\n    }\n    /** Sets whether the overlay's width and height can be constrained to fit within the viewport. */\n    withFlexibleDimensions(flexibleDimensions = true) {\n        this._hasFlexibleDimensions = flexibleDimensions;\n        return this;\n    }\n    /** Sets whether the overlay can grow after the initial open via flexible width/height. */\n    withGrowAfterOpen(growAfterOpen = true) {\n        this._growAfterOpen = growAfterOpen;\n        return this;\n    }\n    /** Sets whether the overlay can be pushed on-screen if none of the provided positions fit. */\n    withPush(canPush = true) {\n        this._canPush = canPush;\n        return this;\n    }\n    /**\n     * Sets whether the overlay's position should be locked in after it is positioned\n     * initially. When an overlay is locked in, it won't attempt to reposition itself\n     * when the position is re-applied (e.g. when the user scrolls away).\n     * @param isLocked Whether the overlay should locked in.\n     */\n    withLockedPosition(isLocked = true) {\n        this._positionLocked = isLocked;\n        return this;\n    }\n    /**\n     * Sets the origin, relative to which to position the overlay.\n     * Using an element origin is useful for building components that need to be positioned\n     * relatively to a trigger (e.g. dropdown menus or tooltips), whereas using a point can be\n     * used for cases like contextual menus which open relative to the user's pointer.\n     * @param origin Reference to the new origin.\n     */\n    setOrigin(origin) {\n        this._origin = origin;\n        return this;\n    }\n    /**\n     * Sets the default offset for the overlay's connection point on the x-axis.\n     * @param offset New offset in the X axis.\n     */\n    withDefaultOffsetX(offset) {\n        this._offsetX = offset;\n        return this;\n    }\n    /**\n     * Sets the default offset for the overlay's connection point on the y-axis.\n     * @param offset New offset in the Y axis.\n     */\n    withDefaultOffsetY(offset) {\n        this._offsetY = offset;\n        return this;\n    }\n    /**\n     * Configures that the position strategy should set a `transform-origin` on some elements\n     * inside the overlay, depending on the current position that is being applied. This is\n     * useful for the cases where the origin of an animation can change depending on the\n     * alignment of the overlay.\n     * @param selector CSS selector that will be used to find the target\n     *    elements onto which to set the transform origin.\n     */\n    withTransformOriginOn(selector) {\n        this._transformOriginSelector = selector;\n        return this;\n    }\n    /**\n     * Gets the (x, y) coordinate of a connection point on the origin based on a relative position.\n     */\n    _getOriginPoint(originRect, pos) {\n        let x;\n        if (pos.originX == 'center') {\n            // Note: when centering we should always use the `left`\n            // offset, otherwise the position will be wrong in RTL.\n            x = originRect.left + originRect.width / 2;\n        }\n        else {\n            const startX = this._isRtl() ? originRect.right : originRect.left;\n            const endX = this._isRtl() ? originRect.left : originRect.right;\n            x = pos.originX == 'start' ? startX : endX;\n        }\n        let y;\n        if (pos.originY == 'center') {\n            y = originRect.top + originRect.height / 2;\n        }\n        else {\n            y = pos.originY == 'top' ? originRect.top : originRect.bottom;\n        }\n        return { x, y };\n    }\n    /**\n     * Gets the (x, y) coordinate of the top-left corner of the overlay given a given position and\n     * origin point to which the overlay should be connected.\n     */\n    _getOverlayPoint(originPoint, overlayRect, pos) {\n        // Calculate the (overlayStartX, overlayStartY), the start of the\n        // potential overlay position relative to the origin point.\n        let overlayStartX;\n        if (pos.overlayX == 'center') {\n            overlayStartX = -overlayRect.width / 2;\n        }\n        else if (pos.overlayX === 'start') {\n            overlayStartX = this._isRtl() ? -overlayRect.width : 0;\n        }\n        else {\n            overlayStartX = this._isRtl() ? 0 : -overlayRect.width;\n        }\n        let overlayStartY;\n        if (pos.overlayY == 'center') {\n            overlayStartY = -overlayRect.height / 2;\n        }\n        else {\n            overlayStartY = pos.overlayY == 'top' ? 0 : -overlayRect.height;\n        }\n        // The (x, y) coordinates of the overlay.\n        return {\n            x: originPoint.x + overlayStartX,\n            y: originPoint.y + overlayStartY,\n        };\n    }\n    /** Gets how well an overlay at the given point will fit within the viewport. */\n    _getOverlayFit(point, rawOverlayRect, viewport, position) {\n        // Round the overlay rect when comparing against the\n        // viewport, because the viewport is always rounded.\n        const overlay = getRoundedBoundingClientRect(rawOverlayRect);\n        let { x, y } = point;\n        let offsetX = this._getOffset(position, 'x');\n        let offsetY = this._getOffset(position, 'y');\n        // Account for the offsets since they could push the overlay out of the viewport.\n        if (offsetX) {\n            x += offsetX;\n        }\n        if (offsetY) {\n            y += offsetY;\n        }\n        // How much the overlay would overflow at this position, on each side.\n        let leftOverflow = 0 - x;\n        let rightOverflow = x + overlay.width - viewport.width;\n        let topOverflow = 0 - y;\n        let bottomOverflow = y + overlay.height - viewport.height;\n        // Visible parts of the element on each axis.\n        let visibleWidth = this._subtractOverflows(overlay.width, leftOverflow, rightOverflow);\n        let visibleHeight = this._subtractOverflows(overlay.height, topOverflow, bottomOverflow);\n        let visibleArea = visibleWidth * visibleHeight;\n        return {\n            visibleArea,\n            isCompletelyWithinViewport: overlay.width * overlay.height === visibleArea,\n            fitsInViewportVertically: visibleHeight === overlay.height,\n            fitsInViewportHorizontally: visibleWidth == overlay.width,\n        };\n    }\n    /**\n     * Whether the overlay can fit within the viewport when it may resize either its width or height.\n     * @param fit How well the overlay fits in the viewport at some position.\n     * @param point The (x, y) coordinates of the overlat at some position.\n     * @param viewport The geometry of the viewport.\n     */\n    _canFitWithFlexibleDimensions(fit, point, viewport) {\n        if (this._hasFlexibleDimensions) {\n            const availableHeight = viewport.bottom - point.y;\n            const availableWidth = viewport.right - point.x;\n            const minHeight = getPixelValue(this._overlayRef.getConfig().minHeight);\n            const minWidth = getPixelValue(this._overlayRef.getConfig().minWidth);\n            const verticalFit = fit.fitsInViewportVertically || (minHeight != null && minHeight <= availableHeight);\n            const horizontalFit = fit.fitsInViewportHorizontally || (minWidth != null && minWidth <= availableWidth);\n            return verticalFit && horizontalFit;\n        }\n        return false;\n    }\n    /**\n     * Gets the point at which the overlay can be \"pushed\" on-screen. If the overlay is larger than\n     * the viewport, the top-left corner will be pushed on-screen (with overflow occuring on the\n     * right and bottom).\n     *\n     * @param start Starting point from which the overlay is pushed.\n     * @param overlay Dimensions of the overlay.\n     * @param scrollPosition Current viewport scroll position.\n     * @returns The point at which to position the overlay after pushing. This is effectively a new\n     *     originPoint.\n     */\n    _pushOverlayOnScreen(start, rawOverlayRect, scrollPosition) {\n        // If the position is locked and we've pushed the overlay already, reuse the previous push\n        // amount, rather than pushing it again. If we were to continue pushing, the element would\n        // remain in the viewport, which goes against the expectations when position locking is enabled.\n        if (this._previousPushAmount && this._positionLocked) {\n            return {\n                x: start.x + this._previousPushAmount.x,\n                y: start.y + this._previousPushAmount.y,\n            };\n        }\n        // Round the overlay rect when comparing against the\n        // viewport, because the viewport is always rounded.\n        const overlay = getRoundedBoundingClientRect(rawOverlayRect);\n        const viewport = this._viewportRect;\n        // Determine how much the overlay goes outside the viewport on each\n        // side, which we'll use to decide which direction to push it.\n        const overflowRight = Math.max(start.x + overlay.width - viewport.width, 0);\n        const overflowBottom = Math.max(start.y + overlay.height - viewport.height, 0);\n        const overflowTop = Math.max(viewport.top - scrollPosition.top - start.y, 0);\n        const overflowLeft = Math.max(viewport.left - scrollPosition.left - start.x, 0);\n        // Amount by which to push the overlay in each axis such that it remains on-screen.\n        let pushX = 0;\n        let pushY = 0;\n        // If the overlay fits completely within the bounds of the viewport, push it from whichever\n        // direction is goes off-screen. Otherwise, push the top-left corner such that its in the\n        // viewport and allow for the trailing end of the overlay to go out of bounds.\n        if (overlay.width <= viewport.width) {\n            pushX = overflowLeft || -overflowRight;\n        }\n        else {\n            pushX = start.x < this._viewportMargin ? viewport.left - scrollPosition.left - start.x : 0;\n        }\n        if (overlay.height <= viewport.height) {\n            pushY = overflowTop || -overflowBottom;\n        }\n        else {\n            pushY = start.y < this._viewportMargin ? viewport.top - scrollPosition.top - start.y : 0;\n        }\n        this._previousPushAmount = { x: pushX, y: pushY };\n        return {\n            x: start.x + pushX,\n            y: start.y + pushY,\n        };\n    }\n    /**\n     * Applies a computed position to the overlay and emits a position change.\n     * @param position The position preference\n     * @param originPoint The point on the origin element where the overlay is connected.\n     */\n    _applyPosition(position, originPoint) {\n        this._setTransformOrigin(position);\n        this._setOverlayElementStyles(originPoint, position);\n        this._setBoundingBoxStyles(originPoint, position);\n        if (position.panelClass) {\n            this._addPanelClasses(position.panelClass);\n        }\n        // Save the last connected position in case the position needs to be re-calculated.\n        this._lastPosition = position;\n        // Notify that the position has been changed along with its change properties.\n        // We only emit if we've got any subscriptions, because the scroll visibility\n        // calculcations can be somewhat expensive.\n        if (this._positionChanges.observers.length) {\n            const scrollableViewProperties = this._getScrollVisibility();\n            const changeEvent = new ConnectedOverlayPositionChange(position, scrollableViewProperties);\n            this._positionChanges.next(changeEvent);\n        }\n        this._isInitialRender = false;\n    }\n    /** Sets the transform origin based on the configured selector and the passed-in position.  */\n    _setTransformOrigin(position) {\n        if (!this._transformOriginSelector) {\n            return;\n        }\n        const elements = this._boundingBox.querySelectorAll(this._transformOriginSelector);\n        let xOrigin;\n        let yOrigin = position.overlayY;\n        if (position.overlayX === 'center') {\n            xOrigin = 'center';\n        }\n        else if (this._isRtl()) {\n            xOrigin = position.overlayX === 'start' ? 'right' : 'left';\n        }\n        else {\n            xOrigin = position.overlayX === 'start' ? 'left' : 'right';\n        }\n        for (let i = 0; i < elements.length; i++) {\n            elements[i].style.transformOrigin = `${xOrigin} ${yOrigin}`;\n        }\n    }\n    /**\n     * Gets the position and size of the overlay's sizing container.\n     *\n     * This method does no measuring and applies no styles so that we can cheaply compute the\n     * bounds for all positions and choose the best fit based on these results.\n     */\n    _calculateBoundingBoxRect(origin, position) {\n        const viewport = this._viewportRect;\n        const isRtl = this._isRtl();\n        let height, top, bottom;\n        if (position.overlayY === 'top') {\n            // Overlay is opening \"downward\" and thus is bound by the bottom viewport edge.\n            top = origin.y;\n            height = viewport.height - top + this._viewportMargin;\n        }\n        else if (position.overlayY === 'bottom') {\n            // Overlay is opening \"upward\" and thus is bound by the top viewport edge. We need to add\n            // the viewport margin back in, because the viewport rect is narrowed down to remove the\n            // margin, whereas the `origin` position is calculated based on its `ClientRect`.\n            bottom = viewport.height - origin.y + this._viewportMargin * 2;\n            height = viewport.height - bottom + this._viewportMargin;\n        }\n        else {\n            // If neither top nor bottom, it means that the overlay is vertically centered on the\n            // origin point. Note that we want the position relative to the viewport, rather than\n            // the page, which is why we don't use something like `viewport.bottom - origin.y` and\n            // `origin.y - viewport.top`.\n            const smallestDistanceToViewportEdge = Math.min(viewport.bottom - origin.y + viewport.top, origin.y);\n            const previousHeight = this._lastBoundingBoxSize.height;\n            height = smallestDistanceToViewportEdge * 2;\n            top = origin.y - smallestDistanceToViewportEdge;\n            if (height > previousHeight && !this._isInitialRender && !this._growAfterOpen) {\n                top = origin.y - previousHeight / 2;\n            }\n        }\n        // The overlay is opening 'right-ward' (the content flows to the right).\n        const isBoundedByRightViewportEdge = (position.overlayX === 'start' && !isRtl) || (position.overlayX === 'end' && isRtl);\n        // The overlay is opening 'left-ward' (the content flows to the left).\n        const isBoundedByLeftViewportEdge = (position.overlayX === 'end' && !isRtl) || (position.overlayX === 'start' && isRtl);\n        let width, left, right;\n        if (isBoundedByLeftViewportEdge) {\n            right = viewport.width - origin.x + this._viewportMargin;\n            width = origin.x - this._viewportMargin;\n        }\n        else if (isBoundedByRightViewportEdge) {\n            left = origin.x;\n            width = viewport.right - origin.x;\n        }\n        else {\n            // If neither start nor end, it means that the overlay is horizontally centered on the\n            // origin point. Note that we want the position relative to the viewport, rather than\n            // the page, which is why we don't use something like `viewport.right - origin.x` and\n            // `origin.x - viewport.left`.\n            const smallestDistanceToViewportEdge = Math.min(viewport.right - origin.x + viewport.left, origin.x);\n            const previousWidth = this._lastBoundingBoxSize.width;\n            width = smallestDistanceToViewportEdge * 2;\n            left = origin.x - smallestDistanceToViewportEdge;\n            if (width > previousWidth && !this._isInitialRender && !this._growAfterOpen) {\n                left = origin.x - previousWidth / 2;\n            }\n        }\n        return { top: top, left: left, bottom: bottom, right: right, width, height };\n    }\n    /**\n     * Sets the position and size of the overlay's sizing wrapper. The wrapper is positioned on the\n     * origin's connection point and stetches to the bounds of the viewport.\n     *\n     * @param origin The point on the origin element where the overlay is connected.\n     * @param position The position preference\n     */\n    _setBoundingBoxStyles(origin, position) {\n        const boundingBoxRect = this._calculateBoundingBoxRect(origin, position);\n        // It's weird if the overlay *grows* while scrolling, so we take the last size into account\n        // when applying a new size.\n        if (!this._isInitialRender && !this._growAfterOpen) {\n            boundingBoxRect.height = Math.min(boundingBoxRect.height, this._lastBoundingBoxSize.height);\n            boundingBoxRect.width = Math.min(boundingBoxRect.width, this._lastBoundingBoxSize.width);\n        }\n        const styles = {};\n        if (this._hasExactPosition()) {\n            styles.top = styles.left = '0';\n            styles.bottom = styles.right = styles.maxHeight = styles.maxWidth = '';\n            styles.width = styles.height = '100%';\n        }\n        else {\n            const maxHeight = this._overlayRef.getConfig().maxHeight;\n            const maxWidth = this._overlayRef.getConfig().maxWidth;\n            styles.height = coerceCssPixelValue(boundingBoxRect.height);\n            styles.top = coerceCssPixelValue(boundingBoxRect.top);\n            styles.bottom = coerceCssPixelValue(boundingBoxRect.bottom);\n            styles.width = coerceCssPixelValue(boundingBoxRect.width);\n            styles.left = coerceCssPixelValue(boundingBoxRect.left);\n            styles.right = coerceCssPixelValue(boundingBoxRect.right);\n            // Push the pane content towards the proper direction.\n            if (position.overlayX === 'center') {\n                styles.alignItems = 'center';\n            }\n            else {\n                styles.alignItems = position.overlayX === 'end' ? 'flex-end' : 'flex-start';\n            }\n            if (position.overlayY === 'center') {\n                styles.justifyContent = 'center';\n            }\n            else {\n                styles.justifyContent = position.overlayY === 'bottom' ? 'flex-end' : 'flex-start';\n            }\n            if (maxHeight) {\n                styles.maxHeight = coerceCssPixelValue(maxHeight);\n            }\n            if (maxWidth) {\n                styles.maxWidth = coerceCssPixelValue(maxWidth);\n            }\n        }\n        this._lastBoundingBoxSize = boundingBoxRect;\n        extendStyles(this._boundingBox.style, styles);\n    }\n    /** Resets the styles for the bounding box so that a new positioning can be computed. */\n    _resetBoundingBoxStyles() {\n        extendStyles(this._boundingBox.style, {\n            top: '0',\n            left: '0',\n            right: '0',\n            bottom: '0',\n            height: '',\n            width: '',\n            alignItems: '',\n            justifyContent: '',\n        });\n    }\n    /** Resets the styles for the overlay pane so that a new positioning can be computed. */\n    _resetOverlayElementStyles() {\n        extendStyles(this._pane.style, {\n            top: '',\n            left: '',\n            bottom: '',\n            right: '',\n            position: '',\n            transform: '',\n        });\n    }\n    /** Sets positioning styles to the overlay element. */\n    _setOverlayElementStyles(originPoint, position) {\n        const styles = {};\n        const hasExactPosition = this._hasExactPosition();\n        const hasFlexibleDimensions = this._hasFlexibleDimensions;\n        const config = this._overlayRef.getConfig();\n        if (hasExactPosition) {\n            const scrollPosition = this._viewportRuler.getViewportScrollPosition();\n            extendStyles(styles, this._getExactOverlayY(position, originPoint, scrollPosition));\n            extendStyles(styles, this._getExactOverlayX(position, originPoint, scrollPosition));\n        }\n        else {\n            styles.position = 'static';\n        }\n        // Use a transform to apply the offsets. We do this because the `center` positions rely on\n        // being in the normal flex flow and setting a `top` / `left` at all will completely throw\n        // off the position. We also can't use margins, because they won't have an effect in some\n        // cases where the element doesn't have anything to \"push off of\". Finally, this works\n        // better both with flexible and non-flexible positioning.\n        let transformString = '';\n        let offsetX = this._getOffset(position, 'x');\n        let offsetY = this._getOffset(position, 'y');\n        if (offsetX) {\n            transformString += `translateX(${offsetX}px) `;\n        }\n        if (offsetY) {\n            transformString += `translateY(${offsetY}px)`;\n        }\n        styles.transform = transformString.trim();\n        // If a maxWidth or maxHeight is specified on the overlay, we remove them. We do this because\n        // we need these values to both be set to \"100%\" for the automatic flexible sizing to work.\n        // The maxHeight and maxWidth are set on the boundingBox in order to enforce the constraint.\n        // Note that this doesn't apply when we have an exact position, in which case we do want to\n        // apply them because they'll be cleared from the bounding box.\n        if (config.maxHeight) {\n            if (hasExactPosition) {\n                styles.maxHeight = coerceCssPixelValue(config.maxHeight);\n            }\n            else if (hasFlexibleDimensions) {\n                styles.maxHeight = '';\n            }\n        }\n        if (config.maxWidth) {\n            if (hasExactPosition) {\n                styles.maxWidth = coerceCssPixelValue(config.maxWidth);\n            }\n            else if (hasFlexibleDimensions) {\n                styles.maxWidth = '';\n            }\n        }\n        extendStyles(this._pane.style, styles);\n    }\n    /** Gets the exact top/bottom for the overlay when not using flexible sizing or when pushing. */\n    _getExactOverlayY(position, originPoint, scrollPosition) {\n        // Reset any existing styles. This is necessary in case the\n        // preferred position has changed since the last `apply`.\n        let styles = { top: '', bottom: '' };\n        let overlayPoint = this._getOverlayPoint(originPoint, this._overlayRect, position);\n        if (this._isPushed) {\n            overlayPoint = this._pushOverlayOnScreen(overlayPoint, this._overlayRect, scrollPosition);\n        }\n        let virtualKeyboardOffset = this._overlayContainer\n            .getContainerElement()\n            .getBoundingClientRect().top;\n        // Normally this would be zero, however when the overlay is attached to an input (e.g. in an\n        // autocomplete), mobile browsers will shift everything in order to put the input in the middle\n        // of the screen and to make space for the virtual keyboard. We need to account for this offset,\n        // otherwise our positioning will be thrown off.\n        overlayPoint.y -= virtualKeyboardOffset;\n        // We want to set either `top` or `bottom` based on whether the overlay wants to appear\n        // above or below the origin and the direction in which the element will expand.\n        if (position.overlayY === 'bottom') {\n            // When using `bottom`, we adjust the y position such that it is the distance\n            // from the bottom of the viewport rather than the top.\n            const documentHeight = this._document.documentElement.clientHeight;\n            styles.bottom = `${documentHeight - (overlayPoint.y + this._overlayRect.height)}px`;\n        }\n        else {\n            styles.top = coerceCssPixelValue(overlayPoint.y);\n        }\n        return styles;\n    }\n    /** Gets the exact left/right for the overlay when not using flexible sizing or when pushing. */\n    _getExactOverlayX(position, originPoint, scrollPosition) {\n        // Reset any existing styles. This is necessary in case the preferred position has\n        // changed since the last `apply`.\n        let styles = { left: '', right: '' };\n        let overlayPoint = this._getOverlayPoint(originPoint, this._overlayRect, position);\n        if (this._isPushed) {\n            overlayPoint = this._pushOverlayOnScreen(overlayPoint, this._overlayRect, scrollPosition);\n        }\n        // We want to set either `left` or `right` based on whether the overlay wants to appear \"before\"\n        // or \"after\" the origin, which determines the direction in which the element will expand.\n        // For the horizontal axis, the meaning of \"before\" and \"after\" change based on whether the\n        // page is in RTL or LTR.\n        let horizontalStyleProperty;\n        if (this._isRtl()) {\n            horizontalStyleProperty = position.overlayX === 'end' ? 'left' : 'right';\n        }\n        else {\n            horizontalStyleProperty = position.overlayX === 'end' ? 'right' : 'left';\n        }\n        // When we're setting `right`, we adjust the x position such that it is the distance\n        // from the right edge of the viewport rather than the left edge.\n        if (horizontalStyleProperty === 'right') {\n            const documentWidth = this._document.documentElement.clientWidth;\n            styles.right = `${documentWidth - (overlayPoint.x + this._overlayRect.width)}px`;\n        }\n        else {\n            styles.left = coerceCssPixelValue(overlayPoint.x);\n        }\n        return styles;\n    }\n    /**\n     * Gets the view properties of the trigger and overlay, including whether they are clipped\n     * or completely outside the view of any of the strategy's scrollables.\n     */\n    _getScrollVisibility() {\n        // Note: needs fresh rects since the position could've changed.\n        const originBounds = this._getOriginRect();\n        const overlayBounds = this._pane.getBoundingClientRect();\n        // TODO(jelbourn): instead of needing all of the client rects for these scrolling containers\n        // every time, we should be able to use the scrollTop of the containers if the size of those\n        // containers hasn't changed.\n        const scrollContainerBounds = this._scrollables.map(scrollable => {\n            return scrollable.getElementRef().nativeElement.getBoundingClientRect();\n        });\n        return {\n            isOriginClipped: isElementClippedByScrolling(originBounds, scrollContainerBounds),\n            isOriginOutsideView: isElementScrolledOutsideView(originBounds, scrollContainerBounds),\n            isOverlayClipped: isElementClippedByScrolling(overlayBounds, scrollContainerBounds),\n            isOverlayOutsideView: isElementScrolledOutsideView(overlayBounds, scrollContainerBounds),\n        };\n    }\n    /** Subtracts the amount that an element is overflowing on an axis from its length. */\n    _subtractOverflows(length, ...overflows) {\n        return overflows.reduce((currentValue, currentOverflow) => {\n            return currentValue - Math.max(currentOverflow, 0);\n        }, length);\n    }\n    /** Narrows the given viewport rect by the current _viewportMargin. */\n    _getNarrowedViewportRect() {\n        // We recalculate the viewport rect here ourselves, rather than using the ViewportRuler,\n        // because we want to use the `clientWidth` and `clientHeight` as the base. The difference\n        // being that the client properties don't include the scrollbar, as opposed to `innerWidth`\n        // and `innerHeight` that do. This is necessary, because the overlay container uses\n        // 100% `width` and `height` which don't include the scrollbar either.\n        const width = this._document.documentElement.clientWidth;\n        const height = this._document.documentElement.clientHeight;\n        const scrollPosition = this._viewportRuler.getViewportScrollPosition();\n        return {\n            top: scrollPosition.top + this._viewportMargin,\n            left: scrollPosition.left + this._viewportMargin,\n            right: scrollPosition.left + width - this._viewportMargin,\n            bottom: scrollPosition.top + height - this._viewportMargin,\n            width: width - 2 * this._viewportMargin,\n            height: height - 2 * this._viewportMargin,\n        };\n    }\n    /** Whether the we're dealing with an RTL context */\n    _isRtl() {\n        return this._overlayRef.getDirection() === 'rtl';\n    }\n    /** Determines whether the overlay uses exact or flexible positioning. */\n    _hasExactPosition() {\n        return !this._hasFlexibleDimensions || this._isPushed;\n    }\n    /** Retrieves the offset of a position along the x or y axis. */\n    _getOffset(position, axis) {\n        if (axis === 'x') {\n            // We don't do something like `position['offset' + axis]` in\n            // order to avoid breking minifiers that rename properties.\n            return position.offsetX == null ? this._offsetX : position.offsetX;\n        }\n        return position.offsetY == null ? this._offsetY : position.offsetY;\n    }\n    /** Validates that the current position match the expected values. */\n    _validatePositions() {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (!this._preferredPositions.length) {\n                throw Error('FlexibleConnectedPositionStrategy: At least one position is required.');\n            }\n            // TODO(crisbeto): remove these once Angular's template type\n            // checking is advanced enough to catch these cases.\n            this._preferredPositions.forEach(pair => {\n                validateHorizontalPosition('originX', pair.originX);\n                validateVerticalPosition('originY', pair.originY);\n                validateHorizontalPosition('overlayX', pair.overlayX);\n                validateVerticalPosition('overlayY', pair.overlayY);\n            });\n        }\n    }\n    /** Adds a single CSS class or an array of classes on the overlay panel. */\n    _addPanelClasses(cssClasses) {\n        if (this._pane) {\n            coerceArray(cssClasses).forEach(cssClass => {\n                if (cssClass !== '' && this._appliedPanelClasses.indexOf(cssClass) === -1) {\n                    this._appliedPanelClasses.push(cssClass);\n                    this._pane.classList.add(cssClass);\n                }\n            });\n        }\n    }\n    /** Clears the classes that the position strategy has applied from the overlay panel. */\n    _clearPanelClasses() {\n        if (this._pane) {\n            this._appliedPanelClasses.forEach(cssClass => {\n                this._pane.classList.remove(cssClass);\n            });\n            this._appliedPanelClasses = [];\n        }\n    }\n    /** Returns the ClientRect of the current origin. */\n    _getOriginRect() {\n        const origin = this._origin;\n        if (origin instanceof ElementRef) {\n            return origin.nativeElement.getBoundingClientRect();\n        }\n        // Check for Element so SVG elements are also supported.\n        if (origin instanceof Element) {\n            return origin.getBoundingClientRect();\n        }\n        const width = origin.width || 0;\n        const height = origin.height || 0;\n        // If the origin is a point, return a client rect as if it was a 0x0 element at the point.\n        return {\n            top: origin.y,\n            bottom: origin.y + height,\n            left: origin.x,\n            right: origin.x + width,\n            height,\n            width,\n        };\n    }\n}\n/** Shallow-extends a stylesheet object with another stylesheet object. */\nfunction extendStyles(destination, source) {\n    for (let key in source) {\n        if (source.hasOwnProperty(key)) {\n            destination[key] = source[key];\n        }\n    }\n    return destination;\n}\n/**\n * Extracts the pixel value as a number from a value, if it's a number\n * or a CSS pixel string (e.g. `1337px`). Otherwise returns null.\n */\nfunction getPixelValue(input) {\n    if (typeof input !== 'number' && input != null) {\n        const [value, units] = input.split(cssUnitPattern);\n        return !units || units === 'px' ? parseFloat(value) : null;\n    }\n    return input || null;\n}\n/**\n * Gets a version of an element's bounding `ClientRect` where all the values are rounded down to\n * the nearest pixel. This allows us to account for the cases where there may be sub-pixel\n * deviations in the `ClientRect` returned by the browser (e.g. when zoomed in with a percentage\n * size, see #21350).\n */\nfunction getRoundedBoundingClientRect(clientRect) {\n    return {\n        top: Math.floor(clientRect.top),\n        right: Math.floor(clientRect.right),\n        bottom: Math.floor(clientRect.bottom),\n        left: Math.floor(clientRect.left),\n        width: Math.floor(clientRect.width),\n        height: Math.floor(clientRect.height),\n    };\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Class to be added to the overlay pane wrapper. */\nconst wrapperClass = 'cdk-global-overlay-wrapper';\n/**\n * A strategy for positioning overlays. Using this strategy, an overlay is given an\n * explicit position relative to the browser's viewport. We use flexbox, instead of\n * transforms, in order to avoid issues with subpixel rendering which can cause the\n * element to become blurry.\n */\nclass GlobalPositionStrategy {\n    constructor() {\n        this._cssPosition = 'static';\n        this._topOffset = '';\n        this._bottomOffset = '';\n        this._leftOffset = '';\n        this._rightOffset = '';\n        this._alignItems = '';\n        this._justifyContent = '';\n        this._width = '';\n        this._height = '';\n    }\n    attach(overlayRef) {\n        const config = overlayRef.getConfig();\n        this._overlayRef = overlayRef;\n        if (this._width && !config.width) {\n            overlayRef.updateSize({ width: this._width });\n        }\n        if (this._height && !config.height) {\n            overlayRef.updateSize({ height: this._height });\n        }\n        overlayRef.hostElement.classList.add(wrapperClass);\n        this._isDisposed = false;\n    }\n    /**\n     * Sets the top position of the overlay. Clears any previously set vertical position.\n     * @param value New top offset.\n     */\n    top(value = '') {\n        this._bottomOffset = '';\n        this._topOffset = value;\n        this._alignItems = 'flex-start';\n        return this;\n    }\n    /**\n     * Sets the left position of the overlay. Clears any previously set horizontal position.\n     * @param value New left offset.\n     */\n    left(value = '') {\n        this._rightOffset = '';\n        this._leftOffset = value;\n        this._justifyContent = 'flex-start';\n        return this;\n    }\n    /**\n     * Sets the bottom position of the overlay. Clears any previously set vertical position.\n     * @param value New bottom offset.\n     */\n    bottom(value = '') {\n        this._topOffset = '';\n        this._bottomOffset = value;\n        this._alignItems = 'flex-end';\n        return this;\n    }\n    /**\n     * Sets the right position of the overlay. Clears any previously set horizontal position.\n     * @param value New right offset.\n     */\n    right(value = '') {\n        this._leftOffset = '';\n        this._rightOffset = value;\n        this._justifyContent = 'flex-end';\n        return this;\n    }\n    /**\n     * Sets the overlay width and clears any previously set width.\n     * @param value New width for the overlay\n     * @deprecated Pass the `width` through the `OverlayConfig`.\n     * @breaking-change 8.0.0\n     */\n    width(value = '') {\n        if (this._overlayRef) {\n            this._overlayRef.updateSize({ width: value });\n        }\n        else {\n            this._width = value;\n        }\n        return this;\n    }\n    /**\n     * Sets the overlay height and clears any previously set height.\n     * @param value New height for the overlay\n     * @deprecated Pass the `height` through the `OverlayConfig`.\n     * @breaking-change 8.0.0\n     */\n    height(value = '') {\n        if (this._overlayRef) {\n            this._overlayRef.updateSize({ height: value });\n        }\n        else {\n            this._height = value;\n        }\n        return this;\n    }\n    /**\n     * Centers the overlay horizontally with an optional offset.\n     * Clears any previously set horizontal position.\n     *\n     * @param offset Overlay offset from the horizontal center.\n     */\n    centerHorizontally(offset = '') {\n        this.left(offset);\n        this._justifyContent = 'center';\n        return this;\n    }\n    /**\n     * Centers the overlay vertically with an optional offset.\n     * Clears any previously set vertical position.\n     *\n     * @param offset Overlay offset from the vertical center.\n     */\n    centerVertically(offset = '') {\n        this.top(offset);\n        this._alignItems = 'center';\n        return this;\n    }\n    /**\n     * Apply the position to the element.\n     * @docs-private\n     */\n    apply() {\n        // Since the overlay ref applies the strategy asynchronously, it could\n        // have been disposed before it ends up being applied. If that is the\n        // case, we shouldn't do anything.\n        if (!this._overlayRef || !this._overlayRef.hasAttached()) {\n            return;\n        }\n        const styles = this._overlayRef.overlayElement.style;\n        const parentStyles = this._overlayRef.hostElement.style;\n        const config = this._overlayRef.getConfig();\n        const { width, height, maxWidth, maxHeight } = config;\n        const shouldBeFlushHorizontally = (width === '100%' || width === '100vw') &&\n            (!maxWidth || maxWidth === '100%' || maxWidth === '100vw');\n        const shouldBeFlushVertically = (height === '100%' || height === '100vh') &&\n            (!maxHeight || maxHeight === '100%' || maxHeight === '100vh');\n        styles.position = this._cssPosition;\n        styles.marginLeft = shouldBeFlushHorizontally ? '0' : this._leftOffset;\n        styles.marginTop = shouldBeFlushVertically ? '0' : this._topOffset;\n        styles.marginBottom = this._bottomOffset;\n        styles.marginRight = this._rightOffset;\n        if (shouldBeFlushHorizontally) {\n            parentStyles.justifyContent = 'flex-start';\n        }\n        else if (this._justifyContent === 'center') {\n            parentStyles.justifyContent = 'center';\n        }\n        else if (this._overlayRef.getConfig().direction === 'rtl') {\n            // In RTL the browser will invert `flex-start` and `flex-end` automatically, but we\n            // don't want that because our positioning is explicitly `left` and `right`, hence\n            // why we do another inversion to ensure that the overlay stays in the same position.\n            // TODO: reconsider this if we add `start` and `end` methods.\n            if (this._justifyContent === 'flex-start') {\n                parentStyles.justifyContent = 'flex-end';\n            }\n            else if (this._justifyContent === 'flex-end') {\n                parentStyles.justifyContent = 'flex-start';\n            }\n        }\n        else {\n            parentStyles.justifyContent = this._justifyContent;\n        }\n        parentStyles.alignItems = shouldBeFlushVertically ? 'flex-start' : this._alignItems;\n    }\n    /**\n     * Cleans up the DOM changes from the position strategy.\n     * @docs-private\n     */\n    dispose() {\n        if (this._isDisposed || !this._overlayRef) {\n            return;\n        }\n        const styles = this._overlayRef.overlayElement.style;\n        const parent = this._overlayRef.hostElement;\n        const parentStyles = parent.style;\n        parent.classList.remove(wrapperClass);\n        parentStyles.justifyContent =\n            parentStyles.alignItems =\n                styles.marginTop =\n                    styles.marginBottom =\n                        styles.marginLeft =\n                            styles.marginRight =\n                                styles.position =\n                                    '';\n        this._overlayRef = null;\n        this._isDisposed = true;\n    }\n}\n\n/** Builder for overlay position strategy. */\nclass OverlayPositionBuilder {\n    constructor(_viewportRuler, _document, _platform, _overlayContainer) {\n        this._viewportRuler = _viewportRuler;\n        this._document = _document;\n        this._platform = _platform;\n        this._overlayContainer = _overlayContainer;\n    }\n    /**\n     * Creates a global position strategy.\n     */\n    global() {\n        return new GlobalPositionStrategy();\n    }\n    /**\n     * Creates a flexible position strategy.\n     * @param origin Origin relative to which to position the overlay.\n     */\n    flexibleConnectedTo(origin) {\n        return new FlexibleConnectedPositionStrategy(origin, this._viewportRuler, this._document, this._platform, this._overlayContainer);\n    }\n}\nOverlayPositionBuilder.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: OverlayPositionBuilder, deps: [{ token: i1.ViewportRuler }, { token: DOCUMENT }, { token: i1$1.Platform }, { token: OverlayContainer }], target: i0.ɵɵFactoryTarget.Injectable });\nOverlayPositionBuilder.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: OverlayPositionBuilder, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: OverlayPositionBuilder, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () {\n        return [{ type: i1.ViewportRuler }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [DOCUMENT]\n                    }] }, { type: i1$1.Platform }, { type: OverlayContainer }];\n    } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Service for dispatching events that land on the body to appropriate overlay ref,\n * if any. It maintains a list of attached overlays to determine best suited overlay based\n * on event target and order of overlay opens.\n */\nclass BaseOverlayDispatcher {\n    constructor(document) {\n        /** Currently attached overlays in the order they were attached. */\n        this._attachedOverlays = [];\n        this._document = document;\n    }\n    ngOnDestroy() {\n        this.detach();\n    }\n    /** Add a new overlay to the list of attached overlay refs. */\n    add(overlayRef) {\n        // Ensure that we don't get the same overlay multiple times.\n        this.remove(overlayRef);\n        this._attachedOverlays.push(overlayRef);\n    }\n    /** Remove an overlay from the list of attached overlay refs. */\n    remove(overlayRef) {\n        const index = this._attachedOverlays.indexOf(overlayRef);\n        if (index > -1) {\n            this._attachedOverlays.splice(index, 1);\n        }\n        // Remove the global listener once there are no more overlays.\n        if (this._attachedOverlays.length === 0) {\n            this.detach();\n        }\n    }\n}\nBaseOverlayDispatcher.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BaseOverlayDispatcher, deps: [{ token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Injectable });\nBaseOverlayDispatcher.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BaseOverlayDispatcher, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BaseOverlayDispatcher, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () {\n        return [{ type: undefined, decorators: [{\n                        type: Inject,\n                        args: [DOCUMENT]\n                    }] }];\n    } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Service for dispatching keyboard events that land on the body to appropriate overlay ref,\n * if any. It maintains a list of attached overlays to determine best suited overlay based\n * on event target and order of overlay opens.\n */\nclass OverlayKeyboardDispatcher extends BaseOverlayDispatcher {\n    constructor(document) {\n        super(document);\n        /** Keyboard event listener that will be attached to the body. */\n        this._keydownListener = (event) => {\n            const overlays = this._attachedOverlays;\n            for (let i = overlays.length - 1; i > -1; i--) {\n                // Dispatch the keydown event to the top overlay which has subscribers to its keydown events.\n                // We want to target the most recent overlay, rather than trying to match where the event came\n                // from, because some components might open an overlay, but keep focus on a trigger element\n                // (e.g. for select and autocomplete). We skip overlays without keydown event subscriptions,\n                // because we don't want overlays that don't handle keyboard events to block the ones below\n                // them that do.\n                if (overlays[i]._keydownEvents.observers.length > 0) {\n                    overlays[i]._keydownEvents.next(event);\n                    break;\n                }\n            }\n        };\n    }\n    /** Add a new overlay to the list of attached overlay refs. */\n    add(overlayRef) {\n        super.add(overlayRef);\n        // Lazily start dispatcher once first overlay is added\n        if (!this._isAttached) {\n            this._document.body.addEventListener('keydown', this._keydownListener);\n            this._isAttached = true;\n        }\n    }\n    /** Detaches the global keyboard event listener. */\n    detach() {\n        if (this._isAttached) {\n            this._document.body.removeEventListener('keydown', this._keydownListener);\n            this._isAttached = false;\n        }\n    }\n}\nOverlayKeyboardDispatcher.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: OverlayKeyboardDispatcher, deps: [{ token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Injectable });\nOverlayKeyboardDispatcher.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: OverlayKeyboardDispatcher, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: OverlayKeyboardDispatcher, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () {\n        return [{ type: undefined, decorators: [{\n                        type: Inject,\n                        args: [DOCUMENT]\n                    }] }];\n    } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Service for dispatching mouse click events that land on the body to appropriate overlay ref,\n * if any. It maintains a list of attached overlays to determine best suited overlay based\n * on event target and order of overlay opens.\n */\nclass OverlayOutsideClickDispatcher extends BaseOverlayDispatcher {\n    constructor(document, _platform) {\n        super(document);\n        this._platform = _platform;\n        this._cursorStyleIsSet = false;\n        /** Store pointerdown event target to track origin of click. */\n        this._pointerDownListener = (event) => {\n            this._pointerDownEventTarget = _getEventTarget(event);\n        };\n        /** Click event listener that will be attached to the body propagate phase. */\n        this._clickListener = (event) => {\n            const target = _getEventTarget(event);\n            // In case of a click event, we want to check the origin of the click\n            // (e.g. in case where a user starts a click inside the overlay and\n            // releases the click outside of it).\n            // This is done by using the event target of the preceding pointerdown event.\n            // Every click event caused by a pointer device has a preceding pointerdown\n            // event, unless the click was programmatically triggered (e.g. in a unit test).\n            const origin = event.type === 'click' && this._pointerDownEventTarget\n                ? this._pointerDownEventTarget\n                : target;\n            // Reset the stored pointerdown event target, to avoid having it interfere\n            // in subsequent events.\n            this._pointerDownEventTarget = null;\n            // We copy the array because the original may be modified asynchronously if the\n            // outsidePointerEvents listener decides to detach overlays resulting in index errors inside\n            // the for loop.\n            const overlays = this._attachedOverlays.slice();\n            // Dispatch the mouse event to the top overlay which has subscribers to its mouse events.\n            // We want to target all overlays for which the click could be considered as outside click.\n            // As soon as we reach an overlay for which the click is not outside click we break off\n            // the loop.\n            for (let i = overlays.length - 1; i > -1; i--) {\n                const overlayRef = overlays[i];\n                if (overlayRef._outsidePointerEvents.observers.length < 1 || !overlayRef.hasAttached()) {\n                    continue;\n                }\n                // If it's a click inside the overlay, just break - we should do nothing\n                // If it's an outside click (both origin and target of the click) dispatch the mouse event,\n                // and proceed with the next overlay\n                if (overlayRef.overlayElement.contains(target) ||\n                    overlayRef.overlayElement.contains(origin)) {\n                    break;\n                }\n                overlayRef._outsidePointerEvents.next(event);\n            }\n        };\n    }\n    /** Add a new overlay to the list of attached overlay refs. */\n    add(overlayRef) {\n        super.add(overlayRef);\n        // Safari on iOS does not generate click events for non-interactive\n        // elements. However, we want to receive a click for any element outside\n        // the overlay. We can force a \"clickable\" state by setting\n        // `cursor: pointer` on the document body. See:\n        // https://developer.mozilla.org/en-US/docs/Web/API/Element/click_event#Safari_Mobile\n        // https://developer.apple.com/library/archive/documentation/AppleApplications/Reference/SafariWebContent/HandlingEvents/HandlingEvents.html\n        if (!this._isAttached) {\n            const body = this._document.body;\n            body.addEventListener('pointerdown', this._pointerDownListener, true);\n            body.addEventListener('click', this._clickListener, true);\n            body.addEventListener('auxclick', this._clickListener, true);\n            body.addEventListener('contextmenu', this._clickListener, true);\n            // click event is not fired on iOS. To make element \"clickable\" we are\n            // setting the cursor to pointer\n            if (this._platform.IOS && !this._cursorStyleIsSet) {\n                this._cursorOriginalValue = body.style.cursor;\n                body.style.cursor = 'pointer';\n                this._cursorStyleIsSet = true;\n            }\n            this._isAttached = true;\n        }\n    }\n    /** Detaches the global keyboard event listener. */\n    detach() {\n        if (this._isAttached) {\n            const body = this._document.body;\n            body.removeEventListener('pointerdown', this._pointerDownListener, true);\n            body.removeEventListener('click', this._clickListener, true);\n            body.removeEventListener('auxclick', this._clickListener, true);\n            body.removeEventListener('contextmenu', this._clickListener, true);\n            if (this._platform.IOS && this._cursorStyleIsSet) {\n                body.style.cursor = this._cursorOriginalValue;\n                this._cursorStyleIsSet = false;\n            }\n            this._isAttached = false;\n        }\n    }\n}\nOverlayOutsideClickDispatcher.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: OverlayOutsideClickDispatcher, deps: [{ token: DOCUMENT }, { token: i1$1.Platform }], target: i0.ɵɵFactoryTarget.Injectable });\nOverlayOutsideClickDispatcher.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: OverlayOutsideClickDispatcher, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: OverlayOutsideClickDispatcher, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () {\n        return [{ type: undefined, decorators: [{\n                        type: Inject,\n                        args: [DOCUMENT]\n                    }] }, { type: i1$1.Platform }];\n    } });\n\n/** Next overlay unique ID. */\nlet nextUniqueId = 0;\n// Note that Overlay is *not* scoped to the app root because of the ComponentFactoryResolver\n// which needs to be different depending on where OverlayModule is imported.\n/**\n * Service to create Overlays. Overlays are dynamically added pieces of floating UI, meant to be\n * used as a low-level building block for other components. Dialogs, tooltips, menus,\n * selects, etc. can all be built using overlays. The service should primarily be used by authors\n * of re-usable components rather than developers building end-user applications.\n *\n * An overlay *is* a PortalOutlet, so any kind of Portal can be loaded into one.\n */\nclass Overlay {\n    constructor(\n    /** Scrolling strategies that can be used when creating an overlay. */\n    scrollStrategies, _overlayContainer, _componentFactoryResolver, _positionBuilder, _keyboardDispatcher, _injector, _ngZone, _document, _directionality, _location, _outsideClickDispatcher) {\n        this.scrollStrategies = scrollStrategies;\n        this._overlayContainer = _overlayContainer;\n        this._componentFactoryResolver = _componentFactoryResolver;\n        this._positionBuilder = _positionBuilder;\n        this._keyboardDispatcher = _keyboardDispatcher;\n        this._injector = _injector;\n        this._ngZone = _ngZone;\n        this._document = _document;\n        this._directionality = _directionality;\n        this._location = _location;\n        this._outsideClickDispatcher = _outsideClickDispatcher;\n    }\n    /**\n     * Creates an overlay.\n     * @param config Configuration applied to the overlay.\n     * @returns Reference to the created overlay.\n     */\n    create(config) {\n        const host = this._createHostElement();\n        const pane = this._createPaneElement(host);\n        const portalOutlet = this._createPortalOutlet(pane);\n        const overlayConfig = new OverlayConfig(config);\n        overlayConfig.direction = overlayConfig.direction || this._directionality.value;\n        return new OverlayRef(portalOutlet, host, pane, overlayConfig, this._ngZone, this._keyboardDispatcher, this._document, this._location, this._outsideClickDispatcher);\n    }\n    /**\n     * Gets a position builder that can be used, via fluent API,\n     * to construct and configure a position strategy.\n     * @returns An overlay position builder.\n     */\n    position() {\n        return this._positionBuilder;\n    }\n    /**\n     * Creates the DOM element for an overlay and appends it to the overlay container.\n     * @returns Newly-created pane element\n     */\n    _createPaneElement(host) {\n        const pane = this._document.createElement('div');\n        pane.id = `cdk-overlay-${nextUniqueId++}`;\n        pane.classList.add('cdk-overlay-pane');\n        host.appendChild(pane);\n        return pane;\n    }\n    /**\n     * Creates the host element that wraps around an overlay\n     * and can be used for advanced positioning.\n     * @returns Newly-create host element.\n     */\n    _createHostElement() {\n        const host = this._document.createElement('div');\n        this._overlayContainer.getContainerElement().appendChild(host);\n        return host;\n    }\n    /**\n     * Create a DomPortalOutlet into which the overlay content can be loaded.\n     * @param pane The DOM element to turn into a portal outlet.\n     * @returns A portal outlet for the given DOM element.\n     */\n    _createPortalOutlet(pane) {\n        // We have to resolve the ApplicationRef later in order to allow people\n        // to use overlay-based providers during app initialization.\n        if (!this._appRef) {\n            this._appRef = this._injector.get(ApplicationRef);\n        }\n        return new DomPortalOutlet(pane, this._componentFactoryResolver, this._appRef, this._injector, this._document);\n    }\n}\nOverlay.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: Overlay, deps: [{ token: ScrollStrategyOptions }, { token: OverlayContainer }, { token: i0.ComponentFactoryResolver }, { token: OverlayPositionBuilder }, { token: OverlayKeyboardDispatcher }, { token: i0.Injector }, { token: i0.NgZone }, { token: DOCUMENT }, { token: i5.Directionality }, { token: i6.Location }, { token: OverlayOutsideClickDispatcher }], target: i0.ɵɵFactoryTarget.Injectable });\nOverlay.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: Overlay });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: Overlay, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () {\n        return [{ type: ScrollStrategyOptions }, { type: OverlayContainer }, { type: i0.ComponentFactoryResolver }, { type: OverlayPositionBuilder }, { type: OverlayKeyboardDispatcher }, { type: i0.Injector }, { type: i0.NgZone }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [DOCUMENT]\n                    }] }, { type: i5.Directionality }, { type: i6.Location }, { type: OverlayOutsideClickDispatcher }];\n    } });\n\n/** Default set of positions for the overlay. Follows the behavior of a dropdown. */\nconst defaultPositionList = [\n    {\n        originX: 'start',\n        originY: 'bottom',\n        overlayX: 'start',\n        overlayY: 'top',\n    },\n    {\n        originX: 'start',\n        originY: 'top',\n        overlayX: 'start',\n        overlayY: 'bottom',\n    },\n    {\n        originX: 'end',\n        originY: 'top',\n        overlayX: 'end',\n        overlayY: 'bottom',\n    },\n    {\n        originX: 'end',\n        originY: 'bottom',\n        overlayX: 'end',\n        overlayY: 'top',\n    },\n];\n/** Injection token that determines the scroll handling while the connected overlay is open. */\nconst CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY = new InjectionToken('cdk-connected-overlay-scroll-strategy');\n/**\n * Directive applied to an element to make it usable as an origin for an Overlay using a\n * ConnectedPositionStrategy.\n */\nclass CdkOverlayOrigin {\n    constructor(\n    /** Reference to the element on which the directive is applied. */\n    elementRef) {\n        this.elementRef = elementRef;\n    }\n}\nCdkOverlayOrigin.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CdkOverlayOrigin, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });\nCdkOverlayOrigin.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: CdkOverlayOrigin, selector: \"[cdk-overlay-origin], [overlay-origin], [cdkOverlayOrigin]\", exportAs: [\"cdkOverlayOrigin\"], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CdkOverlayOrigin, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdk-overlay-origin], [overlay-origin], [cdkOverlayOrigin]',\n                    exportAs: 'cdkOverlayOrigin',\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; } });\n/**\n * Directive to facilitate declarative creation of an\n * Overlay using a FlexibleConnectedPositionStrategy.\n */\nclass CdkConnectedOverlay {\n    // TODO(jelbourn): inputs for size, scroll behavior, animation, etc.\n    constructor(_overlay, templateRef, viewContainerRef, scrollStrategyFactory, _dir) {\n        this._overlay = _overlay;\n        this._dir = _dir;\n        this._hasBackdrop = false;\n        this._lockPosition = false;\n        this._growAfterOpen = false;\n        this._flexibleDimensions = false;\n        this._push = false;\n        this._backdropSubscription = Subscription.EMPTY;\n        this._attachSubscription = Subscription.EMPTY;\n        this._detachSubscription = Subscription.EMPTY;\n        this._positionSubscription = Subscription.EMPTY;\n        /** Margin between the overlay and the viewport edges. */\n        this.viewportMargin = 0;\n        /** Whether the overlay is open. */\n        this.open = false;\n        /** Whether the overlay can be closed by user interaction. */\n        this.disableClose = false;\n        /** Event emitted when the backdrop is clicked. */\n        this.backdropClick = new EventEmitter();\n        /** Event emitted when the position has changed. */\n        this.positionChange = new EventEmitter();\n        /** Event emitted when the overlay has been attached. */\n        this.attach = new EventEmitter();\n        /** Event emitted when the overlay has been detached. */\n        this.detach = new EventEmitter();\n        /** Emits when there are keyboard events that are targeted at the overlay. */\n        this.overlayKeydown = new EventEmitter();\n        /** Emits when there are mouse outside click events that are targeted at the overlay. */\n        this.overlayOutsideClick = new EventEmitter();\n        this._templatePortal = new TemplatePortal(templateRef, viewContainerRef);\n        this._scrollStrategyFactory = scrollStrategyFactory;\n        this.scrollStrategy = this._scrollStrategyFactory();\n    }\n    /** The offset in pixels for the overlay connection point on the x-axis */\n    get offsetX() {\n        return this._offsetX;\n    }\n    set offsetX(offsetX) {\n        this._offsetX = offsetX;\n        if (this._position) {\n            this._updatePositionStrategy(this._position);\n        }\n    }\n    /** The offset in pixels for the overlay connection point on the y-axis */\n    get offsetY() {\n        return this._offsetY;\n    }\n    set offsetY(offsetY) {\n        this._offsetY = offsetY;\n        if (this._position) {\n            this._updatePositionStrategy(this._position);\n        }\n    }\n    /** Whether or not the overlay should attach a backdrop. */\n    get hasBackdrop() {\n        return this._hasBackdrop;\n    }\n    set hasBackdrop(value) {\n        this._hasBackdrop = coerceBooleanProperty(value);\n    }\n    /** Whether or not the overlay should be locked when scrolling. */\n    get lockPosition() {\n        return this._lockPosition;\n    }\n    set lockPosition(value) {\n        this._lockPosition = coerceBooleanProperty(value);\n    }\n    /** Whether the overlay's width and height can be constrained to fit within the viewport. */\n    get flexibleDimensions() {\n        return this._flexibleDimensions;\n    }\n    set flexibleDimensions(value) {\n        this._flexibleDimensions = coerceBooleanProperty(value);\n    }\n    /** Whether the overlay can grow after the initial open when flexible positioning is turned on. */\n    get growAfterOpen() {\n        return this._growAfterOpen;\n    }\n    set growAfterOpen(value) {\n        this._growAfterOpen = coerceBooleanProperty(value);\n    }\n    /** Whether the overlay can be pushed on-screen if none of the provided positions fit. */\n    get push() {\n        return this._push;\n    }\n    set push(value) {\n        this._push = coerceBooleanProperty(value);\n    }\n    /** The associated overlay reference. */\n    get overlayRef() {\n        return this._overlayRef;\n    }\n    /** The element's layout direction. */\n    get dir() {\n        return this._dir ? this._dir.value : 'ltr';\n    }\n    ngOnDestroy() {\n        this._attachSubscription.unsubscribe();\n        this._detachSubscription.unsubscribe();\n        this._backdropSubscription.unsubscribe();\n        this._positionSubscription.unsubscribe();\n        if (this._overlayRef) {\n            this._overlayRef.dispose();\n        }\n    }\n    ngOnChanges(changes) {\n        if (this._position) {\n            this._updatePositionStrategy(this._position);\n            this._overlayRef.updateSize({\n                width: this.width,\n                minWidth: this.minWidth,\n                height: this.height,\n                minHeight: this.minHeight,\n            });\n            if (changes['origin'] && this.open) {\n                this._position.apply();\n            }\n        }\n        if (changes['open']) {\n            this.open ? this._attachOverlay() : this._detachOverlay();\n        }\n    }\n    /** Creates an overlay */\n    _createOverlay() {\n        if (!this.positions || !this.positions.length) {\n            this.positions = defaultPositionList;\n        }\n        const overlayRef = (this._overlayRef = this._overlay.create(this._buildConfig()));\n        this._attachSubscription = overlayRef.attachments().subscribe(() => this.attach.emit());\n        this._detachSubscription = overlayRef.detachments().subscribe(() => this.detach.emit());\n        overlayRef.keydownEvents().subscribe((event) => {\n            this.overlayKeydown.next(event);\n            if (event.keyCode === ESCAPE && !this.disableClose && !hasModifierKey(event)) {\n                event.preventDefault();\n                this._detachOverlay();\n            }\n        });\n        this._overlayRef.outsidePointerEvents().subscribe((event) => {\n            this.overlayOutsideClick.next(event);\n        });\n    }\n    /** Builds the overlay config based on the directive's inputs */\n    _buildConfig() {\n        const positionStrategy = (this._position =\n            this.positionStrategy || this._createPositionStrategy());\n        const overlayConfig = new OverlayConfig({\n            direction: this._dir,\n            positionStrategy,\n            scrollStrategy: this.scrollStrategy,\n            hasBackdrop: this.hasBackdrop,\n        });\n        if (this.width || this.width === 0) {\n            overlayConfig.width = this.width;\n        }\n        if (this.height || this.height === 0) {\n            overlayConfig.height = this.height;\n        }\n        if (this.minWidth || this.minWidth === 0) {\n            overlayConfig.minWidth = this.minWidth;\n        }\n        if (this.minHeight || this.minHeight === 0) {\n            overlayConfig.minHeight = this.minHeight;\n        }\n        if (this.backdropClass) {\n            overlayConfig.backdropClass = this.backdropClass;\n        }\n        if (this.panelClass) {\n            overlayConfig.panelClass = this.panelClass;\n        }\n        return overlayConfig;\n    }\n    /** Updates the state of a position strategy, based on the values of the directive inputs. */\n    _updatePositionStrategy(positionStrategy) {\n        const positions = this.positions.map(currentPosition => ({\n            originX: currentPosition.originX,\n            originY: currentPosition.originY,\n            overlayX: currentPosition.overlayX,\n            overlayY: currentPosition.overlayY,\n            offsetX: currentPosition.offsetX || this.offsetX,\n            offsetY: currentPosition.offsetY || this.offsetY,\n            panelClass: currentPosition.panelClass || undefined,\n        }));\n        return positionStrategy\n            .setOrigin(this._getFlexibleConnectedPositionStrategyOrigin())\n            .withPositions(positions)\n            .withFlexibleDimensions(this.flexibleDimensions)\n            .withPush(this.push)\n            .withGrowAfterOpen(this.growAfterOpen)\n            .withViewportMargin(this.viewportMargin)\n            .withLockedPosition(this.lockPosition)\n            .withTransformOriginOn(this.transformOriginSelector);\n    }\n    /** Returns the position strategy of the overlay to be set on the overlay config */\n    _createPositionStrategy() {\n        const strategy = this._overlay\n            .position()\n            .flexibleConnectedTo(this._getFlexibleConnectedPositionStrategyOrigin());\n        this._updatePositionStrategy(strategy);\n        return strategy;\n    }\n    _getFlexibleConnectedPositionStrategyOrigin() {\n        if (this.origin instanceof CdkOverlayOrigin) {\n            return this.origin.elementRef;\n        }\n        else {\n            return this.origin;\n        }\n    }\n    /** Attaches the overlay and subscribes to backdrop clicks if backdrop exists */\n    _attachOverlay() {\n        if (!this._overlayRef) {\n            this._createOverlay();\n        }\n        else {\n            // Update the overlay size, in case the directive's inputs have changed\n            this._overlayRef.getConfig().hasBackdrop = this.hasBackdrop;\n        }\n        if (!this._overlayRef.hasAttached()) {\n            this._overlayRef.attach(this._templatePortal);\n        }\n        if (this.hasBackdrop) {\n            this._backdropSubscription = this._overlayRef.backdropClick().subscribe(event => {\n                this.backdropClick.emit(event);\n            });\n        }\n        else {\n            this._backdropSubscription.unsubscribe();\n        }\n        this._positionSubscription.unsubscribe();\n        // Only subscribe to `positionChanges` if requested, because putting\n        // together all the information for it can be expensive.\n        if (this.positionChange.observers.length > 0) {\n            this._positionSubscription = this._position.positionChanges\n                .pipe(takeWhile(() => this.positionChange.observers.length > 0))\n                .subscribe(position => {\n                this.positionChange.emit(position);\n                if (this.positionChange.observers.length === 0) {\n                    this._positionSubscription.unsubscribe();\n                }\n            });\n        }\n    }\n    /** Detaches the overlay and unsubscribes to backdrop clicks if backdrop exists */\n    _detachOverlay() {\n        if (this._overlayRef) {\n            this._overlayRef.detach();\n        }\n        this._backdropSubscription.unsubscribe();\n        this._positionSubscription.unsubscribe();\n    }\n}\nCdkConnectedOverlay.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CdkConnectedOverlay, deps: [{ token: Overlay }, { token: i0.TemplateRef }, { token: i0.ViewContainerRef }, { token: CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY }, { token: i5.Directionality, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nCdkConnectedOverlay.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: CdkConnectedOverlay, selector: \"[cdk-connected-overlay], [connected-overlay], [cdkConnectedOverlay]\", inputs: { origin: [\"cdkConnectedOverlayOrigin\", \"origin\"], positions: [\"cdkConnectedOverlayPositions\", \"positions\"], positionStrategy: [\"cdkConnectedOverlayPositionStrategy\", \"positionStrategy\"], offsetX: [\"cdkConnectedOverlayOffsetX\", \"offsetX\"], offsetY: [\"cdkConnectedOverlayOffsetY\", \"offsetY\"], width: [\"cdkConnectedOverlayWidth\", \"width\"], height: [\"cdkConnectedOverlayHeight\", \"height\"], minWidth: [\"cdkConnectedOverlayMinWidth\", \"minWidth\"], minHeight: [\"cdkConnectedOverlayMinHeight\", \"minHeight\"], backdropClass: [\"cdkConnectedOverlayBackdropClass\", \"backdropClass\"], panelClass: [\"cdkConnectedOverlayPanelClass\", \"panelClass\"], viewportMargin: [\"cdkConnectedOverlayViewportMargin\", \"viewportMargin\"], scrollStrategy: [\"cdkConnectedOverlayScrollStrategy\", \"scrollStrategy\"], open: [\"cdkConnectedOverlayOpen\", \"open\"], disableClose: [\"cdkConnectedOverlayDisableClose\", \"disableClose\"], transformOriginSelector: [\"cdkConnectedOverlayTransformOriginOn\", \"transformOriginSelector\"], hasBackdrop: [\"cdkConnectedOverlayHasBackdrop\", \"hasBackdrop\"], lockPosition: [\"cdkConnectedOverlayLockPosition\", \"lockPosition\"], flexibleDimensions: [\"cdkConnectedOverlayFlexibleDimensions\", \"flexibleDimensions\"], growAfterOpen: [\"cdkConnectedOverlayGrowAfterOpen\", \"growAfterOpen\"], push: [\"cdkConnectedOverlayPush\", \"push\"] }, outputs: { backdropClick: \"backdropClick\", positionChange: \"positionChange\", attach: \"attach\", detach: \"detach\", overlayKeydown: \"overlayKeydown\", overlayOutsideClick: \"overlayOutsideClick\" }, exportAs: [\"cdkConnectedOverlay\"], usesOnChanges: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CdkConnectedOverlay, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdk-connected-overlay], [connected-overlay], [cdkConnectedOverlay]',\n                    exportAs: 'cdkConnectedOverlay',\n                }]\n        }], ctorParameters: function () {\n        return [{ type: Overlay }, { type: i0.TemplateRef }, { type: i0.ViewContainerRef }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY]\n                    }] }, { type: i5.Directionality, decorators: [{\n                        type: Optional\n                    }] }];\n    }, propDecorators: { origin: [{\n                type: Input,\n                args: ['cdkConnectedOverlayOrigin']\n            }], positions: [{\n                type: Input,\n                args: ['cdkConnectedOverlayPositions']\n            }], positionStrategy: [{\n                type: Input,\n                args: ['cdkConnectedOverlayPositionStrategy']\n            }], offsetX: [{\n                type: Input,\n                args: ['cdkConnectedOverlayOffsetX']\n            }], offsetY: [{\n                type: Input,\n                args: ['cdkConnectedOverlayOffsetY']\n            }], width: [{\n                type: Input,\n                args: ['cdkConnectedOverlayWidth']\n            }], height: [{\n                type: Input,\n                args: ['cdkConnectedOverlayHeight']\n            }], minWidth: [{\n                type: Input,\n                args: ['cdkConnectedOverlayMinWidth']\n            }], minHeight: [{\n                type: Input,\n                args: ['cdkConnectedOverlayMinHeight']\n            }], backdropClass: [{\n                type: Input,\n                args: ['cdkConnectedOverlayBackdropClass']\n            }], panelClass: [{\n                type: Input,\n                args: ['cdkConnectedOverlayPanelClass']\n            }], viewportMargin: [{\n                type: Input,\n                args: ['cdkConnectedOverlayViewportMargin']\n            }], scrollStrategy: [{\n                type: Input,\n                args: ['cdkConnectedOverlayScrollStrategy']\n            }], open: [{\n                type: Input,\n                args: ['cdkConnectedOverlayOpen']\n            }], disableClose: [{\n                type: Input,\n                args: ['cdkConnectedOverlayDisableClose']\n            }], transformOriginSelector: [{\n                type: Input,\n                args: ['cdkConnectedOverlayTransformOriginOn']\n            }], hasBackdrop: [{\n                type: Input,\n                args: ['cdkConnectedOverlayHasBackdrop']\n            }], lockPosition: [{\n                type: Input,\n                args: ['cdkConnectedOverlayLockPosition']\n            }], flexibleDimensions: [{\n                type: Input,\n                args: ['cdkConnectedOverlayFlexibleDimensions']\n            }], growAfterOpen: [{\n                type: Input,\n                args: ['cdkConnectedOverlayGrowAfterOpen']\n            }], push: [{\n                type: Input,\n                args: ['cdkConnectedOverlayPush']\n            }], backdropClick: [{\n                type: Output\n            }], positionChange: [{\n                type: Output\n            }], attach: [{\n                type: Output\n            }], detach: [{\n                type: Output\n            }], overlayKeydown: [{\n                type: Output\n            }], overlayOutsideClick: [{\n                type: Output\n            }] } });\n/** @docs-private */\nfunction CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay) {\n    return () => overlay.scrollStrategies.reposition();\n}\n/** @docs-private */\nconst CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER = {\n    provide: CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER_FACTORY,\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass OverlayModule {\n}\nOverlayModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: OverlayModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nOverlayModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: OverlayModule, declarations: [CdkConnectedOverlay, CdkOverlayOrigin], imports: [BidiModule, PortalModule, ScrollingModule], exports: [CdkConnectedOverlay, CdkOverlayOrigin, ScrollingModule] });\nOverlayModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: OverlayModule, providers: [Overlay, CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER], imports: [[BidiModule, PortalModule, ScrollingModule], ScrollingModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: OverlayModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [BidiModule, PortalModule, ScrollingModule],\n                    exports: [CdkConnectedOverlay, CdkOverlayOrigin, ScrollingModule],\n                    declarations: [CdkConnectedOverlay, CdkOverlayOrigin],\n                    providers: [Overlay, CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Alternative to OverlayContainer that supports correct displaying of overlay elements in\n * Fullscreen mode\n * https://developer.mozilla.org/en-US/docs/Web/API/Element/requestFullScreen\n *\n * Should be provided in the root component.\n */\nclass FullscreenOverlayContainer extends OverlayContainer {\n    constructor(_document, platform) {\n        super(_document, platform);\n    }\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        if (this._fullScreenEventName && this._fullScreenListener) {\n            this._document.removeEventListener(this._fullScreenEventName, this._fullScreenListener);\n        }\n    }\n    _createContainer() {\n        super._createContainer();\n        this._adjustParentForFullscreenChange();\n        this._addFullscreenChangeListener(() => this._adjustParentForFullscreenChange());\n    }\n    _adjustParentForFullscreenChange() {\n        if (!this._containerElement) {\n            return;\n        }\n        const fullscreenElement = this.getFullscreenElement();\n        const parent = fullscreenElement || this._document.body;\n        parent.appendChild(this._containerElement);\n    }\n    _addFullscreenChangeListener(fn) {\n        const eventName = this._getEventName();\n        if (eventName) {\n            if (this._fullScreenListener) {\n                this._document.removeEventListener(eventName, this._fullScreenListener);\n            }\n            this._document.addEventListener(eventName, fn);\n            this._fullScreenListener = fn;\n        }\n    }\n    _getEventName() {\n        if (!this._fullScreenEventName) {\n            const _document = this._document;\n            if (_document.fullscreenEnabled) {\n                this._fullScreenEventName = 'fullscreenchange';\n            }\n            else if (_document.webkitFullscreenEnabled) {\n                this._fullScreenEventName = 'webkitfullscreenchange';\n            }\n            else if (_document.mozFullScreenEnabled) {\n                this._fullScreenEventName = 'mozfullscreenchange';\n            }\n            else if (_document.msFullscreenEnabled) {\n                this._fullScreenEventName = 'MSFullscreenChange';\n            }\n        }\n        return this._fullScreenEventName;\n    }\n    /**\n     * When the page is put into fullscreen mode, a specific element is specified.\n     * Only that element and its children are visible when in fullscreen mode.\n     */\n    getFullscreenElement() {\n        const _document = this._document;\n        return (_document.fullscreenElement ||\n            _document.webkitFullscreenElement ||\n            _document.mozFullScreenElement ||\n            _document.msFullscreenElement ||\n            null);\n    }\n}\nFullscreenOverlayContainer.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: FullscreenOverlayContainer, deps: [{ token: DOCUMENT }, { token: i1$1.Platform }], target: i0.ɵɵFactoryTarget.Injectable });\nFullscreenOverlayContainer.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: FullscreenOverlayContainer, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: FullscreenOverlayContainer, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () {\n        return [{ type: undefined, decorators: [{\n                        type: Inject,\n                        args: [DOCUMENT]\n                    }] }, { type: i1$1.Platform }];\n    } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BlockScrollStrategy, CdkConnectedOverlay, CdkOverlayOrigin, CloseScrollStrategy, ConnectedOverlayPositionChange, ConnectionPositionPair, FlexibleConnectedPositionStrategy, FullscreenOverlayContainer, GlobalPositionStrategy, NoopScrollStrategy, Overlay, OverlayConfig, OverlayContainer, OverlayKeyboardDispatcher, OverlayModule, OverlayOutsideClickDispatcher, OverlayPositionBuilder, OverlayRef, RepositionScrollStrategy, ScrollStrategyOptions, ScrollingVisibility, validateHorizontalPosition, validateVerticalPosition };\n","import * as i0 from '@angular/core';\nimport { ElementRef, Directive, EventEmitter, Inject, Output, NgModule } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Throws an exception when attempting to attach a null portal to a host.\n * @docs-private\n */\nfunction throwNullPortalError() {\n    throw Error('Must provide a portal to attach');\n}\n/**\n * Throws an exception when attempting to attach a portal to a host that is already attached.\n * @docs-private\n */\nfunction throwPortalAlreadyAttachedError() {\n    throw Error('Host already has a portal attached');\n}\n/**\n * Throws an exception when attempting to attach a portal to an already-disposed host.\n * @docs-private\n */\nfunction throwPortalOutletAlreadyDisposedError() {\n    throw Error('This PortalOutlet has already been disposed');\n}\n/**\n * Throws an exception when attempting to attach an unknown portal type.\n * @docs-private\n */\nfunction throwUnknownPortalTypeError() {\n    throw Error('Attempting to attach an unknown Portal type. BasePortalOutlet accepts either ' +\n        'a ComponentPortal or a TemplatePortal.');\n}\n/**\n * Throws an exception when attempting to attach a portal to a null host.\n * @docs-private\n */\nfunction throwNullPortalOutletError() {\n    throw Error('Attempting to attach a portal to a null PortalOutlet');\n}\n/**\n * Throws an exception when attempting to detach a portal that is not attached.\n * @docs-private\n */\nfunction throwNoPortalAttachedError() {\n    throw Error('Attempting to detach a portal that is not attached to a host');\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A `Portal` is something that you want to render somewhere else.\n * It can be attach to / detached from a `PortalOutlet`.\n */\nclass Portal {\n    /** Attach this portal to a host. */\n    attach(host) {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (host == null) {\n                throwNullPortalOutletError();\n            }\n            if (host.hasAttached()) {\n                throwPortalAlreadyAttachedError();\n            }\n        }\n        this._attachedHost = host;\n        return host.attach(this);\n    }\n    /** Detach this portal from its host */\n    detach() {\n        let host = this._attachedHost;\n        if (host != null) {\n            this._attachedHost = null;\n            host.detach();\n        }\n        else if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            throwNoPortalAttachedError();\n        }\n    }\n    /** Whether this portal is attached to a host. */\n    get isAttached() {\n        return this._attachedHost != null;\n    }\n    /**\n     * Sets the PortalOutlet reference without performing `attach()`. This is used directly by\n     * the PortalOutlet when it is performing an `attach()` or `detach()`.\n     */\n    setAttachedHost(host) {\n        this._attachedHost = host;\n    }\n}\n/**\n * A `ComponentPortal` is a portal that instantiates some Component upon attachment.\n */\nclass ComponentPortal extends Portal {\n    constructor(component, viewContainerRef, injector, componentFactoryResolver) {\n        super();\n        this.component = component;\n        this.viewContainerRef = viewContainerRef;\n        this.injector = injector;\n        this.componentFactoryResolver = componentFactoryResolver;\n    }\n}\n/**\n * A `TemplatePortal` is a portal that represents some embedded template (TemplateRef).\n */\nclass TemplatePortal extends Portal {\n    constructor(template, viewContainerRef, context) {\n        super();\n        this.templateRef = template;\n        this.viewContainerRef = viewContainerRef;\n        this.context = context;\n    }\n    get origin() {\n        return this.templateRef.elementRef;\n    }\n    /**\n     * Attach the portal to the provided `PortalOutlet`.\n     * When a context is provided it will override the `context` property of the `TemplatePortal`\n     * instance.\n     */\n    attach(host, context = this.context) {\n        this.context = context;\n        return super.attach(host);\n    }\n    detach() {\n        this.context = undefined;\n        return super.detach();\n    }\n}\n/**\n * A `DomPortal` is a portal whose DOM element will be taken from its current position\n * in the DOM and moved into a portal outlet, when it is attached. On detach, the content\n * will be restored to its original position.\n */\nclass DomPortal extends Portal {\n    constructor(element) {\n        super();\n        this.element = element instanceof ElementRef ? element.nativeElement : element;\n    }\n}\n/**\n * Partial implementation of PortalOutlet that handles attaching\n * ComponentPortal and TemplatePortal.\n */\nclass BasePortalOutlet {\n    constructor() {\n        /** Whether this host has already been permanently disposed. */\n        this._isDisposed = false;\n        // @breaking-change 10.0.0 `attachDomPortal` to become a required abstract method.\n        this.attachDomPortal = null;\n    }\n    /** Whether this host has an attached portal. */\n    hasAttached() {\n        return !!this._attachedPortal;\n    }\n    /** Attaches a portal. */\n    attach(portal) {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (!portal) {\n                throwNullPortalError();\n            }\n            if (this.hasAttached()) {\n                throwPortalAlreadyAttachedError();\n            }\n            if (this._isDisposed) {\n                throwPortalOutletAlreadyDisposedError();\n            }\n        }\n        if (portal instanceof ComponentPortal) {\n            this._attachedPortal = portal;\n            return this.attachComponentPortal(portal);\n        }\n        else if (portal instanceof TemplatePortal) {\n            this._attachedPortal = portal;\n            return this.attachTemplatePortal(portal);\n            // @breaking-change 10.0.0 remove null check for `this.attachDomPortal`.\n        }\n        else if (this.attachDomPortal && portal instanceof DomPortal) {\n            this._attachedPortal = portal;\n            return this.attachDomPortal(portal);\n        }\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            throwUnknownPortalTypeError();\n        }\n    }\n    /** Detaches a previously attached portal. */\n    detach() {\n        if (this._attachedPortal) {\n            this._attachedPortal.setAttachedHost(null);\n            this._attachedPortal = null;\n        }\n        this._invokeDisposeFn();\n    }\n    /** Permanently dispose of this portal host. */\n    dispose() {\n        if (this.hasAttached()) {\n            this.detach();\n        }\n        this._invokeDisposeFn();\n        this._isDisposed = true;\n    }\n    /** @docs-private */\n    setDisposeFn(fn) {\n        this._disposeFn = fn;\n    }\n    _invokeDisposeFn() {\n        if (this._disposeFn) {\n            this._disposeFn();\n            this._disposeFn = null;\n        }\n    }\n}\n/**\n * @deprecated Use `BasePortalOutlet` instead.\n * @breaking-change 9.0.0\n */\nclass BasePortalHost extends BasePortalOutlet {\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A PortalOutlet for attaching portals to an arbitrary DOM element outside of the Angular\n * application context.\n */\nclass DomPortalOutlet extends BasePortalOutlet {\n    constructor(\n    /** Element into which the content is projected. */\n    outletElement, _componentFactoryResolver, _appRef, _defaultInjector, \n    /**\n     * @deprecated `_document` Parameter to be made required.\n     * @breaking-change 10.0.0\n     */\n    _document) {\n        super();\n        this.outletElement = outletElement;\n        this._componentFactoryResolver = _componentFactoryResolver;\n        this._appRef = _appRef;\n        this._defaultInjector = _defaultInjector;\n        /**\n         * Attaches a DOM portal by transferring its content into the outlet.\n         * @param portal Portal to be attached.\n         * @deprecated To be turned into a method.\n         * @breaking-change 10.0.0\n         */\n        this.attachDomPortal = (portal) => {\n            // @breaking-change 10.0.0 Remove check and error once the\n            // `_document` constructor parameter is required.\n            if (!this._document && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw Error('Cannot attach DOM portal without _document constructor parameter');\n            }\n            const element = portal.element;\n            if (!element.parentNode && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw Error('DOM portal content must be attached to a parent node.');\n            }\n            // Anchor used to save the element's previous position so\n            // that we can restore it when the portal is detached.\n            const anchorNode = this._document.createComment('dom-portal');\n            element.parentNode.insertBefore(anchorNode, element);\n            this.outletElement.appendChild(element);\n            this._attachedPortal = portal;\n            super.setDisposeFn(() => {\n                // We can't use `replaceWith` here because IE doesn't support it.\n                if (anchorNode.parentNode) {\n                    anchorNode.parentNode.replaceChild(element, anchorNode);\n                }\n            });\n        };\n        this._document = _document;\n    }\n    /**\n     * Attach the given ComponentPortal to DOM element using the ComponentFactoryResolver.\n     * @param portal Portal to be attached\n     * @returns Reference to the created component.\n     */\n    attachComponentPortal(portal) {\n        const resolver = portal.componentFactoryResolver || this._componentFactoryResolver;\n        const componentFactory = resolver.resolveComponentFactory(portal.component);\n        let componentRef;\n        // If the portal specifies a ViewContainerRef, we will use that as the attachment point\n        // for the component (in terms of Angular's component tree, not rendering).\n        // When the ViewContainerRef is missing, we use the factory to create the component directly\n        // and then manually attach the view to the application.\n        if (portal.viewContainerRef) {\n            componentRef = portal.viewContainerRef.createComponent(componentFactory, portal.viewContainerRef.length, portal.injector || portal.viewContainerRef.injector);\n            this.setDisposeFn(() => componentRef.destroy());\n        }\n        else {\n            componentRef = componentFactory.create(portal.injector || this._defaultInjector);\n            this._appRef.attachView(componentRef.hostView);\n            this.setDisposeFn(() => {\n                this._appRef.detachView(componentRef.hostView);\n                componentRef.destroy();\n            });\n        }\n        // At this point the component has been instantiated, so we move it to the location in the DOM\n        // where we want it to be rendered.\n        this.outletElement.appendChild(this._getComponentRootNode(componentRef));\n        this._attachedPortal = portal;\n        return componentRef;\n    }\n    /**\n     * Attaches a template portal to the DOM as an embedded view.\n     * @param portal Portal to be attached.\n     * @returns Reference to the created embedded view.\n     */\n    attachTemplatePortal(portal) {\n        let viewContainer = portal.viewContainerRef;\n        let viewRef = viewContainer.createEmbeddedView(portal.templateRef, portal.context);\n        // The method `createEmbeddedView` will add the view as a child of the viewContainer.\n        // But for the DomPortalOutlet the view can be added everywhere in the DOM\n        // (e.g Overlay Container) To move the view to the specified host element. We just\n        // re-append the existing root nodes.\n        viewRef.rootNodes.forEach(rootNode => this.outletElement.appendChild(rootNode));\n        // Note that we want to detect changes after the nodes have been moved so that\n        // any directives inside the portal that are looking at the DOM inside a lifecycle\n        // hook won't be invoked too early.\n        viewRef.detectChanges();\n        this.setDisposeFn(() => {\n            let index = viewContainer.indexOf(viewRef);\n            if (index !== -1) {\n                viewContainer.remove(index);\n            }\n        });\n        this._attachedPortal = portal;\n        // TODO(jelbourn): Return locals from view.\n        return viewRef;\n    }\n    /**\n     * Clears out a portal from the DOM.\n     */\n    dispose() {\n        super.dispose();\n        this.outletElement.remove();\n    }\n    /** Gets the root HTMLElement for an instantiated component. */\n    _getComponentRootNode(componentRef) {\n        return componentRef.hostView.rootNodes[0];\n    }\n}\n/**\n * @deprecated Use `DomPortalOutlet` instead.\n * @breaking-change 9.0.0\n */\nclass DomPortalHost extends DomPortalOutlet {\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Directive version of a `TemplatePortal`. Because the directive *is* a TemplatePortal,\n * the directive instance itself can be attached to a host, enabling declarative use of portals.\n */\nclass CdkPortal extends TemplatePortal {\n    constructor(templateRef, viewContainerRef) {\n        super(templateRef, viewContainerRef);\n    }\n}\nCdkPortal.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CdkPortal, deps: [{ token: i0.TemplateRef }, { token: i0.ViewContainerRef }], target: i0.ɵɵFactoryTarget.Directive });\nCdkPortal.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: CdkPortal, selector: \"[cdkPortal]\", exportAs: [\"cdkPortal\"], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CdkPortal, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkPortal]',\n                    exportAs: 'cdkPortal',\n                }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }, { type: i0.ViewContainerRef }]; } });\n/**\n * @deprecated Use `CdkPortal` instead.\n * @breaking-change 9.0.0\n */\nclass TemplatePortalDirective extends CdkPortal {\n}\nTemplatePortalDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: TemplatePortalDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nTemplatePortalDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: TemplatePortalDirective, selector: \"[cdk-portal], [portal]\", providers: [\n        {\n            provide: CdkPortal,\n            useExisting: TemplatePortalDirective,\n        },\n    ], exportAs: [\"cdkPortal\"], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: TemplatePortalDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdk-portal], [portal]',\n                    exportAs: 'cdkPortal',\n                    providers: [\n                        {\n                            provide: CdkPortal,\n                            useExisting: TemplatePortalDirective,\n                        },\n                    ],\n                }]\n        }] });\n/**\n * Directive version of a PortalOutlet. Because the directive *is* a PortalOutlet, portals can be\n * directly attached to it, enabling declarative use.\n *\n * Usage:\n * `<ng-template [cdkPortalOutlet]=\"greeting\"></ng-template>`\n */\nclass CdkPortalOutlet extends BasePortalOutlet {\n    constructor(_componentFactoryResolver, _viewContainerRef, \n    /**\n     * @deprecated `_document` parameter to be made required.\n     * @breaking-change 9.0.0\n     */\n    _document) {\n        super();\n        this._componentFactoryResolver = _componentFactoryResolver;\n        this._viewContainerRef = _viewContainerRef;\n        /** Whether the portal component is initialized. */\n        this._isInitialized = false;\n        /** Emits when a portal is attached to the outlet. */\n        this.attached = new EventEmitter();\n        /**\n         * Attaches the given DomPortal to this PortalHost by moving all of the portal content into it.\n         * @param portal Portal to be attached.\n         * @deprecated To be turned into a method.\n         * @breaking-change 10.0.0\n         */\n        this.attachDomPortal = (portal) => {\n            // @breaking-change 9.0.0 Remove check and error once the\n            // `_document` constructor parameter is required.\n            if (!this._document && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw Error('Cannot attach DOM portal without _document constructor parameter');\n            }\n            const element = portal.element;\n            if (!element.parentNode && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw Error('DOM portal content must be attached to a parent node.');\n            }\n            // Anchor used to save the element's previous position so\n            // that we can restore it when the portal is detached.\n            const anchorNode = this._document.createComment('dom-portal');\n            portal.setAttachedHost(this);\n            element.parentNode.insertBefore(anchorNode, element);\n            this._getRootNode().appendChild(element);\n            this._attachedPortal = portal;\n            super.setDisposeFn(() => {\n                if (anchorNode.parentNode) {\n                    anchorNode.parentNode.replaceChild(element, anchorNode);\n                }\n            });\n        };\n        this._document = _document;\n    }\n    /** Portal associated with the Portal outlet. */\n    get portal() {\n        return this._attachedPortal;\n    }\n    set portal(portal) {\n        // Ignore the cases where the `portal` is set to a falsy value before the lifecycle hooks have\n        // run. This handles the cases where the user might do something like `<div cdkPortalOutlet>`\n        // and attach a portal programmatically in the parent component. When Angular does the first CD\n        // round, it will fire the setter with empty string, causing the user's content to be cleared.\n        if (this.hasAttached() && !portal && !this._isInitialized) {\n            return;\n        }\n        if (this.hasAttached()) {\n            super.detach();\n        }\n        if (portal) {\n            super.attach(portal);\n        }\n        this._attachedPortal = portal || null;\n    }\n    /** Component or view reference that is attached to the portal. */\n    get attachedRef() {\n        return this._attachedRef;\n    }\n    ngOnInit() {\n        this._isInitialized = true;\n    }\n    ngOnDestroy() {\n        super.dispose();\n        this._attachedPortal = null;\n        this._attachedRef = null;\n    }\n    /**\n     * Attach the given ComponentPortal to this PortalOutlet using the ComponentFactoryResolver.\n     *\n     * @param portal Portal to be attached to the portal outlet.\n     * @returns Reference to the created component.\n     */\n    attachComponentPortal(portal) {\n        portal.setAttachedHost(this);\n        // If the portal specifies an origin, use that as the logical location of the component\n        // in the application tree. Otherwise use the location of this PortalOutlet.\n        const viewContainerRef = portal.viewContainerRef != null ? portal.viewContainerRef : this._viewContainerRef;\n        const resolver = portal.componentFactoryResolver || this._componentFactoryResolver;\n        const componentFactory = resolver.resolveComponentFactory(portal.component);\n        const ref = viewContainerRef.createComponent(componentFactory, viewContainerRef.length, portal.injector || viewContainerRef.injector);\n        // If we're using a view container that's different from the injected one (e.g. when the portal\n        // specifies its own) we need to move the component into the outlet, otherwise it'll be rendered\n        // inside of the alternate view container.\n        if (viewContainerRef !== this._viewContainerRef) {\n            this._getRootNode().appendChild(ref.hostView.rootNodes[0]);\n        }\n        super.setDisposeFn(() => ref.destroy());\n        this._attachedPortal = portal;\n        this._attachedRef = ref;\n        this.attached.emit(ref);\n        return ref;\n    }\n    /**\n     * Attach the given TemplatePortal to this PortalHost as an embedded View.\n     * @param portal Portal to be attached.\n     * @returns Reference to the created embedded view.\n     */\n    attachTemplatePortal(portal) {\n        portal.setAttachedHost(this);\n        const viewRef = this._viewContainerRef.createEmbeddedView(portal.templateRef, portal.context);\n        super.setDisposeFn(() => this._viewContainerRef.clear());\n        this._attachedPortal = portal;\n        this._attachedRef = viewRef;\n        this.attached.emit(viewRef);\n        return viewRef;\n    }\n    /** Gets the root node of the portal outlet. */\n    _getRootNode() {\n        const nativeElement = this._viewContainerRef.element.nativeElement;\n        // The directive could be set on a template which will result in a comment\n        // node being the root. Use the comment's parent node if that is the case.\n        return (nativeElement.nodeType === nativeElement.ELEMENT_NODE\n            ? nativeElement\n            : nativeElement.parentNode);\n    }\n}\nCdkPortalOutlet.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CdkPortalOutlet, deps: [{ token: i0.ComponentFactoryResolver }, { token: i0.ViewContainerRef }, { token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Directive });\nCdkPortalOutlet.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: CdkPortalOutlet, selector: \"[cdkPortalOutlet]\", inputs: { portal: [\"cdkPortalOutlet\", \"portal\"] }, outputs: { attached: \"attached\" }, exportAs: [\"cdkPortalOutlet\"], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CdkPortalOutlet, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkPortalOutlet]',\n                    exportAs: 'cdkPortalOutlet',\n                    inputs: ['portal: cdkPortalOutlet'],\n                }]\n        }], ctorParameters: function () {\n        return [{ type: i0.ComponentFactoryResolver }, { type: i0.ViewContainerRef }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [DOCUMENT]\n                    }] }];\n    }, propDecorators: { attached: [{\n                type: Output\n            }] } });\n/**\n * @deprecated Use `CdkPortalOutlet` instead.\n * @breaking-change 9.0.0\n */\nclass PortalHostDirective extends CdkPortalOutlet {\n}\nPortalHostDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: PortalHostDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nPortalHostDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: PortalHostDirective, selector: \"[cdkPortalHost], [portalHost]\", inputs: { portal: [\"cdkPortalHost\", \"portal\"] }, providers: [\n        {\n            provide: CdkPortalOutlet,\n            useExisting: PortalHostDirective,\n        },\n    ], exportAs: [\"cdkPortalHost\"], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: PortalHostDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkPortalHost], [portalHost]',\n                    exportAs: 'cdkPortalHost',\n                    inputs: ['portal: cdkPortalHost'],\n                    providers: [\n                        {\n                            provide: CdkPortalOutlet,\n                            useExisting: PortalHostDirective,\n                        },\n                    ],\n                }]\n        }] });\nclass PortalModule {\n}\nPortalModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: PortalModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nPortalModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: PortalModule, declarations: [CdkPortal, CdkPortalOutlet, TemplatePortalDirective, PortalHostDirective], exports: [CdkPortal, CdkPortalOutlet, TemplatePortalDirective, PortalHostDirective] });\nPortalModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: PortalModule });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: PortalModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    exports: [CdkPortal, CdkPortalOutlet, TemplatePortalDirective, PortalHostDirective],\n                    declarations: [CdkPortal, CdkPortalOutlet, TemplatePortalDirective, PortalHostDirective],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Custom injector to be used when providing custom\n * injection tokens to components inside a portal.\n * @docs-private\n * @deprecated Use `Injector.create` instead.\n * @breaking-change 11.0.0\n */\nclass PortalInjector {\n    constructor(_parentInjector, _customTokens) {\n        this._parentInjector = _parentInjector;\n        this._customTokens = _customTokens;\n    }\n    get(token, notFoundValue) {\n        const value = this._customTokens.get(token);\n        if (typeof value !== 'undefined') {\n            return value;\n        }\n        return this._parentInjector.get(token, notFoundValue);\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BasePortalHost, BasePortalOutlet, CdkPortal, CdkPortalOutlet, ComponentPortal, DomPortal, DomPortalHost, DomPortalOutlet, Portal, PortalHostDirective, PortalInjector, PortalModule, TemplatePortal, TemplatePortalDirective };\n","import { coerceNumberProperty, coerceElement, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, forwardRef, Directive, Input, Injectable, Optional, Inject, Component, ViewEncapsulation, ChangeDetectionStrategy, Output, ViewChild, SkipSelf, NgModule } from '@angular/core';\nimport { Subject, of, Observable, fromEvent, animationFrameScheduler, asapScheduler, Subscription, isObservable } from 'rxjs';\nimport { distinctUntilChanged, auditTime, filter, takeUntil, startWith, pairwise, switchMap, shareReplay } from 'rxjs/operators';\nimport { DOCUMENT } from '@angular/common';\nimport * as i1 from '@angular/cdk/platform';\nimport { getRtlScrollAxisType, supportsScrollBehavior, PlatformModule } from '@angular/cdk/platform';\nimport * as i2 from '@angular/cdk/bidi';\nimport { BidiModule } from '@angular/cdk/bidi';\nimport * as i2$1 from '@angular/cdk/collections';\nimport { isDataSource, ArrayDataSource, _VIEW_REPEATER_STRATEGY, _RecycleViewRepeaterStrategy } from '@angular/cdk/collections';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** The injection token used to specify the virtual scrolling strategy. */\nconst VIRTUAL_SCROLL_STRATEGY = new InjectionToken('VIRTUAL_SCROLL_STRATEGY');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Virtual scrolling strategy for lists with items of known fixed size. */\nclass FixedSizeVirtualScrollStrategy {\n    /**\n     * @param itemSize The size of the items in the virtually scrolling list.\n     * @param minBufferPx The minimum amount of buffer (in pixels) before needing to render more\n     * @param maxBufferPx The amount of buffer (in pixels) to render when rendering more.\n     */\n    constructor(itemSize, minBufferPx, maxBufferPx) {\n        this._scrolledIndexChange = new Subject();\n        /** @docs-private Implemented as part of VirtualScrollStrategy. */\n        this.scrolledIndexChange = this._scrolledIndexChange.pipe(distinctUntilChanged());\n        /** The attached viewport. */\n        this._viewport = null;\n        this._itemSize = itemSize;\n        this._minBufferPx = minBufferPx;\n        this._maxBufferPx = maxBufferPx;\n    }\n    /**\n     * Attaches this scroll strategy to a viewport.\n     * @param viewport The viewport to attach this strategy to.\n     */\n    attach(viewport) {\n        this._viewport = viewport;\n        this._updateTotalContentSize();\n        this._updateRenderedRange();\n    }\n    /** Detaches this scroll strategy from the currently attached viewport. */\n    detach() {\n        this._scrolledIndexChange.complete();\n        this._viewport = null;\n    }\n    /**\n     * Update the item size and buffer size.\n     * @param itemSize The size of the items in the virtually scrolling list.\n     * @param minBufferPx The minimum amount of buffer (in pixels) before needing to render more\n     * @param maxBufferPx The amount of buffer (in pixels) to render when rendering more.\n     */\n    updateItemAndBufferSize(itemSize, minBufferPx, maxBufferPx) {\n        if (maxBufferPx < minBufferPx && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error('CDK virtual scroll: maxBufferPx must be greater than or equal to minBufferPx');\n        }\n        this._itemSize = itemSize;\n        this._minBufferPx = minBufferPx;\n        this._maxBufferPx = maxBufferPx;\n        this._updateTotalContentSize();\n        this._updateRenderedRange();\n    }\n    /** @docs-private Implemented as part of VirtualScrollStrategy. */\n    onContentScrolled() {\n        this._updateRenderedRange();\n    }\n    /** @docs-private Implemented as part of VirtualScrollStrategy. */\n    onDataLengthChanged() {\n        this._updateTotalContentSize();\n        this._updateRenderedRange();\n    }\n    /** @docs-private Implemented as part of VirtualScrollStrategy. */\n    onContentRendered() {\n        /* no-op */\n    }\n    /** @docs-private Implemented as part of VirtualScrollStrategy. */\n    onRenderedOffsetChanged() {\n        /* no-op */\n    }\n    /**\n     * Scroll to the offset for the given index.\n     * @param index The index of the element to scroll to.\n     * @param behavior The ScrollBehavior to use when scrolling.\n     */\n    scrollToIndex(index, behavior) {\n        if (this._viewport) {\n            this._viewport.scrollToOffset(index * this._itemSize, behavior);\n        }\n    }\n    /** Update the viewport's total content size. */\n    _updateTotalContentSize() {\n        if (!this._viewport) {\n            return;\n        }\n        this._viewport.setTotalContentSize(this._viewport.getDataLength() * this._itemSize);\n    }\n    /** Update the viewport's rendered range. */\n    _updateRenderedRange() {\n        if (!this._viewport) {\n            return;\n        }\n        const renderedRange = this._viewport.getRenderedRange();\n        const newRange = { start: renderedRange.start, end: renderedRange.end };\n        const viewportSize = this._viewport.getViewportSize();\n        const dataLength = this._viewport.getDataLength();\n        let scrollOffset = this._viewport.measureScrollOffset();\n        // Prevent NaN as result when dividing by zero.\n        let firstVisibleIndex = this._itemSize > 0 ? scrollOffset / this._itemSize : 0;\n        // If user scrolls to the bottom of the list and data changes to a smaller list\n        if (newRange.end > dataLength) {\n            // We have to recalculate the first visible index based on new data length and viewport size.\n            const maxVisibleItems = Math.ceil(viewportSize / this._itemSize);\n            const newVisibleIndex = Math.max(0, Math.min(firstVisibleIndex, dataLength - maxVisibleItems));\n            // If first visible index changed we must update scroll offset to handle start/end buffers\n            // Current range must also be adjusted to cover the new position (bottom of new list).\n            if (firstVisibleIndex != newVisibleIndex) {\n                firstVisibleIndex = newVisibleIndex;\n                scrollOffset = newVisibleIndex * this._itemSize;\n                newRange.start = Math.floor(firstVisibleIndex);\n            }\n            newRange.end = Math.max(0, Math.min(dataLength, newRange.start + maxVisibleItems));\n        }\n        const startBuffer = scrollOffset - newRange.start * this._itemSize;\n        if (startBuffer < this._minBufferPx && newRange.start != 0) {\n            const expandStart = Math.ceil((this._maxBufferPx - startBuffer) / this._itemSize);\n            newRange.start = Math.max(0, newRange.start - expandStart);\n            newRange.end = Math.min(dataLength, Math.ceil(firstVisibleIndex + (viewportSize + this._minBufferPx) / this._itemSize));\n        }\n        else {\n            const endBuffer = newRange.end * this._itemSize - (scrollOffset + viewportSize);\n            if (endBuffer < this._minBufferPx && newRange.end != dataLength) {\n                const expandEnd = Math.ceil((this._maxBufferPx - endBuffer) / this._itemSize);\n                if (expandEnd > 0) {\n                    newRange.end = Math.min(dataLength, newRange.end + expandEnd);\n                    newRange.start = Math.max(0, Math.floor(firstVisibleIndex - this._minBufferPx / this._itemSize));\n                }\n            }\n        }\n        this._viewport.setRenderedRange(newRange);\n        this._viewport.setRenderedContentOffset(this._itemSize * newRange.start);\n        this._scrolledIndexChange.next(Math.floor(firstVisibleIndex));\n    }\n}\n/**\n * Provider factory for `FixedSizeVirtualScrollStrategy` that simply extracts the already created\n * `FixedSizeVirtualScrollStrategy` from the given directive.\n * @param fixedSizeDir The instance of `CdkFixedSizeVirtualScroll` to extract the\n *     `FixedSizeVirtualScrollStrategy` from.\n */\nfunction _fixedSizeVirtualScrollStrategyFactory(fixedSizeDir) {\n    return fixedSizeDir._scrollStrategy;\n}\n/** A virtual scroll strategy that supports fixed-size items. */\nclass CdkFixedSizeVirtualScroll {\n    constructor() {\n        this._itemSize = 20;\n        this._minBufferPx = 100;\n        this._maxBufferPx = 200;\n        /** The scroll strategy used by this directive. */\n        this._scrollStrategy = new FixedSizeVirtualScrollStrategy(this.itemSize, this.minBufferPx, this.maxBufferPx);\n    }\n    /** The size of the items in the list (in pixels). */\n    get itemSize() {\n        return this._itemSize;\n    }\n    set itemSize(value) {\n        this._itemSize = coerceNumberProperty(value);\n    }\n    /**\n     * The minimum amount of buffer rendered beyond the viewport (in pixels).\n     * If the amount of buffer dips below this number, more items will be rendered. Defaults to 100px.\n     */\n    get minBufferPx() {\n        return this._minBufferPx;\n    }\n    set minBufferPx(value) {\n        this._minBufferPx = coerceNumberProperty(value);\n    }\n    /**\n     * The number of pixels worth of buffer to render for when rendering new items. Defaults to 200px.\n     */\n    get maxBufferPx() {\n        return this._maxBufferPx;\n    }\n    set maxBufferPx(value) {\n        this._maxBufferPx = coerceNumberProperty(value);\n    }\n    ngOnChanges() {\n        this._scrollStrategy.updateItemAndBufferSize(this.itemSize, this.minBufferPx, this.maxBufferPx);\n    }\n}\nCdkFixedSizeVirtualScroll.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CdkFixedSizeVirtualScroll, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nCdkFixedSizeVirtualScroll.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: CdkFixedSizeVirtualScroll, selector: \"cdk-virtual-scroll-viewport[itemSize]\", inputs: { itemSize: \"itemSize\", minBufferPx: \"minBufferPx\", maxBufferPx: \"maxBufferPx\" }, providers: [\n        {\n            provide: VIRTUAL_SCROLL_STRATEGY,\n            useFactory: _fixedSizeVirtualScrollStrategyFactory,\n            deps: [forwardRef(() => CdkFixedSizeVirtualScroll)],\n        },\n    ], usesOnChanges: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CdkFixedSizeVirtualScroll, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'cdk-virtual-scroll-viewport[itemSize]',\n                    providers: [\n                        {\n                            provide: VIRTUAL_SCROLL_STRATEGY,\n                            useFactory: _fixedSizeVirtualScrollStrategyFactory,\n                            deps: [forwardRef(() => CdkFixedSizeVirtualScroll)],\n                        },\n                    ],\n                }]\n        }], propDecorators: { itemSize: [{\n                type: Input\n            }], minBufferPx: [{\n                type: Input\n            }], maxBufferPx: [{\n                type: Input\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Time in ms to throttle the scrolling events by default. */\nconst DEFAULT_SCROLL_TIME = 20;\n/**\n * Service contained all registered Scrollable references and emits an event when any one of the\n * Scrollable references emit a scrolled event.\n */\nclass ScrollDispatcher {\n    constructor(_ngZone, _platform, document) {\n        this._ngZone = _ngZone;\n        this._platform = _platform;\n        /** Subject for notifying that a registered scrollable reference element has been scrolled. */\n        this._scrolled = new Subject();\n        /** Keeps track of the global `scroll` and `resize` subscriptions. */\n        this._globalSubscription = null;\n        /** Keeps track of the amount of subscriptions to `scrolled`. Used for cleaning up afterwards. */\n        this._scrolledCount = 0;\n        /**\n         * Map of all the scrollable references that are registered with the service and their\n         * scroll event subscriptions.\n         */\n        this.scrollContainers = new Map();\n        this._document = document;\n    }\n    /**\n     * Registers a scrollable instance with the service and listens for its scrolled events. When the\n     * scrollable is scrolled, the service emits the event to its scrolled observable.\n     * @param scrollable Scrollable instance to be registered.\n     */\n    register(scrollable) {\n        if (!this.scrollContainers.has(scrollable)) {\n            this.scrollContainers.set(scrollable, scrollable.elementScrolled().subscribe(() => this._scrolled.next(scrollable)));\n        }\n    }\n    /**\n     * Deregisters a Scrollable reference and unsubscribes from its scroll event observable.\n     * @param scrollable Scrollable instance to be deregistered.\n     */\n    deregister(scrollable) {\n        const scrollableReference = this.scrollContainers.get(scrollable);\n        if (scrollableReference) {\n            scrollableReference.unsubscribe();\n            this.scrollContainers.delete(scrollable);\n        }\n    }\n    /**\n     * Returns an observable that emits an event whenever any of the registered Scrollable\n     * references (or window, document, or body) fire a scrolled event. Can provide a time in ms\n     * to override the default \"throttle\" time.\n     *\n     * **Note:** in order to avoid hitting change detection for every scroll event,\n     * all of the events emitted from this stream will be run outside the Angular zone.\n     * If you need to update any data bindings as a result of a scroll event, you have\n     * to run the callback using `NgZone.run`.\n     */\n    scrolled(auditTimeInMs = DEFAULT_SCROLL_TIME) {\n        if (!this._platform.isBrowser) {\n            return of();\n        }\n        return new Observable((observer) => {\n            if (!this._globalSubscription) {\n                this._addGlobalListener();\n            }\n            // In the case of a 0ms delay, use an observable without auditTime\n            // since it does add a perceptible delay in processing overhead.\n            const subscription = auditTimeInMs > 0\n                ? this._scrolled.pipe(auditTime(auditTimeInMs)).subscribe(observer)\n                : this._scrolled.subscribe(observer);\n            this._scrolledCount++;\n            return () => {\n                subscription.unsubscribe();\n                this._scrolledCount--;\n                if (!this._scrolledCount) {\n                    this._removeGlobalListener();\n                }\n            };\n        });\n    }\n    ngOnDestroy() {\n        this._removeGlobalListener();\n        this.scrollContainers.forEach((_, container) => this.deregister(container));\n        this._scrolled.complete();\n    }\n    /**\n     * Returns an observable that emits whenever any of the\n     * scrollable ancestors of an element are scrolled.\n     * @param elementOrElementRef Element whose ancestors to listen for.\n     * @param auditTimeInMs Time to throttle the scroll events.\n     */\n    ancestorScrolled(elementOrElementRef, auditTimeInMs) {\n        const ancestors = this.getAncestorScrollContainers(elementOrElementRef);\n        return this.scrolled(auditTimeInMs).pipe(filter(target => {\n            return !target || ancestors.indexOf(target) > -1;\n        }));\n    }\n    /** Returns all registered Scrollables that contain the provided element. */\n    getAncestorScrollContainers(elementOrElementRef) {\n        const scrollingContainers = [];\n        this.scrollContainers.forEach((_subscription, scrollable) => {\n            if (this._scrollableContainsElement(scrollable, elementOrElementRef)) {\n                scrollingContainers.push(scrollable);\n            }\n        });\n        return scrollingContainers;\n    }\n    /** Use defaultView of injected document if available or fallback to global window reference */\n    _getWindow() {\n        return this._document.defaultView || window;\n    }\n    /** Returns true if the element is contained within the provided Scrollable. */\n    _scrollableContainsElement(scrollable, elementOrElementRef) {\n        let element = coerceElement(elementOrElementRef);\n        let scrollableElement = scrollable.getElementRef().nativeElement;\n        // Traverse through the element parents until we reach null, checking if any of the elements\n        // are the scrollable's element.\n        do {\n            if (element == scrollableElement) {\n                return true;\n            }\n        } while ((element = element.parentElement));\n        return false;\n    }\n    /** Sets up the global scroll listeners. */\n    _addGlobalListener() {\n        this._globalSubscription = this._ngZone.runOutsideAngular(() => {\n            const window = this._getWindow();\n            return fromEvent(window.document, 'scroll').subscribe(() => this._scrolled.next());\n        });\n    }\n    /** Cleans up the global scroll listener. */\n    _removeGlobalListener() {\n        if (this._globalSubscription) {\n            this._globalSubscription.unsubscribe();\n            this._globalSubscription = null;\n        }\n    }\n}\nScrollDispatcher.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: ScrollDispatcher, deps: [{ token: i0.NgZone }, { token: i1.Platform }, { token: DOCUMENT, optional: true }], target: i0.ɵɵFactoryTarget.Injectable });\nScrollDispatcher.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: ScrollDispatcher, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: ScrollDispatcher, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () {\n        return [{ type: i0.NgZone }, { type: i1.Platform }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [DOCUMENT]\n                    }] }];\n    } });\n\n/**\n * Sends an event when the directive's element is scrolled. Registers itself with the\n * ScrollDispatcher service to include itself as part of its collection of scrolling events that it\n * can be listened to through the service.\n */\nclass CdkScrollable {\n    constructor(elementRef, scrollDispatcher, ngZone, dir) {\n        this.elementRef = elementRef;\n        this.scrollDispatcher = scrollDispatcher;\n        this.ngZone = ngZone;\n        this.dir = dir;\n        this._destroyed = new Subject();\n        this._elementScrolled = new Observable((observer) => this.ngZone.runOutsideAngular(() => fromEvent(this.elementRef.nativeElement, 'scroll')\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(observer)));\n    }\n    ngOnInit() {\n        this.scrollDispatcher.register(this);\n    }\n    ngOnDestroy() {\n        this.scrollDispatcher.deregister(this);\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /** Returns observable that emits when a scroll event is fired on the host element. */\n    elementScrolled() {\n        return this._elementScrolled;\n    }\n    /** Gets the ElementRef for the viewport. */\n    getElementRef() {\n        return this.elementRef;\n    }\n    /**\n     * Scrolls to the specified offsets. This is a normalized version of the browser's native scrollTo\n     * method, since browsers are not consistent about what scrollLeft means in RTL. For this method\n     * left and right always refer to the left and right side of the scrolling container irrespective\n     * of the layout direction. start and end refer to left and right in an LTR context and vice-versa\n     * in an RTL context.\n     * @param options specified the offsets to scroll to.\n     */\n    scrollTo(options) {\n        const el = this.elementRef.nativeElement;\n        const isRtl = this.dir && this.dir.value == 'rtl';\n        // Rewrite start & end offsets as right or left offsets.\n        if (options.left == null) {\n            options.left = isRtl ? options.end : options.start;\n        }\n        if (options.right == null) {\n            options.right = isRtl ? options.start : options.end;\n        }\n        // Rewrite the bottom offset as a top offset.\n        if (options.bottom != null) {\n            options.top =\n                el.scrollHeight - el.clientHeight - options.bottom;\n        }\n        // Rewrite the right offset as a left offset.\n        if (isRtl && getRtlScrollAxisType() != 0 /* NORMAL */) {\n            if (options.left != null) {\n                options.right =\n                    el.scrollWidth - el.clientWidth - options.left;\n            }\n            if (getRtlScrollAxisType() == 2 /* INVERTED */) {\n                options.left = options.right;\n            }\n            else if (getRtlScrollAxisType() == 1 /* NEGATED */) {\n                options.left = options.right ? -options.right : options.right;\n            }\n        }\n        else {\n            if (options.right != null) {\n                options.left =\n                    el.scrollWidth - el.clientWidth - options.right;\n            }\n        }\n        this._applyScrollToOptions(options);\n    }\n    _applyScrollToOptions(options) {\n        const el = this.elementRef.nativeElement;\n        if (supportsScrollBehavior()) {\n            el.scrollTo(options);\n        }\n        else {\n            if (options.top != null) {\n                el.scrollTop = options.top;\n            }\n            if (options.left != null) {\n                el.scrollLeft = options.left;\n            }\n        }\n    }\n    /**\n     * Measures the scroll offset relative to the specified edge of the viewport. This method can be\n     * used instead of directly checking scrollLeft or scrollTop, since browsers are not consistent\n     * about what scrollLeft means in RTL. The values returned by this method are normalized such that\n     * left and right always refer to the left and right side of the scrolling container irrespective\n     * of the layout direction. start and end refer to left and right in an LTR context and vice-versa\n     * in an RTL context.\n     * @param from The edge to measure from.\n     */\n    measureScrollOffset(from) {\n        const LEFT = 'left';\n        const RIGHT = 'right';\n        const el = this.elementRef.nativeElement;\n        if (from == 'top') {\n            return el.scrollTop;\n        }\n        if (from == 'bottom') {\n            return el.scrollHeight - el.clientHeight - el.scrollTop;\n        }\n        // Rewrite start & end as left or right offsets.\n        const isRtl = this.dir && this.dir.value == 'rtl';\n        if (from == 'start') {\n            from = isRtl ? RIGHT : LEFT;\n        }\n        else if (from == 'end') {\n            from = isRtl ? LEFT : RIGHT;\n        }\n        if (isRtl && getRtlScrollAxisType() == 2 /* INVERTED */) {\n            // For INVERTED, scrollLeft is (scrollWidth - clientWidth) when scrolled all the way left and\n            // 0 when scrolled all the way right.\n            if (from == LEFT) {\n                return el.scrollWidth - el.clientWidth - el.scrollLeft;\n            }\n            else {\n                return el.scrollLeft;\n            }\n        }\n        else if (isRtl && getRtlScrollAxisType() == 1 /* NEGATED */) {\n            // For NEGATED, scrollLeft is -(scrollWidth - clientWidth) when scrolled all the way left and\n            // 0 when scrolled all the way right.\n            if (from == LEFT) {\n                return el.scrollLeft + el.scrollWidth - el.clientWidth;\n            }\n            else {\n                return -el.scrollLeft;\n            }\n        }\n        else {\n            // For NORMAL, as well as non-RTL contexts, scrollLeft is 0 when scrolled all the way left and\n            // (scrollWidth - clientWidth) when scrolled all the way right.\n            if (from == LEFT) {\n                return el.scrollLeft;\n            }\n            else {\n                return el.scrollWidth - el.clientWidth - el.scrollLeft;\n            }\n        }\n    }\n}\nCdkScrollable.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CdkScrollable, deps: [{ token: i0.ElementRef }, { token: ScrollDispatcher }, { token: i0.NgZone }, { token: i2.Directionality, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nCdkScrollable.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: CdkScrollable, selector: \"[cdk-scrollable], [cdkScrollable]\", ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CdkScrollable, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdk-scrollable], [cdkScrollable]',\n                }]\n        }], ctorParameters: function () {\n        return [{ type: i0.ElementRef }, { type: ScrollDispatcher }, { type: i0.NgZone }, { type: i2.Directionality, decorators: [{\n                        type: Optional\n                    }] }];\n    } });\n\n/** Time in ms to throttle the resize events by default. */\nconst DEFAULT_RESIZE_TIME = 20;\n/**\n * Simple utility for getting the bounds of the browser viewport.\n * @docs-private\n */\nclass ViewportRuler {\n    constructor(_platform, ngZone, document) {\n        this._platform = _platform;\n        /** Stream of viewport change events. */\n        this._change = new Subject();\n        /** Event listener that will be used to handle the viewport change events. */\n        this._changeListener = (event) => {\n            this._change.next(event);\n        };\n        this._document = document;\n        ngZone.runOutsideAngular(() => {\n            if (_platform.isBrowser) {\n                const window = this._getWindow();\n                // Note that bind the events ourselves, rather than going through something like RxJS's\n                // `fromEvent` so that we can ensure that they're bound outside of the NgZone.\n                window.addEventListener('resize', this._changeListener);\n                window.addEventListener('orientationchange', this._changeListener);\n            }\n            // Clear the cached position so that the viewport is re-measured next time it is required.\n            // We don't need to keep track of the subscription, because it is completed on destroy.\n            this.change().subscribe(() => (this._viewportSize = null));\n        });\n    }\n    ngOnDestroy() {\n        if (this._platform.isBrowser) {\n            const window = this._getWindow();\n            window.removeEventListener('resize', this._changeListener);\n            window.removeEventListener('orientationchange', this._changeListener);\n        }\n        this._change.complete();\n    }\n    /** Returns the viewport's width and height. */\n    getViewportSize() {\n        if (!this._viewportSize) {\n            this._updateViewportSize();\n        }\n        const output = { width: this._viewportSize.width, height: this._viewportSize.height };\n        // If we're not on a browser, don't cache the size since it'll be mocked out anyway.\n        if (!this._platform.isBrowser) {\n            this._viewportSize = null;\n        }\n        return output;\n    }\n    /** Gets a ClientRect for the viewport's bounds. */\n    getViewportRect() {\n        // Use the document element's bounding rect rather than the window scroll properties\n        // (e.g. pageYOffset, scrollY) due to in issue in Chrome and IE where window scroll\n        // properties and client coordinates (boundingClientRect, clientX/Y, etc.) are in different\n        // conceptual viewports. Under most circumstances these viewports are equivalent, but they\n        // can disagree when the page is pinch-zoomed (on devices that support touch).\n        // See https://bugs.chromium.org/p/chromium/issues/detail?id=489206#c4\n        // We use the documentElement instead of the body because, by default (without a css reset)\n        // browsers typically give the document body an 8px margin, which is not included in\n        // getBoundingClientRect().\n        const scrollPosition = this.getViewportScrollPosition();\n        const { width, height } = this.getViewportSize();\n        return {\n            top: scrollPosition.top,\n            left: scrollPosition.left,\n            bottom: scrollPosition.top + height,\n            right: scrollPosition.left + width,\n            height,\n            width,\n        };\n    }\n    /** Gets the (top, left) scroll position of the viewport. */\n    getViewportScrollPosition() {\n        // While we can get a reference to the fake document\n        // during SSR, it doesn't have getBoundingClientRect.\n        if (!this._platform.isBrowser) {\n            return { top: 0, left: 0 };\n        }\n        // The top-left-corner of the viewport is determined by the scroll position of the document\n        // body, normally just (scrollLeft, scrollTop). However, Chrome and Firefox disagree about\n        // whether `document.body` or `document.documentElement` is the scrolled element, so reading\n        // `scrollTop` and `scrollLeft` is inconsistent. However, using the bounding rect of\n        // `document.documentElement` works consistently, where the `top` and `left` values will\n        // equal negative the scroll position.\n        const document = this._document;\n        const window = this._getWindow();\n        const documentElement = document.documentElement;\n        const documentRect = documentElement.getBoundingClientRect();\n        const top = -documentRect.top ||\n            document.body.scrollTop ||\n            window.scrollY ||\n            documentElement.scrollTop ||\n            0;\n        const left = -documentRect.left ||\n            document.body.scrollLeft ||\n            window.scrollX ||\n            documentElement.scrollLeft ||\n            0;\n        return { top, left };\n    }\n    /**\n     * Returns a stream that emits whenever the size of the viewport changes.\n     * This stream emits outside of the Angular zone.\n     * @param throttleTime Time in milliseconds to throttle the stream.\n     */\n    change(throttleTime = DEFAULT_RESIZE_TIME) {\n        return throttleTime > 0 ? this._change.pipe(auditTime(throttleTime)) : this._change;\n    }\n    /** Use defaultView of injected document if available or fallback to global window reference */\n    _getWindow() {\n        return this._document.defaultView || window;\n    }\n    /** Updates the cached viewport size. */\n    _updateViewportSize() {\n        const window = this._getWindow();\n        this._viewportSize = this._platform.isBrowser\n            ? { width: window.innerWidth, height: window.innerHeight }\n            : { width: 0, height: 0 };\n    }\n}\nViewportRuler.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: ViewportRuler, deps: [{ token: i1.Platform }, { token: i0.NgZone }, { token: DOCUMENT, optional: true }], target: i0.ɵɵFactoryTarget.Injectable });\nViewportRuler.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: ViewportRuler, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: ViewportRuler, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () {\n        return [{ type: i1.Platform }, { type: i0.NgZone }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [DOCUMENT]\n                    }] }];\n    } });\n\n/** Checks if the given ranges are equal. */\nfunction rangesEqual(r1, r2) {\n    return r1.start == r2.start && r1.end == r2.end;\n}\n/**\n * Scheduler to be used for scroll events. Needs to fall back to\n * something that doesn't rely on requestAnimationFrame on environments\n * that don't support it (e.g. server-side rendering).\n */\nconst SCROLL_SCHEDULER = typeof requestAnimationFrame !== 'undefined' ? animationFrameScheduler : asapScheduler;\n/** A viewport that virtualizes its scrolling with the help of `CdkVirtualForOf`. */\nclass CdkVirtualScrollViewport extends CdkScrollable {\n    constructor(elementRef, _changeDetectorRef, ngZone, _scrollStrategy, dir, scrollDispatcher, viewportRuler) {\n        super(elementRef, scrollDispatcher, ngZone, dir);\n        this.elementRef = elementRef;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._scrollStrategy = _scrollStrategy;\n        /** Emits when the viewport is detached from a CdkVirtualForOf. */\n        this._detachedSubject = new Subject();\n        /** Emits when the rendered range changes. */\n        this._renderedRangeSubject = new Subject();\n        this._orientation = 'vertical';\n        this._appendOnly = false;\n        // Note: we don't use the typical EventEmitter here because we need to subscribe to the scroll\n        // strategy lazily (i.e. only if the user is actually listening to the events). We do this because\n        // depending on how the strategy calculates the scrolled index, it may come at a cost to\n        // performance.\n        /** Emits when the index of the first element visible in the viewport changes. */\n        this.scrolledIndexChange = new Observable((observer) => this._scrollStrategy.scrolledIndexChange.subscribe(index => Promise.resolve().then(() => this.ngZone.run(() => observer.next(index)))));\n        /** A stream that emits whenever the rendered range changes. */\n        this.renderedRangeStream = this._renderedRangeSubject;\n        /**\n         * The total size of all content (in pixels), including content that is not currently rendered.\n         */\n        this._totalContentSize = 0;\n        /** A string representing the `style.width` property value to be used for the spacer element. */\n        this._totalContentWidth = '';\n        /** A string representing the `style.height` property value to be used for the spacer element. */\n        this._totalContentHeight = '';\n        /** The currently rendered range of indices. */\n        this._renderedRange = { start: 0, end: 0 };\n        /** The length of the data bound to this viewport (in number of items). */\n        this._dataLength = 0;\n        /** The size of the viewport (in pixels). */\n        this._viewportSize = 0;\n        /** The last rendered content offset that was set. */\n        this._renderedContentOffset = 0;\n        /**\n         * Whether the last rendered content offset was to the end of the content (and therefore needs to\n         * be rewritten as an offset to the start of the content).\n         */\n        this._renderedContentOffsetNeedsRewrite = false;\n        /** Whether there is a pending change detection cycle. */\n        this._isChangeDetectionPending = false;\n        /** A list of functions to run after the next change detection cycle. */\n        this._runAfterChangeDetection = [];\n        /** Subscription to changes in the viewport size. */\n        this._viewportChanges = Subscription.EMPTY;\n        if (!_scrollStrategy && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error('Error: cdk-virtual-scroll-viewport requires the \"itemSize\" property to be set.');\n        }\n        this._viewportChanges = viewportRuler.change().subscribe(() => {\n            this.checkViewportSize();\n        });\n    }\n    /** The direction the viewport scrolls. */\n    get orientation() {\n        return this._orientation;\n    }\n    set orientation(orientation) {\n        if (this._orientation !== orientation) {\n            this._orientation = orientation;\n            this._calculateSpacerSize();\n        }\n    }\n    /**\n     * Whether rendered items should persist in the DOM after scrolling out of view. By default, items\n     * will be removed.\n     */\n    get appendOnly() {\n        return this._appendOnly;\n    }\n    set appendOnly(value) {\n        this._appendOnly = coerceBooleanProperty(value);\n    }\n    ngOnInit() {\n        super.ngOnInit();\n        // It's still too early to measure the viewport at this point. Deferring with a promise allows\n        // the Viewport to be rendered with the correct size before we measure. We run this outside the\n        // zone to avoid causing more change detection cycles. We handle the change detection loop\n        // ourselves instead.\n        this.ngZone.runOutsideAngular(() => Promise.resolve().then(() => {\n            this._measureViewportSize();\n            this._scrollStrategy.attach(this);\n            this.elementScrolled()\n                .pipe(\n            // Start off with a fake scroll event so we properly detect our initial position.\n            startWith(null), \n            // Collect multiple events into one until the next animation frame. This way if\n            // there are multiple scroll events in the same frame we only need to recheck\n            // our layout once.\n            auditTime(0, SCROLL_SCHEDULER))\n                .subscribe(() => this._scrollStrategy.onContentScrolled());\n            this._markChangeDetectionNeeded();\n        }));\n    }\n    ngOnDestroy() {\n        this.detach();\n        this._scrollStrategy.detach();\n        // Complete all subjects\n        this._renderedRangeSubject.complete();\n        this._detachedSubject.complete();\n        this._viewportChanges.unsubscribe();\n        super.ngOnDestroy();\n    }\n    /** Attaches a `CdkVirtualScrollRepeater` to this viewport. */\n    attach(forOf) {\n        if (this._forOf && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error('CdkVirtualScrollViewport is already attached.');\n        }\n        // Subscribe to the data stream of the CdkVirtualForOf to keep track of when the data length\n        // changes. Run outside the zone to avoid triggering change detection, since we're managing the\n        // change detection loop ourselves.\n        this.ngZone.runOutsideAngular(() => {\n            this._forOf = forOf;\n            this._forOf.dataStream.pipe(takeUntil(this._detachedSubject)).subscribe(data => {\n                const newLength = data.length;\n                if (newLength !== this._dataLength) {\n                    this._dataLength = newLength;\n                    this._scrollStrategy.onDataLengthChanged();\n                }\n                this._doChangeDetection();\n            });\n        });\n    }\n    /** Detaches the current `CdkVirtualForOf`. */\n    detach() {\n        this._forOf = null;\n        this._detachedSubject.next();\n    }\n    /** Gets the length of the data bound to this viewport (in number of items). */\n    getDataLength() {\n        return this._dataLength;\n    }\n    /** Gets the size of the viewport (in pixels). */\n    getViewportSize() {\n        return this._viewportSize;\n    }\n    // TODO(mmalerba): This is technically out of sync with what's really rendered until a render\n    // cycle happens. I'm being careful to only call it after the render cycle is complete and before\n    // setting it to something else, but its error prone and should probably be split into\n    // `pendingRange` and `renderedRange`, the latter reflecting whats actually in the DOM.\n    /** Get the current rendered range of items. */\n    getRenderedRange() {\n        return this._renderedRange;\n    }\n    /**\n     * Sets the total size of all content (in pixels), including content that is not currently\n     * rendered.\n     */\n    setTotalContentSize(size) {\n        if (this._totalContentSize !== size) {\n            this._totalContentSize = size;\n            this._calculateSpacerSize();\n            this._markChangeDetectionNeeded();\n        }\n    }\n    /** Sets the currently rendered range of indices. */\n    setRenderedRange(range) {\n        if (!rangesEqual(this._renderedRange, range)) {\n            if (this.appendOnly) {\n                range = { start: 0, end: Math.max(this._renderedRange.end, range.end) };\n            }\n            this._renderedRangeSubject.next((this._renderedRange = range));\n            this._markChangeDetectionNeeded(() => this._scrollStrategy.onContentRendered());\n        }\n    }\n    /**\n     * Gets the offset from the start of the viewport to the start of the rendered data (in pixels).\n     */\n    getOffsetToRenderedContentStart() {\n        return this._renderedContentOffsetNeedsRewrite ? null : this._renderedContentOffset;\n    }\n    /**\n     * Sets the offset from the start of the viewport to either the start or end of the rendered data\n     * (in pixels).\n     */\n    setRenderedContentOffset(offset, to = 'to-start') {\n        // For a horizontal viewport in a right-to-left language we need to translate along the x-axis\n        // in the negative direction.\n        const isRtl = this.dir && this.dir.value == 'rtl';\n        const isHorizontal = this.orientation == 'horizontal';\n        const axis = isHorizontal ? 'X' : 'Y';\n        const axisDirection = isHorizontal && isRtl ? -1 : 1;\n        let transform = `translate${axis}(${Number(axisDirection * offset)}px)`;\n        this._renderedContentOffset = offset;\n        if (to === 'to-end') {\n            transform += ` translate${axis}(-100%)`;\n            // The viewport should rewrite this as a `to-start` offset on the next render cycle. Otherwise\n            // elements will appear to expand in the wrong direction (e.g. `mat-expansion-panel` would\n            // expand upward).\n            this._renderedContentOffsetNeedsRewrite = true;\n        }\n        if (this._renderedContentTransform != transform) {\n            // We know this value is safe because we parse `offset` with `Number()` before passing it\n            // into the string.\n            this._renderedContentTransform = transform;\n            this._markChangeDetectionNeeded(() => {\n                if (this._renderedContentOffsetNeedsRewrite) {\n                    this._renderedContentOffset -= this.measureRenderedContentSize();\n                    this._renderedContentOffsetNeedsRewrite = false;\n                    this.setRenderedContentOffset(this._renderedContentOffset);\n                }\n                else {\n                    this._scrollStrategy.onRenderedOffsetChanged();\n                }\n            });\n        }\n    }\n    /**\n     * Scrolls to the given offset from the start of the viewport. Please note that this is not always\n     * the same as setting `scrollTop` or `scrollLeft`. In a horizontal viewport with right-to-left\n     * direction, this would be the equivalent of setting a fictional `scrollRight` property.\n     * @param offset The offset to scroll to.\n     * @param behavior The ScrollBehavior to use when scrolling. Default is behavior is `auto`.\n     */\n    scrollToOffset(offset, behavior = 'auto') {\n        const options = { behavior };\n        if (this.orientation === 'horizontal') {\n            options.start = offset;\n        }\n        else {\n            options.top = offset;\n        }\n        this.scrollTo(options);\n    }\n    /**\n     * Scrolls to the offset for the given index.\n     * @param index The index of the element to scroll to.\n     * @param behavior The ScrollBehavior to use when scrolling. Default is behavior is `auto`.\n     */\n    scrollToIndex(index, behavior = 'auto') {\n        this._scrollStrategy.scrollToIndex(index, behavior);\n    }\n    /**\n     * Gets the current scroll offset from the start of the viewport (in pixels).\n     * @param from The edge to measure the offset from. Defaults to 'top' in vertical mode and 'start'\n     *     in horizontal mode.\n     */\n    measureScrollOffset(from) {\n        return from\n            ? super.measureScrollOffset(from)\n            : super.measureScrollOffset(this.orientation === 'horizontal' ? 'start' : 'top');\n    }\n    /** Measure the combined size of all of the rendered items. */\n    measureRenderedContentSize() {\n        const contentEl = this._contentWrapper.nativeElement;\n        return this.orientation === 'horizontal' ? contentEl.offsetWidth : contentEl.offsetHeight;\n    }\n    /**\n     * Measure the total combined size of the given range. Throws if the range includes items that are\n     * not rendered.\n     */\n    measureRangeSize(range) {\n        if (!this._forOf) {\n            return 0;\n        }\n        return this._forOf.measureRangeSize(range, this.orientation);\n    }\n    /** Update the viewport dimensions and re-render. */\n    checkViewportSize() {\n        // TODO: Cleanup later when add logic for handling content resize\n        this._measureViewportSize();\n        this._scrollStrategy.onDataLengthChanged();\n    }\n    /** Measure the viewport size. */\n    _measureViewportSize() {\n        const viewportEl = this.elementRef.nativeElement;\n        this._viewportSize =\n            this.orientation === 'horizontal' ? viewportEl.clientWidth : viewportEl.clientHeight;\n    }\n    /** Queue up change detection to run. */\n    _markChangeDetectionNeeded(runAfter) {\n        if (runAfter) {\n            this._runAfterChangeDetection.push(runAfter);\n        }\n        // Use a Promise to batch together calls to `_doChangeDetection`. This way if we set a bunch of\n        // properties sequentially we only have to run `_doChangeDetection` once at the end.\n        if (!this._isChangeDetectionPending) {\n            this._isChangeDetectionPending = true;\n            this.ngZone.runOutsideAngular(() => Promise.resolve().then(() => {\n                this._doChangeDetection();\n            }));\n        }\n    }\n    /** Run change detection. */\n    _doChangeDetection() {\n        this._isChangeDetectionPending = false;\n        // Apply the content transform. The transform can't be set via an Angular binding because\n        // bypassSecurityTrustStyle is banned in Google. However the value is safe, it's composed of\n        // string literals, a variable that can only be 'X' or 'Y', and user input that is run through\n        // the `Number` function first to coerce it to a numeric value.\n        this._contentWrapper.nativeElement.style.transform = this._renderedContentTransform;\n        // Apply changes to Angular bindings. Note: We must call `markForCheck` to run change detection\n        // from the root, since the repeated items are content projected in. Calling `detectChanges`\n        // instead does not properly check the projected content.\n        this.ngZone.run(() => this._changeDetectorRef.markForCheck());\n        const runAfterChangeDetection = this._runAfterChangeDetection;\n        this._runAfterChangeDetection = [];\n        for (const fn of runAfterChangeDetection) {\n            fn();\n        }\n    }\n    /** Calculates the `style.width` and `style.height` for the spacer element. */\n    _calculateSpacerSize() {\n        this._totalContentHeight =\n            this.orientation === 'horizontal' ? '' : `${this._totalContentSize}px`;\n        this._totalContentWidth =\n            this.orientation === 'horizontal' ? `${this._totalContentSize}px` : '';\n    }\n}\nCdkVirtualScrollViewport.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CdkVirtualScrollViewport, deps: [{ token: i0.ElementRef }, { token: i0.ChangeDetectorRef }, { token: i0.NgZone }, { token: VIRTUAL_SCROLL_STRATEGY, optional: true }, { token: i2.Directionality, optional: true }, { token: ScrollDispatcher }, { token: ViewportRuler }], target: i0.ɵɵFactoryTarget.Component });\nCdkVirtualScrollViewport.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: CdkVirtualScrollViewport, selector: \"cdk-virtual-scroll-viewport\", inputs: { orientation: \"orientation\", appendOnly: \"appendOnly\" }, outputs: { scrolledIndexChange: \"scrolledIndexChange\" }, host: { properties: { \"class.cdk-virtual-scroll-orientation-horizontal\": \"orientation === \\\"horizontal\\\"\", \"class.cdk-virtual-scroll-orientation-vertical\": \"orientation !== \\\"horizontal\\\"\" }, classAttribute: \"cdk-virtual-scroll-viewport\" }, providers: [\n        {\n            provide: CdkScrollable,\n            useExisting: CdkVirtualScrollViewport,\n        },\n    ], viewQueries: [{ propertyName: \"_contentWrapper\", first: true, predicate: [\"contentWrapper\"], descendants: true, static: true }], usesInheritance: true, ngImport: i0, template: \"<!--\\n  Wrap the rendered content in an element that will be used to offset it based on the scroll\\n  position.\\n-->\\n<div #contentWrapper class=\\\"cdk-virtual-scroll-content-wrapper\\\">\\n  <ng-content></ng-content>\\n</div>\\n<!--\\n  Spacer used to force the scrolling container to the correct size for the *total* number of items\\n  so that the scrollbar captures the size of the entire data set.\\n-->\\n<div class=\\\"cdk-virtual-scroll-spacer\\\"\\n     [style.width]=\\\"_totalContentWidth\\\" [style.height]=\\\"_totalContentHeight\\\"></div>\\n\", styles: [\"cdk-virtual-scroll-viewport{display:block;position:relative;overflow:auto;contain:strict;transform:translateZ(0);will-change:scroll-position;-webkit-overflow-scrolling:touch}.cdk-virtual-scroll-content-wrapper{position:absolute;top:0;left:0;contain:content}[dir=rtl] .cdk-virtual-scroll-content-wrapper{right:0;left:auto}.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper{min-height:100%}.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>dl:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>ol:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>table:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>ul:not([cdkVirtualFor]){padding-left:0;padding-right:0;margin-left:0;margin-right:0;border-left-width:0;border-right-width:0;outline:none}.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper{min-width:100%}.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>dl:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>ol:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>table:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>ul:not([cdkVirtualFor]){padding-top:0;padding-bottom:0;margin-top:0;margin-bottom:0;border-top-width:0;border-bottom-width:0;outline:none}.cdk-virtual-scroll-spacer{position:absolute;top:0;left:0;height:1px;width:1px;transform-origin:0 0}[dir=rtl] .cdk-virtual-scroll-spacer{right:0;left:auto;transform-origin:100% 0}\\n\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CdkVirtualScrollViewport, decorators: [{\n            type: Component,\n            args: [{ selector: 'cdk-virtual-scroll-viewport', host: {\n                        'class': 'cdk-virtual-scroll-viewport',\n                        '[class.cdk-virtual-scroll-orientation-horizontal]': 'orientation === \"horizontal\"',\n                        '[class.cdk-virtual-scroll-orientation-vertical]': 'orientation !== \"horizontal\"',\n                    }, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, providers: [\n                        {\n                            provide: CdkScrollable,\n                            useExisting: CdkVirtualScrollViewport,\n                        },\n                    ], template: \"<!--\\n  Wrap the rendered content in an element that will be used to offset it based on the scroll\\n  position.\\n-->\\n<div #contentWrapper class=\\\"cdk-virtual-scroll-content-wrapper\\\">\\n  <ng-content></ng-content>\\n</div>\\n<!--\\n  Spacer used to force the scrolling container to the correct size for the *total* number of items\\n  so that the scrollbar captures the size of the entire data set.\\n-->\\n<div class=\\\"cdk-virtual-scroll-spacer\\\"\\n     [style.width]=\\\"_totalContentWidth\\\" [style.height]=\\\"_totalContentHeight\\\"></div>\\n\", styles: [\"cdk-virtual-scroll-viewport{display:block;position:relative;overflow:auto;contain:strict;transform:translateZ(0);will-change:scroll-position;-webkit-overflow-scrolling:touch}.cdk-virtual-scroll-content-wrapper{position:absolute;top:0;left:0;contain:content}[dir=rtl] .cdk-virtual-scroll-content-wrapper{right:0;left:auto}.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper{min-height:100%}.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>dl:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>ol:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>table:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>ul:not([cdkVirtualFor]){padding-left:0;padding-right:0;margin-left:0;margin-right:0;border-left-width:0;border-right-width:0;outline:none}.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper{min-width:100%}.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>dl:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>ol:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>table:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>ul:not([cdkVirtualFor]){padding-top:0;padding-bottom:0;margin-top:0;margin-bottom:0;border-top-width:0;border-bottom-width:0;outline:none}.cdk-virtual-scroll-spacer{position:absolute;top:0;left:0;height:1px;width:1px;transform-origin:0 0}[dir=rtl] .cdk-virtual-scroll-spacer{right:0;left:auto;transform-origin:100% 0}\\n\"] }]\n        }], ctorParameters: function () {\n        return [{ type: i0.ElementRef }, { type: i0.ChangeDetectorRef }, { type: i0.NgZone }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [VIRTUAL_SCROLL_STRATEGY]\n                    }] }, { type: i2.Directionality, decorators: [{\n                        type: Optional\n                    }] }, { type: ScrollDispatcher }, { type: ViewportRuler }];\n    }, propDecorators: { orientation: [{\n                type: Input\n            }], appendOnly: [{\n                type: Input\n            }], scrolledIndexChange: [{\n                type: Output\n            }], _contentWrapper: [{\n                type: ViewChild,\n                args: ['contentWrapper', { static: true }]\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Helper to extract the offset of a DOM Node in a certain direction. */\nfunction getOffset(orientation, direction, node) {\n    const el = node;\n    if (!el.getBoundingClientRect) {\n        return 0;\n    }\n    const rect = el.getBoundingClientRect();\n    if (orientation === 'horizontal') {\n        return direction === 'start' ? rect.left : rect.right;\n    }\n    return direction === 'start' ? rect.top : rect.bottom;\n}\n/**\n * A directive similar to `ngForOf` to be used for rendering data inside a virtual scrolling\n * container.\n */\nclass CdkVirtualForOf {\n    constructor(\n    /** The view container to add items to. */\n    _viewContainerRef, \n    /** The template to use when stamping out new items. */\n    _template, \n    /** The set of available differs. */\n    _differs, \n    /** The strategy used to render items in the virtual scroll viewport. */\n    _viewRepeater, \n    /** The virtual scrolling viewport that these items are being rendered in. */\n    _viewport, ngZone) {\n        this._viewContainerRef = _viewContainerRef;\n        this._template = _template;\n        this._differs = _differs;\n        this._viewRepeater = _viewRepeater;\n        this._viewport = _viewport;\n        /** Emits when the rendered view of the data changes. */\n        this.viewChange = new Subject();\n        /** Subject that emits when a new DataSource instance is given. */\n        this._dataSourceChanges = new Subject();\n        /** Emits whenever the data in the current DataSource changes. */\n        this.dataStream = this._dataSourceChanges.pipe(\n        // Start off with null `DataSource`.\n        startWith(null), \n        // Bundle up the previous and current data sources so we can work with both.\n        pairwise(), \n        // Use `_changeDataSource` to disconnect from the previous data source and connect to the\n        // new one, passing back a stream of data changes which we run through `switchMap` to give\n        // us a data stream that emits the latest data from whatever the current `DataSource` is.\n        switchMap(([prev, cur]) => this._changeDataSource(prev, cur)), \n        // Replay the last emitted data when someone subscribes.\n        shareReplay(1));\n        /** The differ used to calculate changes to the data. */\n        this._differ = null;\n        /** Whether the rendered data should be updated during the next ngDoCheck cycle. */\n        this._needsUpdate = false;\n        this._destroyed = new Subject();\n        this.dataStream.subscribe(data => {\n            this._data = data;\n            this._onRenderedDataChange();\n        });\n        this._viewport.renderedRangeStream.pipe(takeUntil(this._destroyed)).subscribe(range => {\n            this._renderedRange = range;\n            ngZone.run(() => this.viewChange.next(this._renderedRange));\n            this._onRenderedDataChange();\n        });\n        this._viewport.attach(this);\n    }\n    /** The DataSource to display. */\n    get cdkVirtualForOf() {\n        return this._cdkVirtualForOf;\n    }\n    set cdkVirtualForOf(value) {\n        this._cdkVirtualForOf = value;\n        if (isDataSource(value)) {\n            this._dataSourceChanges.next(value);\n        }\n        else {\n            // If value is an an NgIterable, convert it to an array.\n            this._dataSourceChanges.next(new ArrayDataSource(isObservable(value) ? value : Array.from(value || [])));\n        }\n    }\n    /**\n     * The `TrackByFunction` to use for tracking changes. The `TrackByFunction` takes the index and\n     * the item and produces a value to be used as the item's identity when tracking changes.\n     */\n    get cdkVirtualForTrackBy() {\n        return this._cdkVirtualForTrackBy;\n    }\n    set cdkVirtualForTrackBy(fn) {\n        this._needsUpdate = true;\n        this._cdkVirtualForTrackBy = fn\n            ? (index, item) => fn(index + (this._renderedRange ? this._renderedRange.start : 0), item)\n            : undefined;\n    }\n    /** The template used to stamp out new elements. */\n    set cdkVirtualForTemplate(value) {\n        if (value) {\n            this._needsUpdate = true;\n            this._template = value;\n        }\n    }\n    /**\n     * The size of the cache used to store templates that are not being used for re-use later.\n     * Setting the cache size to `0` will disable caching. Defaults to 20 templates.\n     */\n    get cdkVirtualForTemplateCacheSize() {\n        return this._viewRepeater.viewCacheSize;\n    }\n    set cdkVirtualForTemplateCacheSize(size) {\n        this._viewRepeater.viewCacheSize = coerceNumberProperty(size);\n    }\n    /**\n     * Measures the combined size (width for horizontal orientation, height for vertical) of all items\n     * in the specified range. Throws an error if the range includes items that are not currently\n     * rendered.\n     */\n    measureRangeSize(range, orientation) {\n        if (range.start >= range.end) {\n            return 0;\n        }\n        if ((range.start < this._renderedRange.start || range.end > this._renderedRange.end) &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error(`Error: attempted to measure an item that isn't rendered.`);\n        }\n        // The index into the list of rendered views for the first item in the range.\n        const renderedStartIndex = range.start - this._renderedRange.start;\n        // The length of the range we're measuring.\n        const rangeLen = range.end - range.start;\n        // Loop over all the views, find the first and land node and compute the size by subtracting\n        // the top of the first node from the bottom of the last one.\n        let firstNode;\n        let lastNode;\n        // Find the first node by starting from the beginning and going forwards.\n        for (let i = 0; i < rangeLen; i++) {\n            const view = this._viewContainerRef.get(i + renderedStartIndex);\n            if (view && view.rootNodes.length) {\n                firstNode = lastNode = view.rootNodes[0];\n                break;\n            }\n        }\n        // Find the last node by starting from the end and going backwards.\n        for (let i = rangeLen - 1; i > -1; i--) {\n            const view = this._viewContainerRef.get(i + renderedStartIndex);\n            if (view && view.rootNodes.length) {\n                lastNode = view.rootNodes[view.rootNodes.length - 1];\n                break;\n            }\n        }\n        return firstNode && lastNode\n            ? getOffset(orientation, 'end', lastNode) - getOffset(orientation, 'start', firstNode)\n            : 0;\n    }\n    ngDoCheck() {\n        if (this._differ && this._needsUpdate) {\n            // TODO(mmalerba): We should differentiate needs update due to scrolling and a new portion of\n            // this list being rendered (can use simpler algorithm) vs needs update due to data actually\n            // changing (need to do this diff).\n            const changes = this._differ.diff(this._renderedItems);\n            if (!changes) {\n                this._updateContext();\n            }\n            else {\n                this._applyChanges(changes);\n            }\n            this._needsUpdate = false;\n        }\n    }\n    ngOnDestroy() {\n        this._viewport.detach();\n        this._dataSourceChanges.next(undefined);\n        this._dataSourceChanges.complete();\n        this.viewChange.complete();\n        this._destroyed.next();\n        this._destroyed.complete();\n        this._viewRepeater.detach();\n    }\n    /** React to scroll state changes in the viewport. */\n    _onRenderedDataChange() {\n        if (!this._renderedRange) {\n            return;\n        }\n        this._renderedItems = this._data.slice(this._renderedRange.start, this._renderedRange.end);\n        if (!this._differ) {\n            // Use a wrapper function for the `trackBy` so any new values are\n            // picked up automatically without having to recreate the differ.\n            this._differ = this._differs.find(this._renderedItems).create((index, item) => {\n                return this.cdkVirtualForTrackBy ? this.cdkVirtualForTrackBy(index, item) : item;\n            });\n        }\n        this._needsUpdate = true;\n    }\n    /** Swap out one `DataSource` for another. */\n    _changeDataSource(oldDs, newDs) {\n        if (oldDs) {\n            oldDs.disconnect(this);\n        }\n        this._needsUpdate = true;\n        return newDs ? newDs.connect(this) : of();\n    }\n    /** Update the `CdkVirtualForOfContext` for all views. */\n    _updateContext() {\n        const count = this._data.length;\n        let i = this._viewContainerRef.length;\n        while (i--) {\n            const view = this._viewContainerRef.get(i);\n            view.context.index = this._renderedRange.start + i;\n            view.context.count = count;\n            this._updateComputedContextProperties(view.context);\n            view.detectChanges();\n        }\n    }\n    /** Apply changes to the DOM. */\n    _applyChanges(changes) {\n        this._viewRepeater.applyChanges(changes, this._viewContainerRef, (record, _adjustedPreviousIndex, currentIndex) => this._getEmbeddedViewArgs(record, currentIndex), record => record.item);\n        // Update $implicit for any items that had an identity change.\n        changes.forEachIdentityChange((record) => {\n            const view = this._viewContainerRef.get(record.currentIndex);\n            view.context.$implicit = record.item;\n        });\n        // Update the context variables on all items.\n        const count = this._data.length;\n        let i = this._viewContainerRef.length;\n        while (i--) {\n            const view = this._viewContainerRef.get(i);\n            view.context.index = this._renderedRange.start + i;\n            view.context.count = count;\n            this._updateComputedContextProperties(view.context);\n        }\n    }\n    /** Update the computed properties on the `CdkVirtualForOfContext`. */\n    _updateComputedContextProperties(context) {\n        context.first = context.index === 0;\n        context.last = context.index === context.count - 1;\n        context.even = context.index % 2 === 0;\n        context.odd = !context.even;\n    }\n    _getEmbeddedViewArgs(record, index) {\n        // Note that it's important that we insert the item directly at the proper index,\n        // rather than inserting it and the moving it in place, because if there's a directive\n        // on the same node that injects the `ViewContainerRef`, Angular will insert another\n        // comment node which can throw off the move when it's being repeated for all items.\n        return {\n            templateRef: this._template,\n            context: {\n                $implicit: record.item,\n                // It's guaranteed that the iterable is not \"undefined\" or \"null\" because we only\n                // generate views for elements if the \"cdkVirtualForOf\" iterable has elements.\n                cdkVirtualForOf: this._cdkVirtualForOf,\n                index: -1,\n                count: -1,\n                first: false,\n                last: false,\n                odd: false,\n                even: false,\n            },\n            index,\n        };\n    }\n}\nCdkVirtualForOf.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CdkVirtualForOf, deps: [{ token: i0.ViewContainerRef }, { token: i0.TemplateRef }, { token: i0.IterableDiffers }, { token: _VIEW_REPEATER_STRATEGY }, { token: CdkVirtualScrollViewport, skipSelf: true }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Directive });\nCdkVirtualForOf.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: CdkVirtualForOf, selector: \"[cdkVirtualFor][cdkVirtualForOf]\", inputs: { cdkVirtualForOf: \"cdkVirtualForOf\", cdkVirtualForTrackBy: \"cdkVirtualForTrackBy\", cdkVirtualForTemplate: \"cdkVirtualForTemplate\", cdkVirtualForTemplateCacheSize: \"cdkVirtualForTemplateCacheSize\" }, providers: [{ provide: _VIEW_REPEATER_STRATEGY, useClass: _RecycleViewRepeaterStrategy }], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CdkVirtualForOf, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkVirtualFor][cdkVirtualForOf]',\n                    providers: [{ provide: _VIEW_REPEATER_STRATEGY, useClass: _RecycleViewRepeaterStrategy }],\n                }]\n        }], ctorParameters: function () {\n        return [{ type: i0.ViewContainerRef }, { type: i0.TemplateRef }, { type: i0.IterableDiffers }, { type: i2$1._RecycleViewRepeaterStrategy, decorators: [{\n                        type: Inject,\n                        args: [_VIEW_REPEATER_STRATEGY]\n                    }] }, { type: CdkVirtualScrollViewport, decorators: [{\n                        type: SkipSelf\n                    }] }, { type: i0.NgZone }];\n    }, propDecorators: { cdkVirtualForOf: [{\n                type: Input\n            }], cdkVirtualForTrackBy: [{\n                type: Input\n            }], cdkVirtualForTemplate: [{\n                type: Input\n            }], cdkVirtualForTemplateCacheSize: [{\n                type: Input\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass CdkScrollableModule {\n}\nCdkScrollableModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CdkScrollableModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nCdkScrollableModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CdkScrollableModule, declarations: [CdkScrollable], exports: [CdkScrollable] });\nCdkScrollableModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CdkScrollableModule });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CdkScrollableModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    exports: [CdkScrollable],\n                    declarations: [CdkScrollable],\n                }]\n        }] });\n/**\n * @docs-primary-export\n */\nclass ScrollingModule {\n}\nScrollingModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: ScrollingModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nScrollingModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: ScrollingModule, declarations: [CdkFixedSizeVirtualScroll, CdkVirtualForOf, CdkVirtualScrollViewport], imports: [BidiModule, PlatformModule, CdkScrollableModule], exports: [BidiModule, CdkScrollableModule, CdkFixedSizeVirtualScroll,\n        CdkVirtualForOf,\n        CdkVirtualScrollViewport] });\nScrollingModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: ScrollingModule, imports: [[BidiModule, PlatformModule, CdkScrollableModule], BidiModule, CdkScrollableModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: ScrollingModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [BidiModule, PlatformModule, CdkScrollableModule],\n                    exports: [\n                        BidiModule,\n                        CdkScrollableModule,\n                        CdkFixedSizeVirtualScroll,\n                        CdkVirtualForOf,\n                        CdkVirtualScrollViewport,\n                    ],\n                    declarations: [CdkFixedSizeVirtualScroll, CdkVirtualForOf, CdkVirtualScrollViewport],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CdkFixedSizeVirtualScroll, CdkScrollable, CdkScrollableModule, CdkVirtualForOf, CdkVirtualScrollViewport, DEFAULT_RESIZE_TIME, DEFAULT_SCROLL_TIME, FixedSizeVirtualScrollStrategy, ScrollDispatcher, ScrollingModule, VIRTUAL_SCROLL_STRATEGY, ViewportRuler, _fixedSizeVirtualScrollStrategyFactory };\n","import { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { _VIEW_REPEATER_STRATEGY, _RecycleViewRepeaterStrategy, isDataSource, _DisposeViewRepeaterStrategy } from '@angular/cdk/collections';\nexport { DataSource } from '@angular/cdk/collections';\nimport { DOCUMENT } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, Directive, Inject, Optional, Input, ContentChild, Injectable, Component, ChangeDetectionStrategy, ViewEncapsulation, EmbeddedViewRef, EventEmitter, Attribute, SkipSelf, Output, ViewChild, ContentChildren, NgModule } from '@angular/core';\nimport { Subject, from, BehaviorSubject, isObservable, of } from 'rxjs';\nimport { takeUntil, take } from 'rxjs/operators';\nimport * as i1 from '@angular/cdk/bidi';\nimport * as i2 from '@angular/cdk/platform';\nimport * as i3 from '@angular/cdk/scrolling';\nimport { ScrollingModule } from '@angular/cdk/scrolling';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Mixin to provide a directive with a function that checks if the sticky input has been\n * changed since the last time the function was called. Essentially adds a dirty-check to the\n * sticky value.\n * @docs-private\n */\nfunction mixinHasStickyInput(base) {\n    return class extends base {\n        constructor(...args) {\n            super(...args);\n            this._sticky = false;\n            /** Whether the sticky input has changed since it was last checked. */\n            this._hasStickyChanged = false;\n        }\n        /** Whether sticky positioning should be applied. */\n        get sticky() {\n            return this._sticky;\n        }\n        set sticky(v) {\n            const prevValue = this._sticky;\n            this._sticky = coerceBooleanProperty(v);\n            this._hasStickyChanged = prevValue !== this._sticky;\n        }\n        /** Whether the sticky value has changed since this was last called. */\n        hasStickyChanged() {\n            const hasStickyChanged = this._hasStickyChanged;\n            this._hasStickyChanged = false;\n            return hasStickyChanged;\n        }\n        /** Resets the dirty check for cases where the sticky state has been used without checking. */\n        resetStickyChanged() {\n            this._hasStickyChanged = false;\n        }\n    };\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Used to provide a table to some of the sub-components without causing a circular dependency.\n * @docs-private\n */\nconst CDK_TABLE = new InjectionToken('CDK_TABLE');\n/** Injection token that can be used to specify the text column options. */\nconst TEXT_COLUMN_OPTIONS = new InjectionToken('text-column-options');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Cell definition for a CDK table.\n * Captures the template of a column's data row cell as well as cell-specific properties.\n */\nclass CdkCellDef {\n    constructor(/** @docs-private */ template) {\n        this.template = template;\n    }\n}\nCdkCellDef.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CdkCellDef, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive });\nCdkCellDef.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: CdkCellDef, selector: \"[cdkCellDef]\", ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CdkCellDef, decorators: [{\n            type: Directive,\n            args: [{ selector: '[cdkCellDef]' }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }]; } });\n/**\n * Header cell definition for a CDK table.\n * Captures the template of a column's header cell and as well as cell-specific properties.\n */\nclass CdkHeaderCellDef {\n    constructor(/** @docs-private */ template) {\n        this.template = template;\n    }\n}\nCdkHeaderCellDef.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CdkHeaderCellDef, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive });\nCdkHeaderCellDef.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: CdkHeaderCellDef, selector: \"[cdkHeaderCellDef]\", ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CdkHeaderCellDef, decorators: [{\n            type: Directive,\n            args: [{ selector: '[cdkHeaderCellDef]' }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }]; } });\n/**\n * Footer cell definition for a CDK table.\n * Captures the template of a column's footer cell and as well as cell-specific properties.\n */\nclass CdkFooterCellDef {\n    constructor(/** @docs-private */ template) {\n        this.template = template;\n    }\n}\nCdkFooterCellDef.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CdkFooterCellDef, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive });\nCdkFooterCellDef.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: CdkFooterCellDef, selector: \"[cdkFooterCellDef]\", ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CdkFooterCellDef, decorators: [{\n            type: Directive,\n            args: [{ selector: '[cdkFooterCellDef]' }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }]; } });\n// Boilerplate for applying mixins to CdkColumnDef.\n/** @docs-private */\nclass CdkColumnDefBase {\n}\nconst _CdkColumnDefBase = mixinHasStickyInput(CdkColumnDefBase);\n/**\n * Column definition for the CDK table.\n * Defines a set of cells available for a table column.\n */\nclass CdkColumnDef extends _CdkColumnDefBase {\n    constructor(_table) {\n        super();\n        this._table = _table;\n        this._stickyEnd = false;\n    }\n    /** Unique name for this column. */\n    get name() {\n        return this._name;\n    }\n    set name(name) {\n        this._setNameInput(name);\n    }\n    /**\n     * Whether this column should be sticky positioned on the end of the row. Should make sure\n     * that it mimics the `CanStick` mixin such that `_hasStickyChanged` is set to true if the value\n     * has been changed.\n     */\n    get stickyEnd() {\n        return this._stickyEnd;\n    }\n    set stickyEnd(v) {\n        const prevValue = this._stickyEnd;\n        this._stickyEnd = coerceBooleanProperty(v);\n        this._hasStickyChanged = prevValue !== this._stickyEnd;\n    }\n    /**\n     * Overridable method that sets the css classes that will be added to every cell in this\n     * column.\n     * In the future, columnCssClassName will change from type string[] to string and this\n     * will set a single string value.\n     * @docs-private\n     */\n    _updateColumnCssClassName() {\n        this._columnCssClassName = [`cdk-column-${this.cssClassFriendlyName}`];\n    }\n    /**\n     * This has been extracted to a util because of TS 4 and VE.\n     * View Engine doesn't support property rename inheritance.\n     * TS 4.0 doesn't allow properties to override accessors or vice-versa.\n     * @docs-private\n     */\n    _setNameInput(value) {\n        // If the directive is set without a name (updated programmatically), then this setter will\n        // trigger with an empty string and should not overwrite the programmatically set value.\n        if (value) {\n            this._name = value;\n            this.cssClassFriendlyName = value.replace(/[^a-z0-9_-]/gi, '-');\n            this._updateColumnCssClassName();\n        }\n    }\n}\nCdkColumnDef.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CdkColumnDef, deps: [{ token: CDK_TABLE, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nCdkColumnDef.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: CdkColumnDef, selector: \"[cdkColumnDef]\", inputs: { sticky: \"sticky\", name: [\"cdkColumnDef\", \"name\"], stickyEnd: \"stickyEnd\" }, providers: [{ provide: 'MAT_SORT_HEADER_COLUMN_DEF', useExisting: CdkColumnDef }], queries: [{ propertyName: \"cell\", first: true, predicate: CdkCellDef, descendants: true }, { propertyName: \"headerCell\", first: true, predicate: CdkHeaderCellDef, descendants: true }, { propertyName: \"footerCell\", first: true, predicate: CdkFooterCellDef, descendants: true }], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CdkColumnDef, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkColumnDef]',\n                    inputs: ['sticky'],\n                    providers: [{ provide: 'MAT_SORT_HEADER_COLUMN_DEF', useExisting: CdkColumnDef }],\n                }]\n        }], ctorParameters: function () {\n        return [{ type: undefined, decorators: [{\n                        type: Inject,\n                        args: [CDK_TABLE]\n                    }, {\n                        type: Optional\n                    }] }];\n    }, propDecorators: { name: [{\n                type: Input,\n                args: ['cdkColumnDef']\n            }], stickyEnd: [{\n                type: Input,\n                args: ['stickyEnd']\n            }], cell: [{\n                type: ContentChild,\n                args: [CdkCellDef]\n            }], headerCell: [{\n                type: ContentChild,\n                args: [CdkHeaderCellDef]\n            }], footerCell: [{\n                type: ContentChild,\n                args: [CdkFooterCellDef]\n            }] } });\n/** Base class for the cells. Adds a CSS classname that identifies the column it renders in. */\nclass BaseCdkCell {\n    constructor(columnDef, elementRef) {\n        // If IE 11 is dropped before we switch to setting a single class name, change to multi param\n        // with destructuring.\n        const classList = elementRef.nativeElement.classList;\n        for (const className of columnDef._columnCssClassName) {\n            classList.add(className);\n        }\n    }\n}\n/** Header cell template container that adds the right classes and role. */\nclass CdkHeaderCell extends BaseCdkCell {\n    constructor(columnDef, elementRef) {\n        super(columnDef, elementRef);\n    }\n}\nCdkHeaderCell.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CdkHeaderCell, deps: [{ token: CdkColumnDef }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });\nCdkHeaderCell.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: CdkHeaderCell, selector: \"cdk-header-cell, th[cdk-header-cell]\", host: { attributes: { \"role\": \"columnheader\" }, classAttribute: \"cdk-header-cell\" }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CdkHeaderCell, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'cdk-header-cell, th[cdk-header-cell]',\n                    host: {\n                        'class': 'cdk-header-cell',\n                        'role': 'columnheader',\n                    },\n                }]\n        }], ctorParameters: function () { return [{ type: CdkColumnDef }, { type: i0.ElementRef }]; } });\n/** Footer cell template container that adds the right classes and role. */\nclass CdkFooterCell extends BaseCdkCell {\n    constructor(columnDef, elementRef) {\n        var _a;\n        super(columnDef, elementRef);\n        if (((_a = columnDef._table) === null || _a === void 0 ? void 0 : _a._elementRef.nativeElement.nodeType) === 1) {\n            const tableRole = columnDef._table._elementRef.nativeElement.getAttribute('role');\n            const role = tableRole === 'grid' || tableRole === 'treegrid' ? 'gridcell' : 'cell';\n            elementRef.nativeElement.setAttribute('role', role);\n        }\n    }\n}\nCdkFooterCell.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CdkFooterCell, deps: [{ token: CdkColumnDef }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });\nCdkFooterCell.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: CdkFooterCell, selector: \"cdk-footer-cell, td[cdk-footer-cell]\", host: { classAttribute: \"cdk-footer-cell\" }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CdkFooterCell, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'cdk-footer-cell, td[cdk-footer-cell]',\n                    host: {\n                        'class': 'cdk-footer-cell',\n                    },\n                }]\n        }], ctorParameters: function () { return [{ type: CdkColumnDef }, { type: i0.ElementRef }]; } });\n/** Cell template container that adds the right classes and role. */\nclass CdkCell extends BaseCdkCell {\n    constructor(columnDef, elementRef) {\n        var _a;\n        super(columnDef, elementRef);\n        if (((_a = columnDef._table) === null || _a === void 0 ? void 0 : _a._elementRef.nativeElement.nodeType) === 1) {\n            const tableRole = columnDef._table._elementRef.nativeElement.getAttribute('role');\n            const role = tableRole === 'grid' || tableRole === 'treegrid' ? 'gridcell' : 'cell';\n            elementRef.nativeElement.setAttribute('role', role);\n        }\n    }\n}\nCdkCell.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CdkCell, deps: [{ token: CdkColumnDef }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });\nCdkCell.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: CdkCell, selector: \"cdk-cell, td[cdk-cell]\", host: { classAttribute: \"cdk-cell\" }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CdkCell, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'cdk-cell, td[cdk-cell]',\n                    host: {\n                        'class': 'cdk-cell',\n                    },\n                }]\n        }], ctorParameters: function () { return [{ type: CdkColumnDef }, { type: i0.ElementRef }]; } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @docs-private\n */\nclass _Schedule {\n    constructor() {\n        this.tasks = [];\n        this.endTasks = [];\n    }\n}\n/** Injection token used to provide a coalesced style scheduler. */\nconst _COALESCED_STYLE_SCHEDULER = new InjectionToken('_COALESCED_STYLE_SCHEDULER');\n/**\n * Allows grouping up CSSDom mutations after the current execution context.\n * This can significantly improve performance when separate consecutive functions are\n * reading from the CSSDom and then mutating it.\n *\n * @docs-private\n */\nclass _CoalescedStyleScheduler {\n    constructor(_ngZone) {\n        this._ngZone = _ngZone;\n        this._currentSchedule = null;\n        this._destroyed = new Subject();\n    }\n    /**\n     * Schedules the specified task to run at the end of the current VM turn.\n     */\n    schedule(task) {\n        this._createScheduleIfNeeded();\n        this._currentSchedule.tasks.push(task);\n    }\n    /**\n     * Schedules the specified task to run after other scheduled tasks at the end of the current\n     * VM turn.\n     */\n    scheduleEnd(task) {\n        this._createScheduleIfNeeded();\n        this._currentSchedule.endTasks.push(task);\n    }\n    /** Prevent any further tasks from running. */\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    _createScheduleIfNeeded() {\n        if (this._currentSchedule) {\n            return;\n        }\n        this._currentSchedule = new _Schedule();\n        this._getScheduleObservable()\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(() => {\n            while (this._currentSchedule.tasks.length || this._currentSchedule.endTasks.length) {\n                const schedule = this._currentSchedule;\n                // Capture new tasks scheduled by the current set of tasks.\n                this._currentSchedule = new _Schedule();\n                for (const task of schedule.tasks) {\n                    task();\n                }\n                for (const task of schedule.endTasks) {\n                    task();\n                }\n            }\n            this._currentSchedule = null;\n        });\n    }\n    _getScheduleObservable() {\n        // Use onStable when in the context of an ongoing change detection cycle so that we\n        // do not accidentally trigger additional cycles.\n        return this._ngZone.isStable\n            ? from(Promise.resolve(undefined))\n            : this._ngZone.onStable.pipe(take(1));\n    }\n}\n_CoalescedStyleScheduler.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: _CoalescedStyleScheduler, deps: [{ token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Injectable });\n_CoalescedStyleScheduler.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: _CoalescedStyleScheduler });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: _CoalescedStyleScheduler, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: i0.NgZone }]; } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The row template that can be used by the mat-table. Should not be used outside of the\n * material library.\n */\nconst CDK_ROW_TEMPLATE = `<ng-container cdkCellOutlet></ng-container>`;\n/**\n * Base class for the CdkHeaderRowDef and CdkRowDef that handles checking their columns inputs\n * for changes and notifying the table.\n */\nclass BaseRowDef {\n    constructor(\n    /** @docs-private */ template, _differs) {\n        this.template = template;\n        this._differs = _differs;\n    }\n    ngOnChanges(changes) {\n        // Create a new columns differ if one does not yet exist. Initialize it based on initial value\n        // of the columns property or an empty array if none is provided.\n        if (!this._columnsDiffer) {\n            const columns = (changes['columns'] && changes['columns'].currentValue) || [];\n            this._columnsDiffer = this._differs.find(columns).create();\n            this._columnsDiffer.diff(columns);\n        }\n    }\n    /**\n     * Returns the difference between the current columns and the columns from the last diff, or null\n     * if there is no difference.\n     */\n    getColumnsDiff() {\n        return this._columnsDiffer.diff(this.columns);\n    }\n    /** Gets this row def's relevant cell template from the provided column def. */\n    extractCellTemplate(column) {\n        if (this instanceof CdkHeaderRowDef) {\n            return column.headerCell.template;\n        }\n        if (this instanceof CdkFooterRowDef) {\n            return column.footerCell.template;\n        }\n        else {\n            return column.cell.template;\n        }\n    }\n}\nBaseRowDef.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BaseRowDef, deps: [{ token: i0.TemplateRef }, { token: i0.IterableDiffers }], target: i0.ɵɵFactoryTarget.Directive });\nBaseRowDef.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: BaseRowDef, usesOnChanges: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BaseRowDef, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }, { type: i0.IterableDiffers }]; } });\n// Boilerplate for applying mixins to CdkHeaderRowDef.\n/** @docs-private */\nclass CdkHeaderRowDefBase extends BaseRowDef {\n}\nconst _CdkHeaderRowDefBase = mixinHasStickyInput(CdkHeaderRowDefBase);\n/**\n * Header row definition for the CDK table.\n * Captures the header row's template and other header properties such as the columns to display.\n */\nclass CdkHeaderRowDef extends _CdkHeaderRowDefBase {\n    constructor(template, _differs, _table) {\n        super(template, _differs);\n        this._table = _table;\n    }\n    // Prerender fails to recognize that ngOnChanges in a part of this class through inheritance.\n    // Explicitly define it so that the method is called as part of the Angular lifecycle.\n    ngOnChanges(changes) {\n        super.ngOnChanges(changes);\n    }\n}\nCdkHeaderRowDef.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CdkHeaderRowDef, deps: [{ token: i0.TemplateRef }, { token: i0.IterableDiffers }, { token: CDK_TABLE, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nCdkHeaderRowDef.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: CdkHeaderRowDef, selector: \"[cdkHeaderRowDef]\", inputs: { columns: [\"cdkHeaderRowDef\", \"columns\"], sticky: [\"cdkHeaderRowDefSticky\", \"sticky\"] }, usesInheritance: true, usesOnChanges: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CdkHeaderRowDef, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkHeaderRowDef]',\n                    inputs: ['columns: cdkHeaderRowDef', 'sticky: cdkHeaderRowDefSticky'],\n                }]\n        }], ctorParameters: function () {\n        return [{ type: i0.TemplateRef }, { type: i0.IterableDiffers }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [CDK_TABLE]\n                    }, {\n                        type: Optional\n                    }] }];\n    } });\n// Boilerplate for applying mixins to CdkFooterRowDef.\n/** @docs-private */\nclass CdkFooterRowDefBase extends BaseRowDef {\n}\nconst _CdkFooterRowDefBase = mixinHasStickyInput(CdkFooterRowDefBase);\n/**\n * Footer row definition for the CDK table.\n * Captures the footer row's template and other footer properties such as the columns to display.\n */\nclass CdkFooterRowDef extends _CdkFooterRowDefBase {\n    constructor(template, _differs, _table) {\n        super(template, _differs);\n        this._table = _table;\n    }\n    // Prerender fails to recognize that ngOnChanges in a part of this class through inheritance.\n    // Explicitly define it so that the method is called as part of the Angular lifecycle.\n    ngOnChanges(changes) {\n        super.ngOnChanges(changes);\n    }\n}\nCdkFooterRowDef.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CdkFooterRowDef, deps: [{ token: i0.TemplateRef }, { token: i0.IterableDiffers }, { token: CDK_TABLE, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nCdkFooterRowDef.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: CdkFooterRowDef, selector: \"[cdkFooterRowDef]\", inputs: { columns: [\"cdkFooterRowDef\", \"columns\"], sticky: [\"cdkFooterRowDefSticky\", \"sticky\"] }, usesInheritance: true, usesOnChanges: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CdkFooterRowDef, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkFooterRowDef]',\n                    inputs: ['columns: cdkFooterRowDef', 'sticky: cdkFooterRowDefSticky'],\n                }]\n        }], ctorParameters: function () {\n        return [{ type: i0.TemplateRef }, { type: i0.IterableDiffers }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [CDK_TABLE]\n                    }, {\n                        type: Optional\n                    }] }];\n    } });\n/**\n * Data row definition for the CDK table.\n * Captures the header row's template and other row properties such as the columns to display and\n * a when predicate that describes when this row should be used.\n */\nclass CdkRowDef extends BaseRowDef {\n    // TODO(andrewseguin): Add an input for providing a switch function to determine\n    //   if this template should be used.\n    constructor(template, _differs, _table) {\n        super(template, _differs);\n        this._table = _table;\n    }\n}\nCdkRowDef.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CdkRowDef, deps: [{ token: i0.TemplateRef }, { token: i0.IterableDiffers }, { token: CDK_TABLE, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nCdkRowDef.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: CdkRowDef, selector: \"[cdkRowDef]\", inputs: { columns: [\"cdkRowDefColumns\", \"columns\"], when: [\"cdkRowDefWhen\", \"when\"] }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CdkRowDef, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkRowDef]',\n                    inputs: ['columns: cdkRowDefColumns', 'when: cdkRowDefWhen'],\n                }]\n        }], ctorParameters: function () {\n        return [{ type: i0.TemplateRef }, { type: i0.IterableDiffers }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [CDK_TABLE]\n                    }, {\n                        type: Optional\n                    }] }];\n    } });\n/**\n * Outlet for rendering cells inside of a row or header row.\n * @docs-private\n */\nclass CdkCellOutlet {\n    constructor(_viewContainer) {\n        this._viewContainer = _viewContainer;\n        CdkCellOutlet.mostRecentCellOutlet = this;\n    }\n    ngOnDestroy() {\n        // If this was the last outlet being rendered in the view, remove the reference\n        // from the static property after it has been destroyed to avoid leaking memory.\n        if (CdkCellOutlet.mostRecentCellOutlet === this) {\n            CdkCellOutlet.mostRecentCellOutlet = null;\n        }\n    }\n}\n/**\n * Static property containing the latest constructed instance of this class.\n * Used by the CDK table when each CdkHeaderRow and CdkRow component is created using\n * createEmbeddedView. After one of these components are created, this property will provide\n * a handle to provide that component's cells and context. After init, the CdkCellOutlet will\n * construct the cells with the provided context.\n */\nCdkCellOutlet.mostRecentCellOutlet = null;\nCdkCellOutlet.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CdkCellOutlet, deps: [{ token: i0.ViewContainerRef }], target: i0.ɵɵFactoryTarget.Directive });\nCdkCellOutlet.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: CdkCellOutlet, selector: \"[cdkCellOutlet]\", ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CdkCellOutlet, decorators: [{\n            type: Directive,\n            args: [{ selector: '[cdkCellOutlet]' }]\n        }], ctorParameters: function () { return [{ type: i0.ViewContainerRef }]; } });\n/** Header template container that contains the cell outlet. Adds the right class and role. */\nclass CdkHeaderRow {\n}\nCdkHeaderRow.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CdkHeaderRow, deps: [], target: i0.ɵɵFactoryTarget.Component });\nCdkHeaderRow.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: CdkHeaderRow, selector: \"cdk-header-row, tr[cdk-header-row]\", host: { attributes: { \"role\": \"row\" }, classAttribute: \"cdk-header-row\" }, ngImport: i0, template: \"<ng-container cdkCellOutlet></ng-container>\", isInline: true, directives: [{ type: CdkCellOutlet, selector: \"[cdkCellOutlet]\" }], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CdkHeaderRow, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'cdk-header-row, tr[cdk-header-row]',\n                    template: CDK_ROW_TEMPLATE,\n                    host: {\n                        'class': 'cdk-header-row',\n                        'role': 'row',\n                    },\n                    // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                    // tslint:disable-next-line:validate-decorators\n                    changeDetection: ChangeDetectionStrategy.Default,\n                    encapsulation: ViewEncapsulation.None,\n                }]\n        }] });\n/** Footer template container that contains the cell outlet. Adds the right class and role. */\nclass CdkFooterRow {\n}\nCdkFooterRow.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CdkFooterRow, deps: [], target: i0.ɵɵFactoryTarget.Component });\nCdkFooterRow.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: CdkFooterRow, selector: \"cdk-footer-row, tr[cdk-footer-row]\", host: { attributes: { \"role\": \"row\" }, classAttribute: \"cdk-footer-row\" }, ngImport: i0, template: \"<ng-container cdkCellOutlet></ng-container>\", isInline: true, directives: [{ type: CdkCellOutlet, selector: \"[cdkCellOutlet]\" }], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CdkFooterRow, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'cdk-footer-row, tr[cdk-footer-row]',\n                    template: CDK_ROW_TEMPLATE,\n                    host: {\n                        'class': 'cdk-footer-row',\n                        'role': 'row',\n                    },\n                    // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                    // tslint:disable-next-line:validate-decorators\n                    changeDetection: ChangeDetectionStrategy.Default,\n                    encapsulation: ViewEncapsulation.None,\n                }]\n        }] });\n/** Data row template container that contains the cell outlet. Adds the right class and role. */\nclass CdkRow {\n}\nCdkRow.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CdkRow, deps: [], target: i0.ɵɵFactoryTarget.Component });\nCdkRow.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: CdkRow, selector: \"cdk-row, tr[cdk-row]\", host: { attributes: { \"role\": \"row\" }, classAttribute: \"cdk-row\" }, ngImport: i0, template: \"<ng-container cdkCellOutlet></ng-container>\", isInline: true, directives: [{ type: CdkCellOutlet, selector: \"[cdkCellOutlet]\" }], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CdkRow, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'cdk-row, tr[cdk-row]',\n                    template: CDK_ROW_TEMPLATE,\n                    host: {\n                        'class': 'cdk-row',\n                        'role': 'row',\n                    },\n                    // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                    // tslint:disable-next-line:validate-decorators\n                    changeDetection: ChangeDetectionStrategy.Default,\n                    encapsulation: ViewEncapsulation.None,\n                }]\n        }] });\n/** Row that can be used to display a message when no data is shown in the table. */\nclass CdkNoDataRow {\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n        this._contentClassName = 'cdk-no-data-row';\n    }\n}\nCdkNoDataRow.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CdkNoDataRow, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive });\nCdkNoDataRow.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: CdkNoDataRow, selector: \"ng-template[cdkNoDataRow]\", ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CdkNoDataRow, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'ng-template[cdkNoDataRow]',\n                }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }]; } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * List of all possible directions that can be used for sticky positioning.\n * @docs-private\n */\nconst STICKY_DIRECTIONS = ['top', 'bottom', 'left', 'right'];\n/**\n * Applies and removes sticky positioning styles to the `CdkTable` rows and columns cells.\n * @docs-private\n */\nclass StickyStyler {\n    /**\n     * @param _isNativeHtmlTable Whether the sticky logic should be based on a table\n     *     that uses the native `<table>` element.\n     * @param _stickCellCss The CSS class that will be applied to every row/cell that has\n     *     sticky positioning applied.\n     * @param direction The directionality context of the table (ltr/rtl); affects column positioning\n     *     by reversing left/right positions.\n     * @param _isBrowser Whether the table is currently being rendered on the server or the client.\n     * @param _needsPositionStickyOnElement Whether we need to specify position: sticky on cells\n     *     using inline styles. If false, it is assumed that position: sticky is included in\n     *     the component stylesheet for _stickCellCss.\n     * @param _positionListener A listener that is notified of changes to sticky rows/columns\n     *     and their dimensions.\n     */\n    constructor(_isNativeHtmlTable, _stickCellCss, direction, _coalescedStyleScheduler, _isBrowser = true, _needsPositionStickyOnElement = true, _positionListener) {\n        this._isNativeHtmlTable = _isNativeHtmlTable;\n        this._stickCellCss = _stickCellCss;\n        this.direction = direction;\n        this._coalescedStyleScheduler = _coalescedStyleScheduler;\n        this._isBrowser = _isBrowser;\n        this._needsPositionStickyOnElement = _needsPositionStickyOnElement;\n        this._positionListener = _positionListener;\n        this._cachedCellWidths = [];\n        this._borderCellCss = {\n            'top': `${_stickCellCss}-border-elem-top`,\n            'bottom': `${_stickCellCss}-border-elem-bottom`,\n            'left': `${_stickCellCss}-border-elem-left`,\n            'right': `${_stickCellCss}-border-elem-right`,\n        };\n    }\n    /**\n     * Clears the sticky positioning styles from the row and its cells by resetting the `position`\n     * style, setting the zIndex to 0, and unsetting each provided sticky direction.\n     * @param rows The list of rows that should be cleared from sticking in the provided directions\n     * @param stickyDirections The directions that should no longer be set as sticky on the rows.\n     */\n    clearStickyPositioning(rows, stickyDirections) {\n        const elementsToClear = [];\n        for (const row of rows) {\n            // If the row isn't an element (e.g. if it's an `ng-container`),\n            // it won't have inline styles or `children` so we skip it.\n            if (row.nodeType !== row.ELEMENT_NODE) {\n                continue;\n            }\n            elementsToClear.push(row);\n            for (let i = 0; i < row.children.length; i++) {\n                elementsToClear.push(row.children[i]);\n            }\n        }\n        // Coalesce with sticky row/column updates (and potentially other changes like column resize).\n        this._coalescedStyleScheduler.schedule(() => {\n            for (const element of elementsToClear) {\n                this._removeStickyStyle(element, stickyDirections);\n            }\n        });\n    }\n    /**\n     * Applies sticky left and right positions to the cells of each row according to the sticky\n     * states of the rendered column definitions.\n     * @param rows The rows that should have its set of cells stuck according to the sticky states.\n     * @param stickyStartStates A list of boolean states where each state represents whether the cell\n     *     in this index position should be stuck to the start of the row.\n     * @param stickyEndStates A list of boolean states where each state represents whether the cell\n     *     in this index position should be stuck to the end of the row.\n     * @param recalculateCellWidths Whether the sticky styler should recalculate the width of each\n     *     column cell. If `false` cached widths will be used instead.\n     */\n    updateStickyColumns(rows, stickyStartStates, stickyEndStates, recalculateCellWidths = true) {\n        if (!rows.length ||\n            !this._isBrowser ||\n            !(stickyStartStates.some(state => state) || stickyEndStates.some(state => state))) {\n            if (this._positionListener) {\n                this._positionListener.stickyColumnsUpdated({ sizes: [] });\n                this._positionListener.stickyEndColumnsUpdated({ sizes: [] });\n            }\n            return;\n        }\n        const firstRow = rows[0];\n        const numCells = firstRow.children.length;\n        const cellWidths = this._getCellWidths(firstRow, recalculateCellWidths);\n        const startPositions = this._getStickyStartColumnPositions(cellWidths, stickyStartStates);\n        const endPositions = this._getStickyEndColumnPositions(cellWidths, stickyEndStates);\n        const lastStickyStart = stickyStartStates.lastIndexOf(true);\n        const firstStickyEnd = stickyEndStates.indexOf(true);\n        // Coalesce with sticky row updates (and potentially other changes like column resize).\n        this._coalescedStyleScheduler.schedule(() => {\n            const isRtl = this.direction === 'rtl';\n            const start = isRtl ? 'right' : 'left';\n            const end = isRtl ? 'left' : 'right';\n            for (const row of rows) {\n                for (let i = 0; i < numCells; i++) {\n                    const cell = row.children[i];\n                    if (stickyStartStates[i]) {\n                        this._addStickyStyle(cell, start, startPositions[i], i === lastStickyStart);\n                    }\n                    if (stickyEndStates[i]) {\n                        this._addStickyStyle(cell, end, endPositions[i], i === firstStickyEnd);\n                    }\n                }\n            }\n            if (this._positionListener) {\n                this._positionListener.stickyColumnsUpdated({\n                    sizes: lastStickyStart === -1\n                        ? []\n                        : cellWidths\n                            .slice(0, lastStickyStart + 1)\n                            .map((width, index) => (stickyStartStates[index] ? width : null)),\n                });\n                this._positionListener.stickyEndColumnsUpdated({\n                    sizes: firstStickyEnd === -1\n                        ? []\n                        : cellWidths\n                            .slice(firstStickyEnd)\n                            .map((width, index) => (stickyEndStates[index + firstStickyEnd] ? width : null))\n                            .reverse(),\n                });\n            }\n        });\n    }\n    /**\n     * Applies sticky positioning to the row's cells if using the native table layout, and to the\n     * row itself otherwise.\n     * @param rowsToStick The list of rows that should be stuck according to their corresponding\n     *     sticky state and to the provided top or bottom position.\n     * @param stickyStates A list of boolean states where each state represents whether the row\n     *     should be stuck in the particular top or bottom position.\n     * @param position The position direction in which the row should be stuck if that row should be\n     *     sticky.\n     *\n     */\n    stickRows(rowsToStick, stickyStates, position) {\n        // Since we can't measure the rows on the server, we can't stick the rows properly.\n        if (!this._isBrowser) {\n            return;\n        }\n        // If positioning the rows to the bottom, reverse their order when evaluating the sticky\n        // position such that the last row stuck will be \"bottom: 0px\" and so on. Note that the\n        // sticky states need to be reversed as well.\n        const rows = position === 'bottom' ? rowsToStick.slice().reverse() : rowsToStick;\n        const states = position === 'bottom' ? stickyStates.slice().reverse() : stickyStates;\n        // Measure row heights all at once before adding sticky styles to reduce layout thrashing.\n        const stickyOffsets = [];\n        const stickyCellHeights = [];\n        const elementsToStick = [];\n        for (let rowIndex = 0, stickyOffset = 0; rowIndex < rows.length; rowIndex++) {\n            if (!states[rowIndex]) {\n                continue;\n            }\n            stickyOffsets[rowIndex] = stickyOffset;\n            const row = rows[rowIndex];\n            elementsToStick[rowIndex] = this._isNativeHtmlTable\n                ? Array.from(row.children)\n                : [row];\n            const height = row.getBoundingClientRect().height;\n            stickyOffset += height;\n            stickyCellHeights[rowIndex] = height;\n        }\n        const borderedRowIndex = states.lastIndexOf(true);\n        // Coalesce with other sticky row updates (top/bottom), sticky columns updates\n        // (and potentially other changes like column resize).\n        this._coalescedStyleScheduler.schedule(() => {\n            var _a, _b;\n            for (let rowIndex = 0; rowIndex < rows.length; rowIndex++) {\n                if (!states[rowIndex]) {\n                    continue;\n                }\n                const offset = stickyOffsets[rowIndex];\n                const isBorderedRowIndex = rowIndex === borderedRowIndex;\n                for (const element of elementsToStick[rowIndex]) {\n                    this._addStickyStyle(element, position, offset, isBorderedRowIndex);\n                }\n            }\n            if (position === 'top') {\n                (_a = this._positionListener) === null || _a === void 0 ? void 0 : _a.stickyHeaderRowsUpdated({\n                    sizes: stickyCellHeights,\n                    offsets: stickyOffsets,\n                    elements: elementsToStick,\n                });\n            }\n            else {\n                (_b = this._positionListener) === null || _b === void 0 ? void 0 : _b.stickyFooterRowsUpdated({\n                    sizes: stickyCellHeights,\n                    offsets: stickyOffsets,\n                    elements: elementsToStick,\n                });\n            }\n        });\n    }\n    /**\n     * When using the native table in Safari, sticky footer cells do not stick. The only way to stick\n     * footer rows is to apply sticky styling to the tfoot container. This should only be done if\n     * all footer rows are sticky. If not all footer rows are sticky, remove sticky positioning from\n     * the tfoot element.\n     */\n    updateStickyFooterContainer(tableElement, stickyStates) {\n        if (!this._isNativeHtmlTable) {\n            return;\n        }\n        const tfoot = tableElement.querySelector('tfoot');\n        // Coalesce with other sticky updates (and potentially other changes like column resize).\n        this._coalescedStyleScheduler.schedule(() => {\n            if (stickyStates.some(state => !state)) {\n                this._removeStickyStyle(tfoot, ['bottom']);\n            }\n            else {\n                this._addStickyStyle(tfoot, 'bottom', 0, false);\n            }\n        });\n    }\n    /**\n     * Removes the sticky style on the element by removing the sticky cell CSS class, re-evaluating\n     * the zIndex, removing each of the provided sticky directions, and removing the\n     * sticky position if there are no more directions.\n     */\n    _removeStickyStyle(element, stickyDirections) {\n        for (const dir of stickyDirections) {\n            element.style[dir] = '';\n            element.classList.remove(this._borderCellCss[dir]);\n        }\n        // If the element no longer has any more sticky directions, remove sticky positioning and\n        // the sticky CSS class.\n        // Short-circuit checking element.style[dir] for stickyDirections as they\n        // were already removed above.\n        const hasDirection = STICKY_DIRECTIONS.some(dir => stickyDirections.indexOf(dir) === -1 && element.style[dir]);\n        if (hasDirection) {\n            element.style.zIndex = this._getCalculatedZIndex(element);\n        }\n        else {\n            // When not hasDirection, _getCalculatedZIndex will always return ''.\n            element.style.zIndex = '';\n            if (this._needsPositionStickyOnElement) {\n                element.style.position = '';\n            }\n            element.classList.remove(this._stickCellCss);\n        }\n    }\n    /**\n     * Adds the sticky styling to the element by adding the sticky style class, changing position\n     * to be sticky (and -webkit-sticky), setting the appropriate zIndex, and adding a sticky\n     * direction and value.\n     */\n    _addStickyStyle(element, dir, dirValue, isBorderElement) {\n        element.classList.add(this._stickCellCss);\n        if (isBorderElement) {\n            element.classList.add(this._borderCellCss[dir]);\n        }\n        element.style[dir] = `${dirValue}px`;\n        element.style.zIndex = this._getCalculatedZIndex(element);\n        if (this._needsPositionStickyOnElement) {\n            element.style.cssText += 'position: -webkit-sticky; position: sticky; ';\n        }\n    }\n    /**\n     * Calculate what the z-index should be for the element, depending on what directions (top,\n     * bottom, left, right) have been set. It should be true that elements with a top direction\n     * should have the highest index since these are elements like a table header. If any of those\n     * elements are also sticky in another direction, then they should appear above other elements\n     * that are only sticky top (e.g. a sticky column on a sticky header). Bottom-sticky elements\n     * (e.g. footer rows) should then be next in the ordering such that they are below the header\n     * but above any non-sticky elements. Finally, left/right sticky elements (e.g. sticky columns)\n     * should minimally increment so that they are above non-sticky elements but below top and bottom\n     * elements.\n     */\n    _getCalculatedZIndex(element) {\n        const zIndexIncrements = {\n            top: 100,\n            bottom: 10,\n            left: 1,\n            right: 1,\n        };\n        let zIndex = 0;\n        // Use `Iterable` instead of `Array` because TypeScript, as of 3.6.3,\n        // loses the array generic type in the `for of`. But we *also* have to use `Array` because\n        // typescript won't iterate over an `Iterable` unless you compile with `--downlevelIteration`\n        for (const dir of STICKY_DIRECTIONS) {\n            if (element.style[dir]) {\n                zIndex += zIndexIncrements[dir];\n            }\n        }\n        return zIndex ? `${zIndex}` : '';\n    }\n    /** Gets the widths for each cell in the provided row. */\n    _getCellWidths(row, recalculateCellWidths = true) {\n        if (!recalculateCellWidths && this._cachedCellWidths.length) {\n            return this._cachedCellWidths;\n        }\n        const cellWidths = [];\n        const firstRowCells = row.children;\n        for (let i = 0; i < firstRowCells.length; i++) {\n            let cell = firstRowCells[i];\n            cellWidths.push(cell.getBoundingClientRect().width);\n        }\n        this._cachedCellWidths = cellWidths;\n        return cellWidths;\n    }\n    /**\n     * Determines the left and right positions of each sticky column cell, which will be the\n     * accumulation of all sticky column cell widths to the left and right, respectively.\n     * Non-sticky cells do not need to have a value set since their positions will not be applied.\n     */\n    _getStickyStartColumnPositions(widths, stickyStates) {\n        const positions = [];\n        let nextPosition = 0;\n        for (let i = 0; i < widths.length; i++) {\n            if (stickyStates[i]) {\n                positions[i] = nextPosition;\n                nextPosition += widths[i];\n            }\n        }\n        return positions;\n    }\n    /**\n     * Determines the left and right positions of each sticky column cell, which will be the\n     * accumulation of all sticky column cell widths to the left and right, respectively.\n     * Non-sticky cells do not need to have a value set since their positions will not be applied.\n     */\n    _getStickyEndColumnPositions(widths, stickyStates) {\n        const positions = [];\n        let nextPosition = 0;\n        for (let i = widths.length; i > 0; i--) {\n            if (stickyStates[i]) {\n                positions[i] = nextPosition;\n                nextPosition += widths[i];\n            }\n        }\n        return positions;\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Returns an error to be thrown when attempting to find an unexisting column.\n * @param id Id whose lookup failed.\n * @docs-private\n */\nfunction getTableUnknownColumnError(id) {\n    return Error(`Could not find column with id \"${id}\".`);\n}\n/**\n * Returns an error to be thrown when two column definitions have the same name.\n * @docs-private\n */\nfunction getTableDuplicateColumnNameError(name) {\n    return Error(`Duplicate column definition name provided: \"${name}\".`);\n}\n/**\n * Returns an error to be thrown when there are multiple rows that are missing a when function.\n * @docs-private\n */\nfunction getTableMultipleDefaultRowDefsError() {\n    return Error(`There can only be one default row without a when predicate function.`);\n}\n/**\n * Returns an error to be thrown when there are no matching row defs for a particular set of data.\n * @docs-private\n */\nfunction getTableMissingMatchingRowDefError(data) {\n    return Error(`Could not find a matching row definition for the` +\n        `provided row data: ${JSON.stringify(data)}`);\n}\n/**\n * Returns an error to be thrown when there is no row definitions present in the content.\n * @docs-private\n */\nfunction getTableMissingRowDefsError() {\n    return Error('Missing definitions for header, footer, and row; ' +\n        'cannot determine which columns should be rendered.');\n}\n/**\n * Returns an error to be thrown when the data source does not match the compatible types.\n * @docs-private\n */\nfunction getTableUnknownDataSourceError() {\n    return Error(`Provided data source did not match an array, Observable, or DataSource`);\n}\n/**\n * Returns an error to be thrown when the text column cannot find a parent table to inject.\n * @docs-private\n */\nfunction getTableTextColumnMissingParentTableError() {\n    return Error(`Text column could not find a parent table for registration.`);\n}\n/**\n * Returns an error to be thrown when a table text column doesn't have a name.\n * @docs-private\n */\nfunction getTableTextColumnMissingNameError() {\n    return Error(`Table text column must have a name.`);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** The injection token used to specify the StickyPositioningListener. */\nconst STICKY_POSITIONING_LISTENER = new InjectionToken('CDK_SPL');\n\n/**\n * Enables the recycle view repeater strategy, which reduces rendering latency. Not compatible with\n * tables that animate rows.\n */\nclass CdkRecycleRows {\n}\nCdkRecycleRows.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CdkRecycleRows, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nCdkRecycleRows.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: CdkRecycleRows, selector: \"cdk-table[recycleRows], table[cdk-table][recycleRows]\", providers: [{ provide: _VIEW_REPEATER_STRATEGY, useClass: _RecycleViewRepeaterStrategy }], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CdkRecycleRows, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'cdk-table[recycleRows], table[cdk-table][recycleRows]',\n                    providers: [{ provide: _VIEW_REPEATER_STRATEGY, useClass: _RecycleViewRepeaterStrategy }],\n                }]\n        }] });\n/**\n * Provides a handle for the table to grab the view container's ng-container to insert data rows.\n * @docs-private\n */\nclass DataRowOutlet {\n    constructor(viewContainer, elementRef) {\n        this.viewContainer = viewContainer;\n        this.elementRef = elementRef;\n    }\n}\nDataRowOutlet.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: DataRowOutlet, deps: [{ token: i0.ViewContainerRef }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });\nDataRowOutlet.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: DataRowOutlet, selector: \"[rowOutlet]\", ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: DataRowOutlet, decorators: [{\n            type: Directive,\n            args: [{ selector: '[rowOutlet]' }]\n        }], ctorParameters: function () { return [{ type: i0.ViewContainerRef }, { type: i0.ElementRef }]; } });\n/**\n * Provides a handle for the table to grab the view container's ng-container to insert the header.\n * @docs-private\n */\nclass HeaderRowOutlet {\n    constructor(viewContainer, elementRef) {\n        this.viewContainer = viewContainer;\n        this.elementRef = elementRef;\n    }\n}\nHeaderRowOutlet.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: HeaderRowOutlet, deps: [{ token: i0.ViewContainerRef }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });\nHeaderRowOutlet.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: HeaderRowOutlet, selector: \"[headerRowOutlet]\", ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: HeaderRowOutlet, decorators: [{\n            type: Directive,\n            args: [{ selector: '[headerRowOutlet]' }]\n        }], ctorParameters: function () { return [{ type: i0.ViewContainerRef }, { type: i0.ElementRef }]; } });\n/**\n * Provides a handle for the table to grab the view container's ng-container to insert the footer.\n * @docs-private\n */\nclass FooterRowOutlet {\n    constructor(viewContainer, elementRef) {\n        this.viewContainer = viewContainer;\n        this.elementRef = elementRef;\n    }\n}\nFooterRowOutlet.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: FooterRowOutlet, deps: [{ token: i0.ViewContainerRef }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });\nFooterRowOutlet.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: FooterRowOutlet, selector: \"[footerRowOutlet]\", ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: FooterRowOutlet, decorators: [{\n            type: Directive,\n            args: [{ selector: '[footerRowOutlet]' }]\n        }], ctorParameters: function () { return [{ type: i0.ViewContainerRef }, { type: i0.ElementRef }]; } });\n/**\n * Provides a handle for the table to grab the view\n * container's ng-container to insert the no data row.\n * @docs-private\n */\nclass NoDataRowOutlet {\n    constructor(viewContainer, elementRef) {\n        this.viewContainer = viewContainer;\n        this.elementRef = elementRef;\n    }\n}\nNoDataRowOutlet.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: NoDataRowOutlet, deps: [{ token: i0.ViewContainerRef }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });\nNoDataRowOutlet.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: NoDataRowOutlet, selector: \"[noDataRowOutlet]\", ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: NoDataRowOutlet, decorators: [{\n            type: Directive,\n            args: [{ selector: '[noDataRowOutlet]' }]\n        }], ctorParameters: function () { return [{ type: i0.ViewContainerRef }, { type: i0.ElementRef }]; } });\n/**\n * The table template that can be used by the mat-table. Should not be used outside of the\n * material library.\n * @docs-private\n */\nconst CDK_TABLE_TEMPLATE = \n// Note that according to MDN, the `caption` element has to be projected as the **first**\n// element in the table. See https://developer.mozilla.org/en-US/docs/Web/HTML/Element/caption\n`\n  <ng-content select=\"caption\"></ng-content>\n  <ng-content select=\"colgroup, col\"></ng-content>\n  <ng-container headerRowOutlet></ng-container>\n  <ng-container rowOutlet></ng-container>\n  <ng-container noDataRowOutlet></ng-container>\n  <ng-container footerRowOutlet></ng-container>\n`;\n/**\n * Class used to conveniently type the embedded view ref for rows with a context.\n * @docs-private\n */\nclass RowViewRef extends EmbeddedViewRef {\n}\n/**\n * A data table that can render a header row, data rows, and a footer row.\n * Uses the dataSource input to determine the data to be rendered. The data can be provided either\n * as a data array, an Observable stream that emits the data array to render, or a DataSource with a\n * connect function that will return an Observable stream that emits the data array to render.\n */\nclass CdkTable {\n    constructor(_differs, _changeDetectorRef, _elementRef, role, _dir, _document, _platform, _viewRepeater, _coalescedStyleScheduler, _viewportRuler, \n    /**\n     * @deprecated `_stickyPositioningListener` parameter to become required.\n     * @breaking-change 13.0.0\n     */\n    _stickyPositioningListener) {\n        this._differs = _differs;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._elementRef = _elementRef;\n        this._dir = _dir;\n        this._platform = _platform;\n        this._viewRepeater = _viewRepeater;\n        this._coalescedStyleScheduler = _coalescedStyleScheduler;\n        this._viewportRuler = _viewportRuler;\n        this._stickyPositioningListener = _stickyPositioningListener;\n        /** Subject that emits when the component has been destroyed. */\n        this._onDestroy = new Subject();\n        /**\n         * Map of all the user's defined columns (header, data, and footer cell template) identified by\n         * name. Collection populated by the column definitions gathered by `ContentChildren` as well as\n         * any custom column definitions added to `_customColumnDefs`.\n         */\n        this._columnDefsByName = new Map();\n        /**\n         * Column definitions that were defined outside of the direct content children of the table.\n         * These will be defined when, e.g., creating a wrapper around the cdkTable that has\n         * column definitions as *its* content child.\n         */\n        this._customColumnDefs = new Set();\n        /**\n         * Data row definitions that were defined outside of the direct content children of the table.\n         * These will be defined when, e.g., creating a wrapper around the cdkTable that has\n         * built-in data rows as *its* content child.\n         */\n        this._customRowDefs = new Set();\n        /**\n         * Header row definitions that were defined outside of the direct content children of the table.\n         * These will be defined when, e.g., creating a wrapper around the cdkTable that has\n         * built-in header rows as *its* content child.\n         */\n        this._customHeaderRowDefs = new Set();\n        /**\n         * Footer row definitions that were defined outside of the direct content children of the table.\n         * These will be defined when, e.g., creating a wrapper around the cdkTable that has a\n         * built-in footer row as *its* content child.\n         */\n        this._customFooterRowDefs = new Set();\n        /**\n         * Whether the header row definition has been changed. Triggers an update to the header row after\n         * content is checked. Initialized as true so that the table renders the initial set of rows.\n         */\n        this._headerRowDefChanged = true;\n        /**\n         * Whether the footer row definition has been changed. Triggers an update to the footer row after\n         * content is checked. Initialized as true so that the table renders the initial set of rows.\n         */\n        this._footerRowDefChanged = true;\n        /**\n         * Whether the sticky column styles need to be updated. Set to `true` when the visible columns\n         * change.\n         */\n        this._stickyColumnStylesNeedReset = true;\n        /**\n         * Whether the sticky styler should recalculate cell widths when applying sticky styles. If\n         * `false`, cached values will be used instead. This is only applicable to tables with\n         * {@link fixedLayout} enabled. For other tables, cell widths will always be recalculated.\n         */\n        this._forceRecalculateCellWidths = true;\n        /**\n         * Cache of the latest rendered `RenderRow` objects as a map for easy retrieval when constructing\n         * a new list of `RenderRow` objects for rendering rows. Since the new list is constructed with\n         * the cached `RenderRow` objects when possible, the row identity is preserved when the data\n         * and row template matches, which allows the `IterableDiffer` to check rows by reference\n         * and understand which rows are added/moved/removed.\n         *\n         * Implemented as a map of maps where the first key is the `data: T` object and the second is the\n         * `CdkRowDef<T>` object. With the two keys, the cache points to a `RenderRow<T>` object that\n         * contains an array of created pairs. The array is necessary to handle cases where the data\n         * array contains multiple duplicate data objects and each instantiated `RenderRow` must be\n         * stored.\n         */\n        this._cachedRenderRowsMap = new Map();\n        /**\n         * CSS class added to any row or cell that has sticky positioning applied. May be overriden by\n         * table subclasses.\n         */\n        this.stickyCssClass = 'cdk-table-sticky';\n        /**\n         * Whether to manually add positon: sticky to all sticky cell elements. Not needed if\n         * the position is set in a selector associated with the value of stickyCssClass. May be\n         * overridden by table subclasses\n         */\n        this.needsPositionStickyOnElement = true;\n        /** Whether the no data row is currently showing anything. */\n        this._isShowingNoDataRow = false;\n        this._multiTemplateDataRows = false;\n        this._fixedLayout = false;\n        /**\n         * Emits when the table completes rendering a set of data rows based on the latest data from the\n         * data source, even if the set of rows is empty.\n         */\n        this.contentChanged = new EventEmitter();\n        // TODO(andrewseguin): Remove max value as the end index\n        //   and instead calculate the view on init and scroll.\n        /**\n         * Stream containing the latest information on what rows are being displayed on screen.\n         * Can be used by the data source to as a heuristic of what data should be provided.\n         *\n         * @docs-private\n         */\n        this.viewChange = new BehaviorSubject({\n            start: 0,\n            end: Number.MAX_VALUE,\n        });\n        if (!role) {\n            this._elementRef.nativeElement.setAttribute('role', 'table');\n        }\n        this._document = _document;\n        this._isNativeHtmlTable = this._elementRef.nativeElement.nodeName === 'TABLE';\n    }\n    /**\n     * Tracking function that will be used to check the differences in data changes. Used similarly\n     * to `ngFor` `trackBy` function. Optimize row operations by identifying a row based on its data\n     * relative to the function to know if a row should be added/removed/moved.\n     * Accepts a function that takes two parameters, `index` and `item`.\n     */\n    get trackBy() {\n        return this._trackByFn;\n    }\n    set trackBy(fn) {\n        if ((typeof ngDevMode === 'undefined' || ngDevMode) && fn != null && typeof fn !== 'function') {\n            console.warn(`trackBy must be a function, but received ${JSON.stringify(fn)}.`);\n        }\n        this._trackByFn = fn;\n    }\n    /**\n     * The table's source of data, which can be provided in three ways (in order of complexity):\n     *   - Simple data array (each object represents one table row)\n     *   - Stream that emits a data array each time the array changes\n     *   - `DataSource` object that implements the connect/disconnect interface.\n     *\n     * If a data array is provided, the table must be notified when the array's objects are\n     * added, removed, or moved. This can be done by calling the `renderRows()` function which will\n     * render the diff since the last table render. If the data array reference is changed, the table\n     * will automatically trigger an update to the rows.\n     *\n     * When providing an Observable stream, the table will trigger an update automatically when the\n     * stream emits a new array of data.\n     *\n     * Finally, when providing a `DataSource` object, the table will use the Observable stream\n     * provided by the connect function and trigger updates when that stream emits new data array\n     * values. During the table's ngOnDestroy or when the data source is removed from the table, the\n     * table will call the DataSource's `disconnect` function (may be useful for cleaning up any\n     * subscriptions registered during the connect process).\n     */\n    get dataSource() {\n        return this._dataSource;\n    }\n    set dataSource(dataSource) {\n        if (this._dataSource !== dataSource) {\n            this._switchDataSource(dataSource);\n        }\n    }\n    /**\n     * Whether to allow multiple rows per data object by evaluating which rows evaluate their 'when'\n     * predicate to true. If `multiTemplateDataRows` is false, which is the default value, then each\n     * dataobject will render the first row that evaluates its when predicate to true, in the order\n     * defined in the table, or otherwise the default row which does not have a when predicate.\n     */\n    get multiTemplateDataRows() {\n        return this._multiTemplateDataRows;\n    }\n    set multiTemplateDataRows(v) {\n        this._multiTemplateDataRows = coerceBooleanProperty(v);\n        // In Ivy if this value is set via a static attribute (e.g. <table multiTemplateDataRows>),\n        // this setter will be invoked before the row outlet has been defined hence the null check.\n        if (this._rowOutlet && this._rowOutlet.viewContainer.length) {\n            this._forceRenderDataRows();\n            this.updateStickyColumnStyles();\n        }\n    }\n    /**\n     * Whether to use a fixed table layout. Enabling this option will enforce consistent column widths\n     * and optimize rendering sticky styles for native tables. No-op for flex tables.\n     */\n    get fixedLayout() {\n        return this._fixedLayout;\n    }\n    set fixedLayout(v) {\n        this._fixedLayout = coerceBooleanProperty(v);\n        // Toggling `fixedLayout` may change column widths. Sticky column styles should be recalculated.\n        this._forceRecalculateCellWidths = true;\n        this._stickyColumnStylesNeedReset = true;\n    }\n    ngOnInit() {\n        this._setupStickyStyler();\n        if (this._isNativeHtmlTable) {\n            this._applyNativeTableSections();\n        }\n        // Set up the trackBy function so that it uses the `RenderRow` as its identity by default. If\n        // the user has provided a custom trackBy, return the result of that function as evaluated\n        // with the values of the `RenderRow`'s data and index.\n        this._dataDiffer = this._differs.find([]).create((_i, dataRow) => {\n            return this.trackBy ? this.trackBy(dataRow.dataIndex, dataRow.data) : dataRow;\n        });\n        this._viewportRuler\n            .change()\n            .pipe(takeUntil(this._onDestroy))\n            .subscribe(() => {\n            this._forceRecalculateCellWidths = true;\n        });\n    }\n    ngAfterContentChecked() {\n        // Cache the row and column definitions gathered by ContentChildren and programmatic injection.\n        this._cacheRowDefs();\n        this._cacheColumnDefs();\n        // Make sure that the user has at least added header, footer, or data row def.\n        if (!this._headerRowDefs.length &&\n            !this._footerRowDefs.length &&\n            !this._rowDefs.length &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getTableMissingRowDefsError();\n        }\n        // Render updates if the list of columns have been changed for the header, row, or footer defs.\n        const columnsChanged = this._renderUpdatedColumns();\n        const rowDefsChanged = columnsChanged || this._headerRowDefChanged || this._footerRowDefChanged;\n        // Ensure sticky column styles are reset if set to `true` elsewhere.\n        this._stickyColumnStylesNeedReset = this._stickyColumnStylesNeedReset || rowDefsChanged;\n        this._forceRecalculateCellWidths = rowDefsChanged;\n        // If the header row definition has been changed, trigger a render to the header row.\n        if (this._headerRowDefChanged) {\n            this._forceRenderHeaderRows();\n            this._headerRowDefChanged = false;\n        }\n        // If the footer row definition has been changed, trigger a render to the footer row.\n        if (this._footerRowDefChanged) {\n            this._forceRenderFooterRows();\n            this._footerRowDefChanged = false;\n        }\n        // If there is a data source and row definitions, connect to the data source unless a\n        // connection has already been made.\n        if (this.dataSource && this._rowDefs.length > 0 && !this._renderChangeSubscription) {\n            this._observeRenderChanges();\n        }\n        else if (this._stickyColumnStylesNeedReset) {\n            // In the above case, _observeRenderChanges will result in updateStickyColumnStyles being\n            // called when it row data arrives. Otherwise, we need to call it proactively.\n            this.updateStickyColumnStyles();\n        }\n        this._checkStickyStates();\n    }\n    ngOnDestroy() {\n        this._rowOutlet.viewContainer.clear();\n        this._noDataRowOutlet.viewContainer.clear();\n        this._headerRowOutlet.viewContainer.clear();\n        this._footerRowOutlet.viewContainer.clear();\n        this._cachedRenderRowsMap.clear();\n        this._onDestroy.next();\n        this._onDestroy.complete();\n        if (isDataSource(this.dataSource)) {\n            this.dataSource.disconnect(this);\n        }\n    }\n    /**\n     * Renders rows based on the table's latest set of data, which was either provided directly as an\n     * input or retrieved through an Observable stream (directly or from a DataSource).\n     * Checks for differences in the data since the last diff to perform only the necessary\n     * changes (add/remove/move rows).\n     *\n     * If the table's data source is a DataSource or Observable, this will be invoked automatically\n     * each time the provided Observable stream emits a new data array. Otherwise if your data is\n     * an array, this function will need to be called to render any changes.\n     */\n    renderRows() {\n        this._renderRows = this._getAllRenderRows();\n        const changes = this._dataDiffer.diff(this._renderRows);\n        if (!changes) {\n            this._updateNoDataRow();\n            this.contentChanged.next();\n            return;\n        }\n        const viewContainer = this._rowOutlet.viewContainer;\n        this._viewRepeater.applyChanges(changes, viewContainer, (record, _adjustedPreviousIndex, currentIndex) => this._getEmbeddedViewArgs(record.item, currentIndex), record => record.item.data, (change) => {\n            if (change.operation === 1 /* INSERTED */ && change.context) {\n                this._renderCellTemplateForItem(change.record.item.rowDef, change.context);\n            }\n        });\n        // Update the meta context of a row's context data (index, count, first, last, ...)\n        this._updateRowIndexContext();\n        // Update rows that did not get added/removed/moved but may have had their identity changed,\n        // e.g. if trackBy matched data on some property but the actual data reference changed.\n        changes.forEachIdentityChange((record) => {\n            const rowView = viewContainer.get(record.currentIndex);\n            rowView.context.$implicit = record.item.data;\n        });\n        this._updateNoDataRow();\n        this.updateStickyColumnStyles();\n        this.contentChanged.next();\n    }\n    /** Adds a column definition that was not included as part of the content children. */\n    addColumnDef(columnDef) {\n        this._customColumnDefs.add(columnDef);\n    }\n    /** Removes a column definition that was not included as part of the content children. */\n    removeColumnDef(columnDef) {\n        this._customColumnDefs.delete(columnDef);\n    }\n    /** Adds a row definition that was not included as part of the content children. */\n    addRowDef(rowDef) {\n        this._customRowDefs.add(rowDef);\n    }\n    /** Removes a row definition that was not included as part of the content children. */\n    removeRowDef(rowDef) {\n        this._customRowDefs.delete(rowDef);\n    }\n    /** Adds a header row definition that was not included as part of the content children. */\n    addHeaderRowDef(headerRowDef) {\n        this._customHeaderRowDefs.add(headerRowDef);\n        this._headerRowDefChanged = true;\n    }\n    /** Removes a header row definition that was not included as part of the content children. */\n    removeHeaderRowDef(headerRowDef) {\n        this._customHeaderRowDefs.delete(headerRowDef);\n        this._headerRowDefChanged = true;\n    }\n    /** Adds a footer row definition that was not included as part of the content children. */\n    addFooterRowDef(footerRowDef) {\n        this._customFooterRowDefs.add(footerRowDef);\n        this._footerRowDefChanged = true;\n    }\n    /** Removes a footer row definition that was not included as part of the content children. */\n    removeFooterRowDef(footerRowDef) {\n        this._customFooterRowDefs.delete(footerRowDef);\n        this._footerRowDefChanged = true;\n    }\n    /** Sets a no data row definition that was not included as a part of the content children. */\n    setNoDataRow(noDataRow) {\n        this._customNoDataRow = noDataRow;\n    }\n    /**\n     * Updates the header sticky styles. First resets all applied styles with respect to the cells\n     * sticking to the top. Then, evaluating which cells need to be stuck to the top. This is\n     * automatically called when the header row changes its displayed set of columns, or if its\n     * sticky input changes. May be called manually for cases where the cell content changes outside\n     * of these events.\n     */\n    updateStickyHeaderRowStyles() {\n        const headerRows = this._getRenderedRows(this._headerRowOutlet);\n        const tableElement = this._elementRef.nativeElement;\n        // Hide the thead element if there are no header rows. This is necessary to satisfy\n        // overzealous a11y checkers that fail because the `rowgroup` element does not contain\n        // required child `row`.\n        const thead = tableElement.querySelector('thead');\n        if (thead) {\n            thead.style.display = headerRows.length ? '' : 'none';\n        }\n        const stickyStates = this._headerRowDefs.map(def => def.sticky);\n        this._stickyStyler.clearStickyPositioning(headerRows, ['top']);\n        this._stickyStyler.stickRows(headerRows, stickyStates, 'top');\n        // Reset the dirty state of the sticky input change since it has been used.\n        this._headerRowDefs.forEach(def => def.resetStickyChanged());\n    }\n    /**\n     * Updates the footer sticky styles. First resets all applied styles with respect to the cells\n     * sticking to the bottom. Then, evaluating which cells need to be stuck to the bottom. This is\n     * automatically called when the footer row changes its displayed set of columns, or if its\n     * sticky input changes. May be called manually for cases where the cell content changes outside\n     * of these events.\n     */\n    updateStickyFooterRowStyles() {\n        const footerRows = this._getRenderedRows(this._footerRowOutlet);\n        const tableElement = this._elementRef.nativeElement;\n        // Hide the tfoot element if there are no footer rows. This is necessary to satisfy\n        // overzealous a11y checkers that fail because the `rowgroup` element does not contain\n        // required child `row`.\n        const tfoot = tableElement.querySelector('tfoot');\n        if (tfoot) {\n            tfoot.style.display = footerRows.length ? '' : 'none';\n        }\n        const stickyStates = this._footerRowDefs.map(def => def.sticky);\n        this._stickyStyler.clearStickyPositioning(footerRows, ['bottom']);\n        this._stickyStyler.stickRows(footerRows, stickyStates, 'bottom');\n        this._stickyStyler.updateStickyFooterContainer(this._elementRef.nativeElement, stickyStates);\n        // Reset the dirty state of the sticky input change since it has been used.\n        this._footerRowDefs.forEach(def => def.resetStickyChanged());\n    }\n    /**\n     * Updates the column sticky styles. First resets all applied styles with respect to the cells\n     * sticking to the left and right. Then sticky styles are added for the left and right according\n     * to the column definitions for each cell in each row. This is automatically called when\n     * the data source provides a new set of data or when a column definition changes its sticky\n     * input. May be called manually for cases where the cell content changes outside of these events.\n     */\n    updateStickyColumnStyles() {\n        const headerRows = this._getRenderedRows(this._headerRowOutlet);\n        const dataRows = this._getRenderedRows(this._rowOutlet);\n        const footerRows = this._getRenderedRows(this._footerRowOutlet);\n        // For tables not using a fixed layout, the column widths may change when new rows are rendered.\n        // In a table using a fixed layout, row content won't affect column width, so sticky styles\n        // don't need to be cleared unless either the sticky column config changes or one of the row\n        // defs change.\n        if ((this._isNativeHtmlTable && !this._fixedLayout) || this._stickyColumnStylesNeedReset) {\n            // Clear the left and right positioning from all columns in the table across all rows since\n            // sticky columns span across all table sections (header, data, footer)\n            this._stickyStyler.clearStickyPositioning([...headerRows, ...dataRows, ...footerRows], ['left', 'right']);\n            this._stickyColumnStylesNeedReset = false;\n        }\n        // Update the sticky styles for each header row depending on the def's sticky state\n        headerRows.forEach((headerRow, i) => {\n            this._addStickyColumnStyles([headerRow], this._headerRowDefs[i]);\n        });\n        // Update the sticky styles for each data row depending on its def's sticky state\n        this._rowDefs.forEach(rowDef => {\n            // Collect all the rows rendered with this row definition.\n            const rows = [];\n            for (let i = 0; i < dataRows.length; i++) {\n                if (this._renderRows[i].rowDef === rowDef) {\n                    rows.push(dataRows[i]);\n                }\n            }\n            this._addStickyColumnStyles(rows, rowDef);\n        });\n        // Update the sticky styles for each footer row depending on the def's sticky state\n        footerRows.forEach((footerRow, i) => {\n            this._addStickyColumnStyles([footerRow], this._footerRowDefs[i]);\n        });\n        // Reset the dirty state of the sticky input change since it has been used.\n        Array.from(this._columnDefsByName.values()).forEach(def => def.resetStickyChanged());\n    }\n    /**\n     * Get the list of RenderRow objects to render according to the current list of data and defined\n     * row definitions. If the previous list already contained a particular pair, it should be reused\n     * so that the differ equates their references.\n     */\n    _getAllRenderRows() {\n        const renderRows = [];\n        // Store the cache and create a new one. Any re-used RenderRow objects will be moved into the\n        // new cache while unused ones can be picked up by garbage collection.\n        const prevCachedRenderRows = this._cachedRenderRowsMap;\n        this._cachedRenderRowsMap = new Map();\n        // For each data object, get the list of rows that should be rendered, represented by the\n        // respective `RenderRow` object which is the pair of `data` and `CdkRowDef`.\n        for (let i = 0; i < this._data.length; i++) {\n            let data = this._data[i];\n            const renderRowsForData = this._getRenderRowsForData(data, i, prevCachedRenderRows.get(data));\n            if (!this._cachedRenderRowsMap.has(data)) {\n                this._cachedRenderRowsMap.set(data, new WeakMap());\n            }\n            for (let j = 0; j < renderRowsForData.length; j++) {\n                let renderRow = renderRowsForData[j];\n                const cache = this._cachedRenderRowsMap.get(renderRow.data);\n                if (cache.has(renderRow.rowDef)) {\n                    cache.get(renderRow.rowDef).push(renderRow);\n                }\n                else {\n                    cache.set(renderRow.rowDef, [renderRow]);\n                }\n                renderRows.push(renderRow);\n            }\n        }\n        return renderRows;\n    }\n    /**\n     * Gets a list of `RenderRow<T>` for the provided data object and any `CdkRowDef` objects that\n     * should be rendered for this data. Reuses the cached RenderRow objects if they match the same\n     * `(T, CdkRowDef)` pair.\n     */\n    _getRenderRowsForData(data, dataIndex, cache) {\n        const rowDefs = this._getRowDefs(data, dataIndex);\n        return rowDefs.map(rowDef => {\n            const cachedRenderRows = cache && cache.has(rowDef) ? cache.get(rowDef) : [];\n            if (cachedRenderRows.length) {\n                const dataRow = cachedRenderRows.shift();\n                dataRow.dataIndex = dataIndex;\n                return dataRow;\n            }\n            else {\n                return { data, rowDef, dataIndex };\n            }\n        });\n    }\n    /** Update the map containing the content's column definitions. */\n    _cacheColumnDefs() {\n        this._columnDefsByName.clear();\n        const columnDefs = mergeArrayAndSet(this._getOwnDefs(this._contentColumnDefs), this._customColumnDefs);\n        columnDefs.forEach(columnDef => {\n            if (this._columnDefsByName.has(columnDef.name) &&\n                (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw getTableDuplicateColumnNameError(columnDef.name);\n            }\n            this._columnDefsByName.set(columnDef.name, columnDef);\n        });\n    }\n    /** Update the list of all available row definitions that can be used. */\n    _cacheRowDefs() {\n        this._headerRowDefs = mergeArrayAndSet(this._getOwnDefs(this._contentHeaderRowDefs), this._customHeaderRowDefs);\n        this._footerRowDefs = mergeArrayAndSet(this._getOwnDefs(this._contentFooterRowDefs), this._customFooterRowDefs);\n        this._rowDefs = mergeArrayAndSet(this._getOwnDefs(this._contentRowDefs), this._customRowDefs);\n        // After all row definitions are determined, find the row definition to be considered default.\n        const defaultRowDefs = this._rowDefs.filter(def => !def.when);\n        if (!this.multiTemplateDataRows &&\n            defaultRowDefs.length > 1 &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getTableMultipleDefaultRowDefsError();\n        }\n        this._defaultRowDef = defaultRowDefs[0];\n    }\n    /**\n     * Check if the header, data, or footer rows have changed what columns they want to display or\n     * whether the sticky states have changed for the header or footer. If there is a diff, then\n     * re-render that section.\n     */\n    _renderUpdatedColumns() {\n        const columnsDiffReducer = (acc, def) => acc || !!def.getColumnsDiff();\n        // Force re-render data rows if the list of column definitions have changed.\n        const dataColumnsChanged = this._rowDefs.reduce(columnsDiffReducer, false);\n        if (dataColumnsChanged) {\n            this._forceRenderDataRows();\n        }\n        // Force re-render header/footer rows if the list of column definitions have changed.\n        const headerColumnsChanged = this._headerRowDefs.reduce(columnsDiffReducer, false);\n        if (headerColumnsChanged) {\n            this._forceRenderHeaderRows();\n        }\n        const footerColumnsChanged = this._footerRowDefs.reduce(columnsDiffReducer, false);\n        if (footerColumnsChanged) {\n            this._forceRenderFooterRows();\n        }\n        return dataColumnsChanged || headerColumnsChanged || footerColumnsChanged;\n    }\n    /**\n     * Switch to the provided data source by resetting the data and unsubscribing from the current\n     * render change subscription if one exists. If the data source is null, interpret this by\n     * clearing the row outlet. Otherwise start listening for new data.\n     */\n    _switchDataSource(dataSource) {\n        this._data = [];\n        if (isDataSource(this.dataSource)) {\n            this.dataSource.disconnect(this);\n        }\n        // Stop listening for data from the previous data source.\n        if (this._renderChangeSubscription) {\n            this._renderChangeSubscription.unsubscribe();\n            this._renderChangeSubscription = null;\n        }\n        if (!dataSource) {\n            if (this._dataDiffer) {\n                this._dataDiffer.diff([]);\n            }\n            this._rowOutlet.viewContainer.clear();\n        }\n        this._dataSource = dataSource;\n    }\n    /** Set up a subscription for the data provided by the data source. */\n    _observeRenderChanges() {\n        // If no data source has been set, there is nothing to observe for changes.\n        if (!this.dataSource) {\n            return;\n        }\n        let dataStream;\n        if (isDataSource(this.dataSource)) {\n            dataStream = this.dataSource.connect(this);\n        }\n        else if (isObservable(this.dataSource)) {\n            dataStream = this.dataSource;\n        }\n        else if (Array.isArray(this.dataSource)) {\n            dataStream = of(this.dataSource);\n        }\n        if (dataStream === undefined && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getTableUnknownDataSourceError();\n        }\n        this._renderChangeSubscription = dataStream\n            .pipe(takeUntil(this._onDestroy))\n            .subscribe(data => {\n            this._data = data || [];\n            this.renderRows();\n        });\n    }\n    /**\n     * Clears any existing content in the header row outlet and creates a new embedded view\n     * in the outlet using the header row definition.\n     */\n    _forceRenderHeaderRows() {\n        // Clear the header row outlet if any content exists.\n        if (this._headerRowOutlet.viewContainer.length > 0) {\n            this._headerRowOutlet.viewContainer.clear();\n        }\n        this._headerRowDefs.forEach((def, i) => this._renderRow(this._headerRowOutlet, def, i));\n        this.updateStickyHeaderRowStyles();\n    }\n    /**\n     * Clears any existing content in the footer row outlet and creates a new embedded view\n     * in the outlet using the footer row definition.\n     */\n    _forceRenderFooterRows() {\n        // Clear the footer row outlet if any content exists.\n        if (this._footerRowOutlet.viewContainer.length > 0) {\n            this._footerRowOutlet.viewContainer.clear();\n        }\n        this._footerRowDefs.forEach((def, i) => this._renderRow(this._footerRowOutlet, def, i));\n        this.updateStickyFooterRowStyles();\n    }\n    /** Adds the sticky column styles for the rows according to the columns' stick states. */\n    _addStickyColumnStyles(rows, rowDef) {\n        const columnDefs = Array.from(rowDef.columns || []).map(columnName => {\n            const columnDef = this._columnDefsByName.get(columnName);\n            if (!columnDef && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw getTableUnknownColumnError(columnName);\n            }\n            return columnDef;\n        });\n        const stickyStartStates = columnDefs.map(columnDef => columnDef.sticky);\n        const stickyEndStates = columnDefs.map(columnDef => columnDef.stickyEnd);\n        this._stickyStyler.updateStickyColumns(rows, stickyStartStates, stickyEndStates, !this._fixedLayout || this._forceRecalculateCellWidths);\n    }\n    /** Gets the list of rows that have been rendered in the row outlet. */\n    _getRenderedRows(rowOutlet) {\n        const renderedRows = [];\n        for (let i = 0; i < rowOutlet.viewContainer.length; i++) {\n            const viewRef = rowOutlet.viewContainer.get(i);\n            renderedRows.push(viewRef.rootNodes[0]);\n        }\n        return renderedRows;\n    }\n    /**\n     * Get the matching row definitions that should be used for this row data. If there is only\n     * one row definition, it is returned. Otherwise, find the row definitions that has a when\n     * predicate that returns true with the data. If none return true, return the default row\n     * definition.\n     */\n    _getRowDefs(data, dataIndex) {\n        if (this._rowDefs.length == 1) {\n            return [this._rowDefs[0]];\n        }\n        let rowDefs = [];\n        if (this.multiTemplateDataRows) {\n            rowDefs = this._rowDefs.filter(def => !def.when || def.when(dataIndex, data));\n        }\n        else {\n            let rowDef = this._rowDefs.find(def => def.when && def.when(dataIndex, data)) || this._defaultRowDef;\n            if (rowDef) {\n                rowDefs.push(rowDef);\n            }\n        }\n        if (!rowDefs.length && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getTableMissingMatchingRowDefError(data);\n        }\n        return rowDefs;\n    }\n    _getEmbeddedViewArgs(renderRow, index) {\n        const rowDef = renderRow.rowDef;\n        const context = { $implicit: renderRow.data };\n        return {\n            templateRef: rowDef.template,\n            context,\n            index,\n        };\n    }\n    /**\n     * Creates a new row template in the outlet and fills it with the set of cell templates.\n     * Optionally takes a context to provide to the row and cells, as well as an optional index\n     * of where to place the new row template in the outlet.\n     */\n    _renderRow(outlet, rowDef, index, context = {}) {\n        // TODO(andrewseguin): enforce that one outlet was instantiated from createEmbeddedView\n        const view = outlet.viewContainer.createEmbeddedView(rowDef.template, context, index);\n        this._renderCellTemplateForItem(rowDef, context);\n        return view;\n    }\n    _renderCellTemplateForItem(rowDef, context) {\n        for (let cellTemplate of this._getCellTemplates(rowDef)) {\n            if (CdkCellOutlet.mostRecentCellOutlet) {\n                CdkCellOutlet.mostRecentCellOutlet._viewContainer.createEmbeddedView(cellTemplate, context);\n            }\n        }\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Updates the index-related context for each row to reflect any changes in the index of the rows,\n     * e.g. first/last/even/odd.\n     */\n    _updateRowIndexContext() {\n        const viewContainer = this._rowOutlet.viewContainer;\n        for (let renderIndex = 0, count = viewContainer.length; renderIndex < count; renderIndex++) {\n            const viewRef = viewContainer.get(renderIndex);\n            const context = viewRef.context;\n            context.count = count;\n            context.first = renderIndex === 0;\n            context.last = renderIndex === count - 1;\n            context.even = renderIndex % 2 === 0;\n            context.odd = !context.even;\n            if (this.multiTemplateDataRows) {\n                context.dataIndex = this._renderRows[renderIndex].dataIndex;\n                context.renderIndex = renderIndex;\n            }\n            else {\n                context.index = this._renderRows[renderIndex].dataIndex;\n            }\n        }\n    }\n    /** Gets the column definitions for the provided row def. */\n    _getCellTemplates(rowDef) {\n        if (!rowDef || !rowDef.columns) {\n            return [];\n        }\n        return Array.from(rowDef.columns, columnId => {\n            const column = this._columnDefsByName.get(columnId);\n            if (!column && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw getTableUnknownColumnError(columnId);\n            }\n            return rowDef.extractCellTemplate(column);\n        });\n    }\n    /** Adds native table sections (e.g. tbody) and moves the row outlets into them. */\n    _applyNativeTableSections() {\n        const documentFragment = this._document.createDocumentFragment();\n        const sections = [\n            { tag: 'thead', outlets: [this._headerRowOutlet] },\n            { tag: 'tbody', outlets: [this._rowOutlet, this._noDataRowOutlet] },\n            { tag: 'tfoot', outlets: [this._footerRowOutlet] },\n        ];\n        for (const section of sections) {\n            const element = this._document.createElement(section.tag);\n            element.setAttribute('role', 'rowgroup');\n            for (const outlet of section.outlets) {\n                element.appendChild(outlet.elementRef.nativeElement);\n            }\n            documentFragment.appendChild(element);\n        }\n        // Use a DocumentFragment so we don't hit the DOM on each iteration.\n        this._elementRef.nativeElement.appendChild(documentFragment);\n    }\n    /**\n     * Forces a re-render of the data rows. Should be called in cases where there has been an input\n     * change that affects the evaluation of which rows should be rendered, e.g. toggling\n     * `multiTemplateDataRows` or adding/removing row definitions.\n     */\n    _forceRenderDataRows() {\n        this._dataDiffer.diff([]);\n        this._rowOutlet.viewContainer.clear();\n        this.renderRows();\n    }\n    /**\n     * Checks if there has been a change in sticky states since last check and applies the correct\n     * sticky styles. Since checking resets the \"dirty\" state, this should only be performed once\n     * during a change detection and after the inputs are settled (after content check).\n     */\n    _checkStickyStates() {\n        const stickyCheckReducer = (acc, d) => {\n            return acc || d.hasStickyChanged();\n        };\n        // Note that the check needs to occur for every definition since it notifies the definition\n        // that it can reset its dirty state. Using another operator like `some` may short-circuit\n        // remaining definitions and leave them in an unchecked state.\n        if (this._headerRowDefs.reduce(stickyCheckReducer, false)) {\n            this.updateStickyHeaderRowStyles();\n        }\n        if (this._footerRowDefs.reduce(stickyCheckReducer, false)) {\n            this.updateStickyFooterRowStyles();\n        }\n        if (Array.from(this._columnDefsByName.values()).reduce(stickyCheckReducer, false)) {\n            this._stickyColumnStylesNeedReset = true;\n            this.updateStickyColumnStyles();\n        }\n    }\n    /**\n     * Creates the sticky styler that will be used for sticky rows and columns. Listens\n     * for directionality changes and provides the latest direction to the styler. Re-applies column\n     * stickiness when directionality changes.\n     */\n    _setupStickyStyler() {\n        const direction = this._dir ? this._dir.value : 'ltr';\n        this._stickyStyler = new StickyStyler(this._isNativeHtmlTable, this.stickyCssClass, direction, this._coalescedStyleScheduler, this._platform.isBrowser, this.needsPositionStickyOnElement, this._stickyPositioningListener);\n        (this._dir ? this._dir.change : of())\n            .pipe(takeUntil(this._onDestroy))\n            .subscribe(value => {\n            this._stickyStyler.direction = value;\n            this.updateStickyColumnStyles();\n        });\n    }\n    /** Filters definitions that belong to this table from a QueryList. */\n    _getOwnDefs(items) {\n        return items.filter(item => !item._table || item._table === this);\n    }\n    /** Creates or removes the no data row, depending on whether any data is being shown. */\n    _updateNoDataRow() {\n        const noDataRow = this._customNoDataRow || this._noDataRow;\n        if (!noDataRow) {\n            return;\n        }\n        const shouldShow = this._rowOutlet.viewContainer.length === 0;\n        if (shouldShow === this._isShowingNoDataRow) {\n            return;\n        }\n        const container = this._noDataRowOutlet.viewContainer;\n        if (shouldShow) {\n            const view = container.createEmbeddedView(noDataRow.templateRef);\n            const rootNode = view.rootNodes[0];\n            // Only add the attributes if we have a single root node since it's hard\n            // to figure out which one to add it to when there are multiple.\n            if (view.rootNodes.length === 1 && (rootNode === null || rootNode === void 0 ? void 0 : rootNode.nodeType) === this._document.ELEMENT_NODE) {\n                rootNode.setAttribute('role', 'row');\n                rootNode.classList.add(noDataRow._contentClassName);\n            }\n        }\n        else {\n            container.clear();\n        }\n        this._isShowingNoDataRow = shouldShow;\n    }\n}\nCdkTable.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CdkTable, deps: [{ token: i0.IterableDiffers }, { token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: 'role', attribute: true }, { token: i1.Directionality, optional: true }, { token: DOCUMENT }, { token: i2.Platform }, { token: _VIEW_REPEATER_STRATEGY }, { token: _COALESCED_STYLE_SCHEDULER }, { token: i3.ViewportRuler }, { token: STICKY_POSITIONING_LISTENER, optional: true, skipSelf: true }], target: i0.ɵɵFactoryTarget.Component });\nCdkTable.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: CdkTable, selector: \"cdk-table, table[cdk-table]\", inputs: { trackBy: \"trackBy\", dataSource: \"dataSource\", multiTemplateDataRows: \"multiTemplateDataRows\", fixedLayout: \"fixedLayout\" }, outputs: { contentChanged: \"contentChanged\" }, host: { properties: { \"class.cdk-table-fixed-layout\": \"fixedLayout\" }, classAttribute: \"cdk-table\" }, providers: [\n        { provide: CDK_TABLE, useExisting: CdkTable },\n        { provide: _VIEW_REPEATER_STRATEGY, useClass: _DisposeViewRepeaterStrategy },\n        { provide: _COALESCED_STYLE_SCHEDULER, useClass: _CoalescedStyleScheduler },\n        // Prevent nested tables from seeing this table's StickyPositioningListener.\n        { provide: STICKY_POSITIONING_LISTENER, useValue: null },\n    ], queries: [{ propertyName: \"_noDataRow\", first: true, predicate: CdkNoDataRow, descendants: true }, { propertyName: \"_contentColumnDefs\", predicate: CdkColumnDef, descendants: true }, { propertyName: \"_contentRowDefs\", predicate: CdkRowDef, descendants: true }, { propertyName: \"_contentHeaderRowDefs\", predicate: CdkHeaderRowDef, descendants: true }, { propertyName: \"_contentFooterRowDefs\", predicate: CdkFooterRowDef, descendants: true }], viewQueries: [{ propertyName: \"_rowOutlet\", first: true, predicate: DataRowOutlet, descendants: true, static: true }, { propertyName: \"_headerRowOutlet\", first: true, predicate: HeaderRowOutlet, descendants: true, static: true }, { propertyName: \"_footerRowOutlet\", first: true, predicate: FooterRowOutlet, descendants: true, static: true }, { propertyName: \"_noDataRowOutlet\", first: true, predicate: NoDataRowOutlet, descendants: true, static: true }], exportAs: [\"cdkTable\"], ngImport: i0, template: \"\\n  <ng-content select=\\\"caption\\\"></ng-content>\\n  <ng-content select=\\\"colgroup, col\\\"></ng-content>\\n  <ng-container headerRowOutlet></ng-container>\\n  <ng-container rowOutlet></ng-container>\\n  <ng-container noDataRowOutlet></ng-container>\\n  <ng-container footerRowOutlet></ng-container>\\n\", isInline: true, styles: [\".cdk-table-fixed-layout{table-layout:fixed}\\n\"], directives: [{ type: HeaderRowOutlet, selector: \"[headerRowOutlet]\" }, { type: DataRowOutlet, selector: \"[rowOutlet]\" }, { type: NoDataRowOutlet, selector: \"[noDataRowOutlet]\" }, { type: FooterRowOutlet, selector: \"[footerRowOutlet]\" }], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CdkTable, decorators: [{\n            type: Component,\n            args: [{ selector: 'cdk-table, table[cdk-table]', exportAs: 'cdkTable', template: CDK_TABLE_TEMPLATE, host: {\n                        'class': 'cdk-table',\n                        '[class.cdk-table-fixed-layout]': 'fixedLayout',\n                    }, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.Default, providers: [\n                        { provide: CDK_TABLE, useExisting: CdkTable },\n                        { provide: _VIEW_REPEATER_STRATEGY, useClass: _DisposeViewRepeaterStrategy },\n                        { provide: _COALESCED_STYLE_SCHEDULER, useClass: _CoalescedStyleScheduler },\n                        // Prevent nested tables from seeing this table's StickyPositioningListener.\n                        { provide: STICKY_POSITIONING_LISTENER, useValue: null },\n                    ], styles: [\".cdk-table-fixed-layout{table-layout:fixed}\\n\"] }]\n        }], ctorParameters: function () {\n        return [{ type: i0.IterableDiffers }, { type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: undefined, decorators: [{\n                        type: Attribute,\n                        args: ['role']\n                    }] }, { type: i1.Directionality, decorators: [{\n                        type: Optional\n                    }] }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [DOCUMENT]\n                    }] }, { type: i2.Platform }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [_VIEW_REPEATER_STRATEGY]\n                    }] }, { type: _CoalescedStyleScheduler, decorators: [{\n                        type: Inject,\n                        args: [_COALESCED_STYLE_SCHEDULER]\n                    }] }, { type: i3.ViewportRuler }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: SkipSelf\n                    }, {\n                        type: Inject,\n                        args: [STICKY_POSITIONING_LISTENER]\n                    }] }];\n    }, propDecorators: { trackBy: [{\n                type: Input\n            }], dataSource: [{\n                type: Input\n            }], multiTemplateDataRows: [{\n                type: Input\n            }], fixedLayout: [{\n                type: Input\n            }], contentChanged: [{\n                type: Output\n            }], _rowOutlet: [{\n                type: ViewChild,\n                args: [DataRowOutlet, { static: true }]\n            }], _headerRowOutlet: [{\n                type: ViewChild,\n                args: [HeaderRowOutlet, { static: true }]\n            }], _footerRowOutlet: [{\n                type: ViewChild,\n                args: [FooterRowOutlet, { static: true }]\n            }], _noDataRowOutlet: [{\n                type: ViewChild,\n                args: [NoDataRowOutlet, { static: true }]\n            }], _contentColumnDefs: [{\n                type: ContentChildren,\n                args: [CdkColumnDef, { descendants: true }]\n            }], _contentRowDefs: [{\n                type: ContentChildren,\n                args: [CdkRowDef, { descendants: true }]\n            }], _contentHeaderRowDefs: [{\n                type: ContentChildren,\n                args: [CdkHeaderRowDef, {\n                        descendants: true,\n                    }]\n            }], _contentFooterRowDefs: [{\n                type: ContentChildren,\n                args: [CdkFooterRowDef, {\n                        descendants: true,\n                    }]\n            }], _noDataRow: [{\n                type: ContentChild,\n                args: [CdkNoDataRow]\n            }] } });\n/** Utility function that gets a merged list of the entries in an array and values of a Set. */\nfunction mergeArrayAndSet(array, set) {\n    return array.concat(Array.from(set));\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Column that simply shows text content for the header and row cells. Assumes that the table\n * is using the native table implementation (`<table>`).\n *\n * By default, the name of this column will be the header text and data property accessor.\n * The header text can be overridden with the `headerText` input. Cell values can be overridden with\n * the `dataAccessor` input. Change the text justification to the start or end using the `justify`\n * input.\n */\nclass CdkTextColumn {\n    constructor(\n    // `CdkTextColumn` is always requiring a table, but we just assert it manually\n    // for better error reporting.\n    // tslint:disable-next-line: lightweight-tokens\n    _table, _options) {\n        this._table = _table;\n        this._options = _options;\n        /** Alignment of the cell values. */\n        this.justify = 'start';\n        this._options = _options || {};\n    }\n    /** Column name that should be used to reference this column. */\n    get name() {\n        return this._name;\n    }\n    set name(name) {\n        this._name = name;\n        // With Ivy, inputs can be initialized before static query results are\n        // available. In that case, we defer the synchronization until \"ngOnInit\" fires.\n        this._syncColumnDefName();\n    }\n    ngOnInit() {\n        this._syncColumnDefName();\n        if (this.headerText === undefined) {\n            this.headerText = this._createDefaultHeaderText();\n        }\n        if (!this.dataAccessor) {\n            this.dataAccessor =\n                this._options.defaultDataAccessor || ((data, name) => data[name]);\n        }\n        if (this._table) {\n            // Provide the cell and headerCell directly to the table with the static `ViewChild` query,\n            // since the columnDef will not pick up its content by the time the table finishes checking\n            // its content and initializing the rows.\n            this.columnDef.cell = this.cell;\n            this.columnDef.headerCell = this.headerCell;\n            this._table.addColumnDef(this.columnDef);\n        }\n        else if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            throw getTableTextColumnMissingParentTableError();\n        }\n    }\n    ngOnDestroy() {\n        if (this._table) {\n            this._table.removeColumnDef(this.columnDef);\n        }\n    }\n    /**\n     * Creates a default header text. Use the options' header text transformation function if one\n     * has been provided. Otherwise simply capitalize the column name.\n     */\n    _createDefaultHeaderText() {\n        const name = this.name;\n        if (!name && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getTableTextColumnMissingNameError();\n        }\n        if (this._options && this._options.defaultHeaderTextTransform) {\n            return this._options.defaultHeaderTextTransform(name);\n        }\n        return name[0].toUpperCase() + name.slice(1);\n    }\n    /** Synchronizes the column definition name with the text column name. */\n    _syncColumnDefName() {\n        if (this.columnDef) {\n            this.columnDef.name = this.name;\n        }\n    }\n}\nCdkTextColumn.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CdkTextColumn, deps: [{ token: CdkTable, optional: true }, { token: TEXT_COLUMN_OPTIONS, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nCdkTextColumn.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: CdkTextColumn, selector: \"cdk-text-column\", inputs: { name: \"name\", headerText: \"headerText\", dataAccessor: \"dataAccessor\", justify: \"justify\" }, viewQueries: [{ propertyName: \"columnDef\", first: true, predicate: CdkColumnDef, descendants: true, static: true }, { propertyName: \"cell\", first: true, predicate: CdkCellDef, descendants: true, static: true }, { propertyName: \"headerCell\", first: true, predicate: CdkHeaderCellDef, descendants: true, static: true }], ngImport: i0, template: `\n    <ng-container cdkColumnDef>\n      <th cdk-header-cell *cdkHeaderCellDef [style.text-align]=\"justify\">\n        {{headerText}}\n      </th>\n      <td cdk-cell *cdkCellDef=\"let data\" [style.text-align]=\"justify\">\n        {{dataAccessor(data, name)}}\n      </td>\n    </ng-container>\n  `, isInline: true, directives: [{ type: CdkColumnDef, selector: \"[cdkColumnDef]\", inputs: [\"sticky\", \"cdkColumnDef\", \"stickyEnd\"] }, { type: CdkHeaderCellDef, selector: \"[cdkHeaderCellDef]\" }, { type: CdkHeaderCell, selector: \"cdk-header-cell, th[cdk-header-cell]\" }, { type: CdkCellDef, selector: \"[cdkCellDef]\" }, { type: CdkCell, selector: \"cdk-cell, td[cdk-cell]\" }], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CdkTextColumn, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'cdk-text-column',\n                    template: `\n    <ng-container cdkColumnDef>\n      <th cdk-header-cell *cdkHeaderCellDef [style.text-align]=\"justify\">\n        {{headerText}}\n      </th>\n      <td cdk-cell *cdkCellDef=\"let data\" [style.text-align]=\"justify\">\n        {{dataAccessor(data, name)}}\n      </td>\n    </ng-container>\n  `,\n                    encapsulation: ViewEncapsulation.None,\n                    // Change detection is intentionally not set to OnPush. This component's template will be provided\n                    // to the table to be inserted into its view. This is problematic when change detection runs since\n                    // the bindings in this template will be evaluated _after_ the table's view is evaluated, which\n                    // mean's the template in the table's view will not have the updated value (and in fact will cause\n                    // an ExpressionChangedAfterItHasBeenCheckedError).\n                    // tslint:disable-next-line:validate-decorators\n                    changeDetection: ChangeDetectionStrategy.Default,\n                }]\n        }], ctorParameters: function () {\n        return [{ type: CdkTable, decorators: [{\n                        type: Optional\n                    }] }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [TEXT_COLUMN_OPTIONS]\n                    }] }];\n    }, propDecorators: { name: [{\n                type: Input\n            }], headerText: [{\n                type: Input\n            }], dataAccessor: [{\n                type: Input\n            }], justify: [{\n                type: Input\n            }], columnDef: [{\n                type: ViewChild,\n                args: [CdkColumnDef, { static: true }]\n            }], cell: [{\n                type: ViewChild,\n                args: [CdkCellDef, { static: true }]\n            }], headerCell: [{\n                type: ViewChild,\n                args: [CdkHeaderCellDef, { static: true }]\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst EXPORTED_DECLARATIONS = [\n    CdkTable,\n    CdkRowDef,\n    CdkCellDef,\n    CdkCellOutlet,\n    CdkHeaderCellDef,\n    CdkFooterCellDef,\n    CdkColumnDef,\n    CdkCell,\n    CdkRow,\n    CdkHeaderCell,\n    CdkFooterCell,\n    CdkHeaderRow,\n    CdkHeaderRowDef,\n    CdkFooterRow,\n    CdkFooterRowDef,\n    DataRowOutlet,\n    HeaderRowOutlet,\n    FooterRowOutlet,\n    CdkTextColumn,\n    CdkNoDataRow,\n    CdkRecycleRows,\n    NoDataRowOutlet,\n];\nclass CdkTableModule {\n}\nCdkTableModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CdkTableModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nCdkTableModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CdkTableModule, declarations: [CdkTable,\n        CdkRowDef,\n        CdkCellDef,\n        CdkCellOutlet,\n        CdkHeaderCellDef,\n        CdkFooterCellDef,\n        CdkColumnDef,\n        CdkCell,\n        CdkRow,\n        CdkHeaderCell,\n        CdkFooterCell,\n        CdkHeaderRow,\n        CdkHeaderRowDef,\n        CdkFooterRow,\n        CdkFooterRowDef,\n        DataRowOutlet,\n        HeaderRowOutlet,\n        FooterRowOutlet,\n        CdkTextColumn,\n        CdkNoDataRow,\n        CdkRecycleRows,\n        NoDataRowOutlet], imports: [ScrollingModule], exports: [CdkTable,\n        CdkRowDef,\n        CdkCellDef,\n        CdkCellOutlet,\n        CdkHeaderCellDef,\n        CdkFooterCellDef,\n        CdkColumnDef,\n        CdkCell,\n        CdkRow,\n        CdkHeaderCell,\n        CdkFooterCell,\n        CdkHeaderRow,\n        CdkHeaderRowDef,\n        CdkFooterRow,\n        CdkFooterRowDef,\n        DataRowOutlet,\n        HeaderRowOutlet,\n        FooterRowOutlet,\n        CdkTextColumn,\n        CdkNoDataRow,\n        CdkRecycleRows,\n        NoDataRowOutlet] });\nCdkTableModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CdkTableModule, imports: [[ScrollingModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CdkTableModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    exports: EXPORTED_DECLARATIONS,\n                    declarations: EXPORTED_DECLARATIONS,\n                    imports: [ScrollingModule],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BaseCdkCell, BaseRowDef, CDK_ROW_TEMPLATE, CDK_TABLE, CDK_TABLE_TEMPLATE, CdkCell, CdkCellDef, CdkCellOutlet, CdkColumnDef, CdkFooterCell, CdkFooterCellDef, CdkFooterRow, CdkFooterRowDef, CdkHeaderCell, CdkHeaderCellDef, CdkHeaderRow, CdkHeaderRowDef, CdkNoDataRow, CdkRecycleRows, CdkRow, CdkRowDef, CdkTable, CdkTableModule, CdkTextColumn, DataRowOutlet, FooterRowOutlet, HeaderRowOutlet, NoDataRowOutlet, STICKY_DIRECTIONS, STICKY_POSITIONING_LISTENER, StickyStyler, TEXT_COLUMN_OPTIONS, _COALESCED_STYLE_SCHEDULER, _CoalescedStyleScheduler, _Schedule, mixinHasStickyInput };\n","import * as i1 from '@angular/cdk/platform';\nimport { normalizePassiveListenerOptions, PlatformModule } from '@angular/cdk/platform';\nimport * as i0 from '@angular/core';\nimport { Injectable, EventEmitter, Directive, Output, Optional, Inject, Input, NgModule } from '@angular/core';\nimport { coerceElement, coerceNumberProperty, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { EMPTY, Subject, fromEvent } from 'rxjs';\nimport { auditTime, takeUntil } from 'rxjs/operators';\nimport { DOCUMENT } from '@angular/common';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Options to pass to the animationstart listener. */\nconst listenerOptions = normalizePassiveListenerOptions({ passive: true });\n/**\n * An injectable service that can be used to monitor the autofill state of an input.\n * Based on the following blog post:\n * https://medium.com/@brunn/detecting-autofilled-fields-in-javascript-aed598d25da7\n */\nclass AutofillMonitor {\n    constructor(_platform, _ngZone) {\n        this._platform = _platform;\n        this._ngZone = _ngZone;\n        this._monitoredElements = new Map();\n    }\n    monitor(elementOrRef) {\n        if (!this._platform.isBrowser) {\n            return EMPTY;\n        }\n        const element = coerceElement(elementOrRef);\n        const info = this._monitoredElements.get(element);\n        if (info) {\n            return info.subject;\n        }\n        const result = new Subject();\n        const cssClass = 'cdk-text-field-autofilled';\n        const listener = ((event) => {\n            // Animation events fire on initial element render, we check for the presence of the autofill\n            // CSS class to make sure this is a real change in state, not just the initial render before\n            // we fire off events.\n            if (event.animationName === 'cdk-text-field-autofill-start' &&\n                !element.classList.contains(cssClass)) {\n                element.classList.add(cssClass);\n                this._ngZone.run(() => result.next({ target: event.target, isAutofilled: true }));\n            }\n            else if (event.animationName === 'cdk-text-field-autofill-end' &&\n                element.classList.contains(cssClass)) {\n                element.classList.remove(cssClass);\n                this._ngZone.run(() => result.next({ target: event.target, isAutofilled: false }));\n            }\n        });\n        this._ngZone.runOutsideAngular(() => {\n            element.addEventListener('animationstart', listener, listenerOptions);\n            element.classList.add('cdk-text-field-autofill-monitored');\n        });\n        this._monitoredElements.set(element, {\n            subject: result,\n            unlisten: () => {\n                element.removeEventListener('animationstart', listener, listenerOptions);\n            },\n        });\n        return result;\n    }\n    stopMonitoring(elementOrRef) {\n        const element = coerceElement(elementOrRef);\n        const info = this._monitoredElements.get(element);\n        if (info) {\n            info.unlisten();\n            info.subject.complete();\n            element.classList.remove('cdk-text-field-autofill-monitored');\n            element.classList.remove('cdk-text-field-autofilled');\n            this._monitoredElements.delete(element);\n        }\n    }\n    ngOnDestroy() {\n        this._monitoredElements.forEach((_info, element) => this.stopMonitoring(element));\n    }\n}\nAutofillMonitor.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: AutofillMonitor, deps: [{ token: i1.Platform }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Injectable });\nAutofillMonitor.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: AutofillMonitor, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: AutofillMonitor, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: i1.Platform }, { type: i0.NgZone }]; } });\n/** A directive that can be used to monitor the autofill state of an input. */\nclass CdkAutofill {\n    constructor(_elementRef, _autofillMonitor) {\n        this._elementRef = _elementRef;\n        this._autofillMonitor = _autofillMonitor;\n        /** Emits when the autofill state of the element changes. */\n        this.cdkAutofill = new EventEmitter();\n    }\n    ngOnInit() {\n        this._autofillMonitor\n            .monitor(this._elementRef)\n            .subscribe(event => this.cdkAutofill.emit(event));\n    }\n    ngOnDestroy() {\n        this._autofillMonitor.stopMonitoring(this._elementRef);\n    }\n}\nCdkAutofill.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CdkAutofill, deps: [{ token: i0.ElementRef }, { token: AutofillMonitor }], target: i0.ɵɵFactoryTarget.Directive });\nCdkAutofill.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: CdkAutofill, selector: \"[cdkAutofill]\", outputs: { cdkAutofill: \"cdkAutofill\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CdkAutofill, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkAutofill]',\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: AutofillMonitor }]; }, propDecorators: { cdkAutofill: [{\n                type: Output\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Directive to automatically resize a textarea to fit its content. */\nclass CdkTextareaAutosize {\n    constructor(_elementRef, _platform, _ngZone, \n    /** @breaking-change 11.0.0 make document required */\n    document) {\n        this._elementRef = _elementRef;\n        this._platform = _platform;\n        this._ngZone = _ngZone;\n        this._destroyed = new Subject();\n        this._enabled = true;\n        /**\n         * Value of minRows as of last resize. If the minRows has decreased, the\n         * height of the textarea needs to be recomputed to reflect the new minimum. The maxHeight\n         * does not have the same problem because it does not affect the textarea's scrollHeight.\n         */\n        this._previousMinRows = -1;\n        this._isViewInited = false;\n        /** Handles `focus` and `blur` events. */\n        this._handleFocusEvent = (event) => {\n            this._hasFocus = event.type === 'focus';\n        };\n        this._document = document;\n        this._textareaElement = this._elementRef.nativeElement;\n    }\n    /** Minimum amount of rows in the textarea. */\n    get minRows() {\n        return this._minRows;\n    }\n    set minRows(value) {\n        this._minRows = coerceNumberProperty(value);\n        this._setMinHeight();\n    }\n    /** Maximum amount of rows in the textarea. */\n    get maxRows() {\n        return this._maxRows;\n    }\n    set maxRows(value) {\n        this._maxRows = coerceNumberProperty(value);\n        this._setMaxHeight();\n    }\n    /** Whether autosizing is enabled or not */\n    get enabled() {\n        return this._enabled;\n    }\n    set enabled(value) {\n        value = coerceBooleanProperty(value);\n        // Only act if the actual value changed. This specifically helps to not run\n        // resizeToFitContent too early (i.e. before ngAfterViewInit)\n        if (this._enabled !== value) {\n            (this._enabled = value) ? this.resizeToFitContent(true) : this.reset();\n        }\n    }\n    get placeholder() {\n        return this._textareaElement.placeholder;\n    }\n    set placeholder(value) {\n        this._cachedPlaceholderHeight = undefined;\n        this._textareaElement.placeholder = value;\n        this._cacheTextareaPlaceholderHeight();\n    }\n    /** Sets the minimum height of the textarea as determined by minRows. */\n    _setMinHeight() {\n        const minHeight = this.minRows && this._cachedLineHeight ? `${this.minRows * this._cachedLineHeight}px` : null;\n        if (minHeight) {\n            this._textareaElement.style.minHeight = minHeight;\n        }\n    }\n    /** Sets the maximum height of the textarea as determined by maxRows. */\n    _setMaxHeight() {\n        const maxHeight = this.maxRows && this._cachedLineHeight ? `${this.maxRows * this._cachedLineHeight}px` : null;\n        if (maxHeight) {\n            this._textareaElement.style.maxHeight = maxHeight;\n        }\n    }\n    ngAfterViewInit() {\n        if (this._platform.isBrowser) {\n            // Remember the height which we started with in case autosizing is disabled\n            this._initialHeight = this._textareaElement.style.height;\n            this.resizeToFitContent();\n            this._ngZone.runOutsideAngular(() => {\n                const window = this._getWindow();\n                fromEvent(window, 'resize')\n                    .pipe(auditTime(16), takeUntil(this._destroyed))\n                    .subscribe(() => this.resizeToFitContent(true));\n                this._textareaElement.addEventListener('focus', this._handleFocusEvent);\n                this._textareaElement.addEventListener('blur', this._handleFocusEvent);\n            });\n            this._isViewInited = true;\n            this.resizeToFitContent(true);\n        }\n    }\n    ngOnDestroy() {\n        this._textareaElement.removeEventListener('focus', this._handleFocusEvent);\n        this._textareaElement.removeEventListener('blur', this._handleFocusEvent);\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /**\n     * Cache the height of a single-row textarea if it has not already been cached.\n     *\n     * We need to know how large a single \"row\" of a textarea is in order to apply minRows and\n     * maxRows. For the initial version, we will assume that the height of a single line in the\n     * textarea does not ever change.\n     */\n    _cacheTextareaLineHeight() {\n        if (this._cachedLineHeight) {\n            return;\n        }\n        // Use a clone element because we have to override some styles.\n        let textareaClone = this._textareaElement.cloneNode(false);\n        textareaClone.rows = 1;\n        // Use `position: absolute` so that this doesn't cause a browser layout and use\n        // `visibility: hidden` so that nothing is rendered. Clear any other styles that\n        // would affect the height.\n        textareaClone.style.position = 'absolute';\n        textareaClone.style.visibility = 'hidden';\n        textareaClone.style.border = 'none';\n        textareaClone.style.padding = '0';\n        textareaClone.style.height = '';\n        textareaClone.style.minHeight = '';\n        textareaClone.style.maxHeight = '';\n        // In Firefox it happens that textarea elements are always bigger than the specified amount\n        // of rows. This is because Firefox tries to add extra space for the horizontal scrollbar.\n        // As a workaround that removes the extra space for the scrollbar, we can just set overflow\n        // to hidden. This ensures that there is no invalid calculation of the line height.\n        // See Firefox bug report: https://bugzilla.mozilla.org/show_bug.cgi?id=33654\n        textareaClone.style.overflow = 'hidden';\n        this._textareaElement.parentNode.appendChild(textareaClone);\n        this._cachedLineHeight = textareaClone.clientHeight;\n        textareaClone.remove();\n        // Min and max heights have to be re-calculated if the cached line height changes\n        this._setMinHeight();\n        this._setMaxHeight();\n    }\n    _measureScrollHeight() {\n        const element = this._textareaElement;\n        const previousMargin = element.style.marginBottom || '';\n        const isFirefox = this._platform.FIREFOX;\n        const needsMarginFiller = isFirefox && this._hasFocus;\n        const measuringClass = isFirefox\n            ? 'cdk-textarea-autosize-measuring-firefox'\n            : 'cdk-textarea-autosize-measuring';\n        // In some cases the page might move around while we're measuring the `textarea` on Firefox. We\n        // work around it by assigning a temporary margin with the same height as the `textarea` so that\n        // it occupies the same amount of space. See #23233.\n        if (needsMarginFiller) {\n            element.style.marginBottom = `${element.clientHeight}px`;\n        }\n        // Reset the textarea height to auto in order to shrink back to its default size.\n        // Also temporarily force overflow:hidden, so scroll bars do not interfere with calculations.\n        element.classList.add(measuringClass);\n        // The measuring class includes a 2px padding to workaround an issue with Chrome,\n        // so we account for that extra space here by subtracting 4 (2px top + 2px bottom).\n        const scrollHeight = element.scrollHeight - 4;\n        element.classList.remove(measuringClass);\n        if (needsMarginFiller) {\n            element.style.marginBottom = previousMargin;\n        }\n        return scrollHeight;\n    }\n    _cacheTextareaPlaceholderHeight() {\n        if (!this._isViewInited || this._cachedPlaceholderHeight != undefined) {\n            return;\n        }\n        if (!this.placeholder) {\n            this._cachedPlaceholderHeight = 0;\n            return;\n        }\n        const value = this._textareaElement.value;\n        this._textareaElement.value = this._textareaElement.placeholder;\n        this._cachedPlaceholderHeight = this._measureScrollHeight();\n        this._textareaElement.value = value;\n    }\n    ngDoCheck() {\n        if (this._platform.isBrowser) {\n            this.resizeToFitContent();\n        }\n    }\n    /**\n     * Resize the textarea to fit its content.\n     * @param force Whether to force a height recalculation. By default the height will be\n     *    recalculated only if the value changed since the last call.\n     */\n    resizeToFitContent(force = false) {\n        // If autosizing is disabled, just skip everything else\n        if (!this._enabled) {\n            return;\n        }\n        this._cacheTextareaLineHeight();\n        this._cacheTextareaPlaceholderHeight();\n        // If we haven't determined the line-height yet, we know we're still hidden and there's no point\n        // in checking the height of the textarea.\n        if (!this._cachedLineHeight) {\n            return;\n        }\n        const textarea = this._elementRef.nativeElement;\n        const value = textarea.value;\n        // Only resize if the value or minRows have changed since these calculations can be expensive.\n        if (!force && this._minRows === this._previousMinRows && value === this._previousValue) {\n            return;\n        }\n        const scrollHeight = this._measureScrollHeight();\n        const height = Math.max(scrollHeight, this._cachedPlaceholderHeight || 0);\n        // Use the scrollHeight to know how large the textarea *would* be if fit its entire value.\n        textarea.style.height = `${height}px`;\n        this._ngZone.runOutsideAngular(() => {\n            if (typeof requestAnimationFrame !== 'undefined') {\n                requestAnimationFrame(() => this._scrollToCaretPosition(textarea));\n            }\n            else {\n                setTimeout(() => this._scrollToCaretPosition(textarea));\n            }\n        });\n        this._previousValue = value;\n        this._previousMinRows = this._minRows;\n    }\n    /**\n     * Resets the textarea to its original size\n     */\n    reset() {\n        // Do not try to change the textarea, if the initialHeight has not been determined yet\n        // This might potentially remove styles when reset() is called before ngAfterViewInit\n        if (this._initialHeight !== undefined) {\n            this._textareaElement.style.height = this._initialHeight;\n        }\n    }\n    _noopInputHandler() {\n        // no-op handler that ensures we're running change detection on input events.\n    }\n    /** Access injected document if available or fallback to global document reference */\n    _getDocument() {\n        return this._document || document;\n    }\n    /** Use defaultView of injected document if available or fallback to global window reference */\n    _getWindow() {\n        const doc = this._getDocument();\n        return doc.defaultView || window;\n    }\n    /**\n     * Scrolls a textarea to the caret position. On Firefox resizing the textarea will\n     * prevent it from scrolling to the caret position. We need to re-set the selection\n     * in order for it to scroll to the proper position.\n     */\n    _scrollToCaretPosition(textarea) {\n        const { selectionStart, selectionEnd } = textarea;\n        // IE will throw an \"Unspecified error\" if we try to set the selection range after the\n        // element has been removed from the DOM. Assert that the directive hasn't been destroyed\n        // between the time we requested the animation frame and when it was executed.\n        // Also note that we have to assert that the textarea is focused before we set the\n        // selection range. Setting the selection range on a non-focused textarea will cause\n        // it to receive focus on IE and Edge.\n        if (!this._destroyed.isStopped && this._hasFocus) {\n            textarea.setSelectionRange(selectionStart, selectionEnd);\n        }\n    }\n}\nCdkTextareaAutosize.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CdkTextareaAutosize, deps: [{ token: i0.ElementRef }, { token: i1.Platform }, { token: i0.NgZone }, { token: DOCUMENT, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nCdkTextareaAutosize.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: CdkTextareaAutosize, selector: \"textarea[cdkTextareaAutosize]\", inputs: { minRows: [\"cdkAutosizeMinRows\", \"minRows\"], maxRows: [\"cdkAutosizeMaxRows\", \"maxRows\"], enabled: [\"cdkTextareaAutosize\", \"enabled\"], placeholder: \"placeholder\" }, host: { attributes: { \"rows\": \"1\" }, listeners: { \"input\": \"_noopInputHandler()\" }, classAttribute: \"cdk-textarea-autosize\" }, exportAs: [\"cdkTextareaAutosize\"], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: CdkTextareaAutosize, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'textarea[cdkTextareaAutosize]',\n                    exportAs: 'cdkTextareaAutosize',\n                    host: {\n                        'class': 'cdk-textarea-autosize',\n                        // Textarea elements that have the directive applied should have a single row by default.\n                        // Browsers normally show two rows by default and therefore this limits the minRows binding.\n                        'rows': '1',\n                        '(input)': '_noopInputHandler()',\n                    },\n                }]\n        }], ctorParameters: function () {\n        return [{ type: i0.ElementRef }, { type: i1.Platform }, { type: i0.NgZone }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [DOCUMENT]\n                    }] }];\n    }, propDecorators: { minRows: [{\n                type: Input,\n                args: ['cdkAutosizeMinRows']\n            }], maxRows: [{\n                type: Input,\n                args: ['cdkAutosizeMaxRows']\n            }], enabled: [{\n                type: Input,\n                args: ['cdkTextareaAutosize']\n            }], placeholder: [{\n                type: Input\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass TextFieldModule {\n}\nTextFieldModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: TextFieldModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nTextFieldModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: TextFieldModule, declarations: [CdkAutofill, CdkTextareaAutosize], imports: [PlatformModule], exports: [CdkAutofill, CdkTextareaAutosize] });\nTextFieldModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: TextFieldModule, imports: [[PlatformModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: TextFieldModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [CdkAutofill, CdkTextareaAutosize],\n                    imports: [PlatformModule],\n                    exports: [CdkAutofill, CdkTextareaAutosize],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AutofillMonitor, CdkAutofill, CdkTextareaAutosize, TextFieldModule };\n","import * as i1$1 from '@angular/cdk/overlay';\nimport { Overlay, OverlayConfig, OverlayModule } from '@angular/cdk/overlay';\nimport * as i3 from '@angular/cdk/portal';\nimport { BasePortalOutlet, CdkPortalOutlet, ComponentPortal, TemplatePortal, PortalModule } from '@angular/cdk/portal';\nimport * as i0 from '@angular/core';\nimport { EventEmitter, Directive, Optional, Inject, ViewChild, Component, ViewEncapsulation, ChangeDetectionStrategy, InjectionToken, Injector, TemplateRef, InjectFlags, Injectable, SkipSelf, Input, NgModule } from '@angular/core';\nimport { MatCommonModule } from '@angular/material/core';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { Subject, defer, Subscription, of } from 'rxjs';\nimport { filter, take, startWith } from 'rxjs/operators';\nimport { _getFocusedElementPierceShadowDom } from '@angular/cdk/platform';\nimport * as i2 from '@angular/common';\nimport { DOCUMENT } from '@angular/common';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport * as i1 from '@angular/cdk/a11y';\nimport { ESCAPE, hasModifierKey } from '@angular/cdk/keycodes';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Configuration for opening a modal dialog with the MatDialog service.\n */\nclass MatDialogConfig {\n    constructor() {\n        /** The ARIA role of the dialog element. */\n        this.role = 'dialog';\n        /** Custom class for the overlay pane. */\n        this.panelClass = '';\n        /** Whether the dialog has a backdrop. */\n        this.hasBackdrop = true;\n        /** Custom class for the backdrop. */\n        this.backdropClass = '';\n        /** Whether the user can use escape or clicking on the backdrop to close the modal. */\n        this.disableClose = false;\n        /** Width of the dialog. */\n        this.width = '';\n        /** Height of the dialog. */\n        this.height = '';\n        /** Max-width of the dialog. If a number is provided, assumes pixel units. Defaults to 80vw. */\n        this.maxWidth = '80vw';\n        /** Data being injected into the child component. */\n        this.data = null;\n        /** ID of the element that describes the dialog. */\n        this.ariaDescribedBy = null;\n        /** ID of the element that labels the dialog. */\n        this.ariaLabelledBy = null;\n        /** Aria label to assign to the dialog element. */\n        this.ariaLabel = null;\n        /**\n         * Where the dialog should focus on open.\n         * @breaking-change 14.0.0 Remove boolean option from autoFocus. Use string or\n         * AutoFocusTarget instead.\n         */\n        this.autoFocus = 'first-tabbable';\n        /**\n         * Whether the dialog should restore focus to the\n         * previously-focused element, after it's closed.\n         */\n        this.restoreFocus = true;\n        /**\n         * Whether the dialog should close when the user goes backwards/forwards in history.\n         * Note that this usually doesn't include clicking on links (unless the user is using\n         * the `HashLocationStrategy`).\n         */\n        this.closeOnNavigation = true;\n        // TODO(jelbourn): add configuration for lifecycle hooks, ARIA labelling.\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Animations used by MatDialog.\n * @docs-private\n */\nconst matDialogAnimations = {\n    /** Animation that is applied on the dialog container by default. */\n    dialogContainer: trigger('dialogContainer', [\n        // Note: The `enter` animation transitions to `transform: none`, because for some reason\n        // specifying the transform explicitly, causes IE both to blur the dialog content and\n        // decimate the animation performance. Leaving it as `none` solves both issues.\n        state('void, exit', style({ opacity: 0, transform: 'scale(0.7)' })),\n        state('enter', style({ transform: 'none' })),\n        transition('* => enter', animate('150ms cubic-bezier(0, 0, 0.2, 1)', style({ transform: 'none', opacity: 1 }))),\n        transition('* => void, * => exit', animate('75ms cubic-bezier(0.4, 0.0, 0.2, 1)', style({ opacity: 0 }))),\n    ]),\n};\n\n/**\n * Throws an exception for the case when a ComponentPortal is\n * attached to a DomPortalOutlet without an origin.\n * @docs-private\n */\nfunction throwMatDialogContentAlreadyAttachedError() {\n    throw Error('Attempting to attach dialog content after content is already attached');\n}\n/**\n * Base class for the `MatDialogContainer`. The base class does not implement\n * animations as these are left to implementers of the dialog container.\n */\nclass _MatDialogContainerBase extends BasePortalOutlet {\n    constructor(_elementRef, _focusTrapFactory, _changeDetectorRef, _document, \n    /** The dialog configuration. */\n    _config, _interactivityChecker, _ngZone, _focusMonitor) {\n        super();\n        this._elementRef = _elementRef;\n        this._focusTrapFactory = _focusTrapFactory;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._config = _config;\n        this._interactivityChecker = _interactivityChecker;\n        this._ngZone = _ngZone;\n        this._focusMonitor = _focusMonitor;\n        /** Emits when an animation state changes. */\n        this._animationStateChanged = new EventEmitter();\n        /** Element that was focused before the dialog was opened. Save this to restore upon close. */\n        this._elementFocusedBeforeDialogWasOpened = null;\n        /**\n         * Type of interaction that led to the dialog being closed. This is used to determine\n         * whether the focus style will be applied when returning focus to its original location\n         * after the dialog is closed.\n         */\n        this._closeInteractionType = null;\n        /**\n         * Attaches a DOM portal to the dialog container.\n         * @param portal Portal to be attached.\n         * @deprecated To be turned into a method.\n         * @breaking-change 10.0.0\n         */\n        this.attachDomPortal = (portal) => {\n            if (this._portalOutlet.hasAttached() && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throwMatDialogContentAlreadyAttachedError();\n            }\n            return this._portalOutlet.attachDomPortal(portal);\n        };\n        this._ariaLabelledBy = _config.ariaLabelledBy || null;\n        this._document = _document;\n    }\n    /** Initializes the dialog container with the attached content. */\n    _initializeWithAttachedContent() {\n        this._setupFocusTrap();\n        // Save the previously focused element. This element will be re-focused\n        // when the dialog closes.\n        this._capturePreviouslyFocusedElement();\n    }\n    /**\n     * Attach a ComponentPortal as content to this dialog container.\n     * @param portal Portal to be attached as the dialog content.\n     */\n    attachComponentPortal(portal) {\n        if (this._portalOutlet.hasAttached() && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throwMatDialogContentAlreadyAttachedError();\n        }\n        return this._portalOutlet.attachComponentPortal(portal);\n    }\n    /**\n     * Attach a TemplatePortal as content to this dialog container.\n     * @param portal Portal to be attached as the dialog content.\n     */\n    attachTemplatePortal(portal) {\n        if (this._portalOutlet.hasAttached() && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throwMatDialogContentAlreadyAttachedError();\n        }\n        return this._portalOutlet.attachTemplatePortal(portal);\n    }\n    /** Moves focus back into the dialog if it was moved out. */\n    _recaptureFocus() {\n        if (!this._containsFocus()) {\n            this._trapFocus();\n        }\n    }\n    /**\n     * Focuses the provided element. If the element is not focusable, it will add a tabIndex\n     * attribute to forcefully focus it. The attribute is removed after focus is moved.\n     * @param element The element to focus.\n     */\n    _forceFocus(element, options) {\n        if (!this._interactivityChecker.isFocusable(element)) {\n            element.tabIndex = -1;\n            // The tabindex attribute should be removed to avoid navigating to that element again\n            this._ngZone.runOutsideAngular(() => {\n                element.addEventListener('blur', () => element.removeAttribute('tabindex'));\n                element.addEventListener('mousedown', () => element.removeAttribute('tabindex'));\n            });\n        }\n        element.focus(options);\n    }\n    /**\n     * Focuses the first element that matches the given selector within the focus trap.\n     * @param selector The CSS selector for the element to set focus to.\n     */\n    _focusByCssSelector(selector, options) {\n        let elementToFocus = this._elementRef.nativeElement.querySelector(selector);\n        if (elementToFocus) {\n            this._forceFocus(elementToFocus, options);\n        }\n    }\n    /**\n     * Moves the focus inside the focus trap. When autoFocus is not set to 'dialog', if focus\n     * cannot be moved then focus will go to the dialog container.\n     */\n    _trapFocus() {\n        const element = this._elementRef.nativeElement;\n        // If were to attempt to focus immediately, then the content of the dialog would not yet be\n        // ready in instances where change detection has to run first. To deal with this, we simply\n        // wait for the microtask queue to be empty when setting focus when autoFocus isn't set to\n        // dialog. If the element inside the dialog can't be focused, then the container is focused\n        // so the user can't tab into other elements behind it.\n        switch (this._config.autoFocus) {\n            case false:\n            case 'dialog':\n                // Ensure that focus is on the dialog container. It's possible that a different\n                // component tried to move focus while the open animation was running. See:\n                // https://github.com/angular/components/issues/16215. Note that we only want to do this\n                // if the focus isn't inside the dialog already, because it's possible that the consumer\n                // turned off `autoFocus` in order to move focus themselves.\n                if (!this._containsFocus()) {\n                    element.focus();\n                }\n                break;\n            case true:\n            case 'first-tabbable':\n                this._focusTrap.focusInitialElementWhenReady().then(focusedSuccessfully => {\n                    // If we weren't able to find a focusable element in the dialog, then focus the dialog\n                    // container instead.\n                    if (!focusedSuccessfully) {\n                        this._focusDialogContainer();\n                    }\n                });\n                break;\n            case 'first-heading':\n                this._focusByCssSelector('h1, h2, h3, h4, h5, h6, [role=\"heading\"]');\n                break;\n            default:\n                this._focusByCssSelector(this._config.autoFocus);\n                break;\n        }\n    }\n    /** Restores focus to the element that was focused before the dialog opened. */\n    _restoreFocus() {\n        const previousElement = this._elementFocusedBeforeDialogWasOpened;\n        // We need the extra check, because IE can set the `activeElement` to null in some cases.\n        if (this._config.restoreFocus &&\n            previousElement &&\n            typeof previousElement.focus === 'function') {\n            const activeElement = _getFocusedElementPierceShadowDom();\n            const element = this._elementRef.nativeElement;\n            // Make sure that focus is still inside the dialog or is on the body (usually because a\n            // non-focusable element like the backdrop was clicked) before moving it. It's possible that\n            // the consumer moved it themselves before the animation was done, in which case we shouldn't\n            // do anything.\n            if (!activeElement ||\n                activeElement === this._document.body ||\n                activeElement === element ||\n                element.contains(activeElement)) {\n                if (this._focusMonitor) {\n                    this._focusMonitor.focusVia(previousElement, this._closeInteractionType);\n                    this._closeInteractionType = null;\n                }\n                else {\n                    previousElement.focus();\n                }\n            }\n        }\n        if (this._focusTrap) {\n            this._focusTrap.destroy();\n        }\n    }\n    /** Sets up the focus trap. */\n    _setupFocusTrap() {\n        this._focusTrap = this._focusTrapFactory.create(this._elementRef.nativeElement);\n    }\n    /** Captures the element that was focused before the dialog was opened. */\n    _capturePreviouslyFocusedElement() {\n        if (this._document) {\n            this._elementFocusedBeforeDialogWasOpened = _getFocusedElementPierceShadowDom();\n        }\n    }\n    /** Focuses the dialog container. */\n    _focusDialogContainer() {\n        // Note that there is no focus method when rendering on the server.\n        if (this._elementRef.nativeElement.focus) {\n            this._elementRef.nativeElement.focus();\n        }\n    }\n    /** Returns whether focus is inside the dialog. */\n    _containsFocus() {\n        const element = this._elementRef.nativeElement;\n        const activeElement = _getFocusedElementPierceShadowDom();\n        return element === activeElement || element.contains(activeElement);\n    }\n}\n_MatDialogContainerBase.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: _MatDialogContainerBase, deps: [{ token: i0.ElementRef }, { token: i1.FocusTrapFactory }, { token: i0.ChangeDetectorRef }, { token: DOCUMENT, optional: true }, { token: MatDialogConfig }, { token: i1.InteractivityChecker }, { token: i0.NgZone }, { token: i1.FocusMonitor }], target: i0.ɵɵFactoryTarget.Directive });\n_MatDialogContainerBase.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: _MatDialogContainerBase, viewQueries: [{ propertyName: \"_portalOutlet\", first: true, predicate: CdkPortalOutlet, descendants: true, static: true }], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: _MatDialogContainerBase, decorators: [{\n            type: Directive\n        }], ctorParameters: function () {\n        return [{ type: i0.ElementRef }, { type: i1.FocusTrapFactory }, { type: i0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [DOCUMENT]\n                    }] }, { type: MatDialogConfig }, { type: i1.InteractivityChecker }, { type: i0.NgZone }, { type: i1.FocusMonitor }];\n    }, propDecorators: { _portalOutlet: [{\n                type: ViewChild,\n                args: [CdkPortalOutlet, { static: true }]\n            }] } });\n/**\n * Internal component that wraps user-provided dialog content.\n * Animation is based on https://material.io/guidelines/motion/choreography.html.\n * @docs-private\n */\nclass MatDialogContainer extends _MatDialogContainerBase {\n    constructor() {\n        super(...arguments);\n        /** State of the dialog animation. */\n        this._state = 'enter';\n    }\n    /** Callback, invoked whenever an animation on the host completes. */\n    _onAnimationDone({ toState, totalTime }) {\n        if (toState === 'enter') {\n            this._trapFocus();\n            this._animationStateChanged.next({ state: 'opened', totalTime });\n        }\n        else if (toState === 'exit') {\n            this._restoreFocus();\n            this._animationStateChanged.next({ state: 'closed', totalTime });\n        }\n    }\n    /** Callback, invoked when an animation on the host starts. */\n    _onAnimationStart({ toState, totalTime }) {\n        if (toState === 'enter') {\n            this._animationStateChanged.next({ state: 'opening', totalTime });\n        }\n        else if (toState === 'exit' || toState === 'void') {\n            this._animationStateChanged.next({ state: 'closing', totalTime });\n        }\n    }\n    /** Starts the dialog exit animation. */\n    _startExitAnimation() {\n        this._state = 'exit';\n        // Mark the container for check so it can react if the\n        // view container is using OnPush change detection.\n        this._changeDetectorRef.markForCheck();\n    }\n}\nMatDialogContainer.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatDialogContainer, deps: null, target: i0.ɵɵFactoryTarget.Component });\nMatDialogContainer.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatDialogContainer, selector: \"mat-dialog-container\", host: { attributes: { \"tabindex\": \"-1\", \"aria-modal\": \"true\" }, listeners: { \"@dialogContainer.start\": \"_onAnimationStart($event)\", \"@dialogContainer.done\": \"_onAnimationDone($event)\" }, properties: { \"id\": \"_id\", \"attr.role\": \"_config.role\", \"attr.aria-labelledby\": \"_config.ariaLabel ? null : _ariaLabelledBy\", \"attr.aria-label\": \"_config.ariaLabel\", \"attr.aria-describedby\": \"_config.ariaDescribedBy || null\", \"@dialogContainer\": \"_state\" }, classAttribute: \"mat-dialog-container\" }, usesInheritance: true, ngImport: i0, template: \"<ng-template cdkPortalOutlet></ng-template>\\n\", styles: [\".mat-dialog-container{display:block;padding:24px;border-radius:4px;box-sizing:border-box;overflow:auto;outline:0;width:100%;height:100%;min-height:inherit;max-height:inherit}.cdk-high-contrast-active .mat-dialog-container{outline:solid 1px}.mat-dialog-content{display:block;margin:0 -24px;padding:0 24px;max-height:65vh;overflow:auto;-webkit-overflow-scrolling:touch}.mat-dialog-title{margin:0 0 20px;display:block}.mat-dialog-actions{padding:8px 0;display:flex;flex-wrap:wrap;min-height:52px;align-items:center;box-sizing:content-box;margin-bottom:-24px}.mat-dialog-actions[align=end]{justify-content:flex-end}.mat-dialog-actions[align=center]{justify-content:center}.mat-dialog-actions .mat-button-base+.mat-button-base,.mat-dialog-actions .mat-mdc-button-base+.mat-mdc-button-base{margin-left:8px}[dir=rtl] .mat-dialog-actions .mat-button-base+.mat-button-base,[dir=rtl] .mat-dialog-actions .mat-mdc-button-base+.mat-mdc-button-base{margin-left:0;margin-right:8px}\\n\"], directives: [{ type: i3.CdkPortalOutlet, selector: \"[cdkPortalOutlet]\", inputs: [\"cdkPortalOutlet\"], outputs: [\"attached\"], exportAs: [\"cdkPortalOutlet\"] }], animations: [matDialogAnimations.dialogContainer], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatDialogContainer, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-dialog-container', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.Default, animations: [matDialogAnimations.dialogContainer], host: {\n                        'class': 'mat-dialog-container',\n                        'tabindex': '-1',\n                        'aria-modal': 'true',\n                        '[id]': '_id',\n                        '[attr.role]': '_config.role',\n                        '[attr.aria-labelledby]': '_config.ariaLabel ? null : _ariaLabelledBy',\n                        '[attr.aria-label]': '_config.ariaLabel',\n                        '[attr.aria-describedby]': '_config.ariaDescribedBy || null',\n                        '[@dialogContainer]': '_state',\n                        '(@dialogContainer.start)': '_onAnimationStart($event)',\n                        '(@dialogContainer.done)': '_onAnimationDone($event)',\n                    }, template: \"<ng-template cdkPortalOutlet></ng-template>\\n\", styles: [\".mat-dialog-container{display:block;padding:24px;border-radius:4px;box-sizing:border-box;overflow:auto;outline:0;width:100%;height:100%;min-height:inherit;max-height:inherit}.cdk-high-contrast-active .mat-dialog-container{outline:solid 1px}.mat-dialog-content{display:block;margin:0 -24px;padding:0 24px;max-height:65vh;overflow:auto;-webkit-overflow-scrolling:touch}.mat-dialog-title{margin:0 0 20px;display:block}.mat-dialog-actions{padding:8px 0;display:flex;flex-wrap:wrap;min-height:52px;align-items:center;box-sizing:content-box;margin-bottom:-24px}.mat-dialog-actions[align=end]{justify-content:flex-end}.mat-dialog-actions[align=center]{justify-content:center}.mat-dialog-actions .mat-button-base+.mat-button-base,.mat-dialog-actions .mat-mdc-button-base+.mat-mdc-button-base{margin-left:8px}[dir=rtl] .mat-dialog-actions .mat-button-base+.mat-button-base,[dir=rtl] .mat-dialog-actions .mat-mdc-button-base+.mat-mdc-button-base{margin-left:0;margin-right:8px}\\n\"] }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// TODO(jelbourn): resizing\n// Counter for unique dialog ids.\nlet uniqueId = 0;\n/**\n * Reference to a dialog opened via the MatDialog service.\n */\nclass MatDialogRef {\n    constructor(_overlayRef, _containerInstance, \n    /** Id of the dialog. */\n    id = `mat-dialog-${uniqueId++}`) {\n        this._overlayRef = _overlayRef;\n        this._containerInstance = _containerInstance;\n        this.id = id;\n        /** Whether the user is allowed to close the dialog. */\n        this.disableClose = this._containerInstance._config.disableClose;\n        /** Subject for notifying the user that the dialog has finished opening. */\n        this._afterOpened = new Subject();\n        /** Subject for notifying the user that the dialog has finished closing. */\n        this._afterClosed = new Subject();\n        /** Subject for notifying the user that the dialog has started closing. */\n        this._beforeClosed = new Subject();\n        /** Current state of the dialog. */\n        this._state = 0 /* OPEN */;\n        // Pass the id along to the container.\n        _containerInstance._id = id;\n        // Emit when opening animation completes\n        _containerInstance._animationStateChanged\n            .pipe(filter(event => event.state === 'opened'), take(1))\n            .subscribe(() => {\n            this._afterOpened.next();\n            this._afterOpened.complete();\n        });\n        // Dispose overlay when closing animation is complete\n        _containerInstance._animationStateChanged\n            .pipe(filter(event => event.state === 'closed'), take(1))\n            .subscribe(() => {\n            clearTimeout(this._closeFallbackTimeout);\n            this._finishDialogClose();\n        });\n        _overlayRef.detachments().subscribe(() => {\n            this._beforeClosed.next(this._result);\n            this._beforeClosed.complete();\n            this._afterClosed.next(this._result);\n            this._afterClosed.complete();\n            this.componentInstance = null;\n            this._overlayRef.dispose();\n        });\n        _overlayRef\n            .keydownEvents()\n            .pipe(filter(event => {\n            return event.keyCode === ESCAPE && !this.disableClose && !hasModifierKey(event);\n        }))\n            .subscribe(event => {\n            event.preventDefault();\n            _closeDialogVia(this, 'keyboard');\n        });\n        _overlayRef.backdropClick().subscribe(() => {\n            if (this.disableClose) {\n                this._containerInstance._recaptureFocus();\n            }\n            else {\n                _closeDialogVia(this, 'mouse');\n            }\n        });\n    }\n    /**\n     * Close the dialog.\n     * @param dialogResult Optional result to return to the dialog opener.\n     */\n    close(dialogResult) {\n        this._result = dialogResult;\n        // Transition the backdrop in parallel to the dialog.\n        this._containerInstance._animationStateChanged\n            .pipe(filter(event => event.state === 'closing'), take(1))\n            .subscribe(event => {\n            this._beforeClosed.next(dialogResult);\n            this._beforeClosed.complete();\n            this._overlayRef.detachBackdrop();\n            // The logic that disposes of the overlay depends on the exit animation completing, however\n            // it isn't guaranteed if the parent view is destroyed while it's running. Add a fallback\n            // timeout which will clean everything up if the animation hasn't fired within the specified\n            // amount of time plus 100ms. We don't need to run this outside the NgZone, because for the\n            // vast majority of cases the timeout will have been cleared before it has the chance to fire.\n            this._closeFallbackTimeout = setTimeout(() => this._finishDialogClose(), event.totalTime + 100);\n        });\n        this._state = 1 /* CLOSING */;\n        this._containerInstance._startExitAnimation();\n    }\n    /**\n     * Gets an observable that is notified when the dialog is finished opening.\n     */\n    afterOpened() {\n        return this._afterOpened;\n    }\n    /**\n     * Gets an observable that is notified when the dialog is finished closing.\n     */\n    afterClosed() {\n        return this._afterClosed;\n    }\n    /**\n     * Gets an observable that is notified when the dialog has started closing.\n     */\n    beforeClosed() {\n        return this._beforeClosed;\n    }\n    /**\n     * Gets an observable that emits when the overlay's backdrop has been clicked.\n     */\n    backdropClick() {\n        return this._overlayRef.backdropClick();\n    }\n    /**\n     * Gets an observable that emits when keydown events are targeted on the overlay.\n     */\n    keydownEvents() {\n        return this._overlayRef.keydownEvents();\n    }\n    /**\n     * Updates the dialog's position.\n     * @param position New dialog position.\n     */\n    updatePosition(position) {\n        let strategy = this._getPositionStrategy();\n        if (position && (position.left || position.right)) {\n            position.left ? strategy.left(position.left) : strategy.right(position.right);\n        }\n        else {\n            strategy.centerHorizontally();\n        }\n        if (position && (position.top || position.bottom)) {\n            position.top ? strategy.top(position.top) : strategy.bottom(position.bottom);\n        }\n        else {\n            strategy.centerVertically();\n        }\n        this._overlayRef.updatePosition();\n        return this;\n    }\n    /**\n     * Updates the dialog's width and height.\n     * @param width New width of the dialog.\n     * @param height New height of the dialog.\n     */\n    updateSize(width = '', height = '') {\n        this._overlayRef.updateSize({ width, height });\n        this._overlayRef.updatePosition();\n        return this;\n    }\n    /** Add a CSS class or an array of classes to the overlay pane. */\n    addPanelClass(classes) {\n        this._overlayRef.addPanelClass(classes);\n        return this;\n    }\n    /** Remove a CSS class or an array of classes from the overlay pane. */\n    removePanelClass(classes) {\n        this._overlayRef.removePanelClass(classes);\n        return this;\n    }\n    /** Gets the current state of the dialog's lifecycle. */\n    getState() {\n        return this._state;\n    }\n    /**\n     * Finishes the dialog close by updating the state of the dialog\n     * and disposing the overlay.\n     */\n    _finishDialogClose() {\n        this._state = 2 /* CLOSED */;\n        this._overlayRef.dispose();\n    }\n    /** Fetches the position strategy object from the overlay ref. */\n    _getPositionStrategy() {\n        return this._overlayRef.getConfig().positionStrategy;\n    }\n}\n/**\n * Closes the dialog with the specified interaction type. This is currently not part of\n * `MatDialogRef` as that would conflict with custom dialog ref mocks provided in tests.\n * More details. See: https://github.com/angular/components/pull/9257#issuecomment-651342226.\n */\n// TODO: TODO: Move this back into `MatDialogRef` when we provide an official mock dialog ref.\nfunction _closeDialogVia(ref, interactionType, result) {\n    // Some mock dialog ref instances in tests do not have the `_containerInstance` property.\n    // For those, we keep the behavior as is and do not deal with the interaction type.\n    if (ref._containerInstance !== undefined) {\n        ref._containerInstance._closeInteractionType = interactionType;\n    }\n    return ref.close(result);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token that can be used to access the data that was passed in to a dialog. */\nconst MAT_DIALOG_DATA = new InjectionToken('MatDialogData');\n/** Injection token that can be used to specify default dialog options. */\nconst MAT_DIALOG_DEFAULT_OPTIONS = new InjectionToken('mat-dialog-default-options');\n/** Injection token that determines the scroll handling while the dialog is open. */\nconst MAT_DIALOG_SCROLL_STRATEGY = new InjectionToken('mat-dialog-scroll-strategy');\n/** @docs-private */\nfunction MAT_DIALOG_SCROLL_STRATEGY_FACTORY(overlay) {\n    return () => overlay.scrollStrategies.block();\n}\n/** @docs-private */\nfunction MAT_DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay) {\n    return () => overlay.scrollStrategies.block();\n}\n/** @docs-private */\nconst MAT_DIALOG_SCROLL_STRATEGY_PROVIDER = {\n    provide: MAT_DIALOG_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MAT_DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY,\n};\n/**\n * Base class for dialog services. The base dialog service allows\n * for arbitrary dialog refs and dialog container components.\n */\nclass _MatDialogBase {\n    constructor(_overlay, _injector, _defaultOptions, _parentDialog, _overlayContainer, scrollStrategy, _dialogRefConstructor, _dialogContainerType, _dialogDataToken, _animationMode) {\n        this._overlay = _overlay;\n        this._injector = _injector;\n        this._defaultOptions = _defaultOptions;\n        this._parentDialog = _parentDialog;\n        this._overlayContainer = _overlayContainer;\n        this._dialogRefConstructor = _dialogRefConstructor;\n        this._dialogContainerType = _dialogContainerType;\n        this._dialogDataToken = _dialogDataToken;\n        this._animationMode = _animationMode;\n        this._openDialogsAtThisLevel = [];\n        this._afterAllClosedAtThisLevel = new Subject();\n        this._afterOpenedAtThisLevel = new Subject();\n        this._ariaHiddenElements = new Map();\n        this._dialogAnimatingOpen = false;\n        // TODO (jelbourn): tighten the typing right-hand side of this expression.\n        /**\n         * Stream that emits when all open dialog have finished closing.\n         * Will emit on subscribe if there are no open dialogs to begin with.\n         */\n        this.afterAllClosed = defer(() => this.openDialogs.length\n            ? this._getAfterAllClosed()\n            : this._getAfterAllClosed().pipe(startWith(undefined)));\n        this._scrollStrategy = scrollStrategy;\n    }\n    /** Keeps track of the currently-open dialogs. */\n    get openDialogs() {\n        return this._parentDialog ? this._parentDialog.openDialogs : this._openDialogsAtThisLevel;\n    }\n    /** Stream that emits when a dialog has been opened. */\n    get afterOpened() {\n        return this._parentDialog ? this._parentDialog.afterOpened : this._afterOpenedAtThisLevel;\n    }\n    _getAfterAllClosed() {\n        const parent = this._parentDialog;\n        return parent ? parent._getAfterAllClosed() : this._afterAllClosedAtThisLevel;\n    }\n    open(componentOrTemplateRef, config) {\n        config = _applyConfigDefaults(config, this._defaultOptions || new MatDialogConfig());\n        if (config.id &&\n            this.getDialogById(config.id) &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error(`Dialog with id \"${config.id}\" exists already. The dialog id must be unique.`);\n        }\n        // If there is a dialog that is currently animating open, return the MatDialogRef of that dialog\n        if (this._dialogAnimatingOpen) {\n            return this._lastDialogRef;\n        }\n        const overlayRef = this._createOverlay(config);\n        const dialogContainer = this._attachDialogContainer(overlayRef, config);\n        if (this._animationMode !== 'NoopAnimations') {\n            const animationStateSubscription = dialogContainer._animationStateChanged.subscribe(dialogAnimationEvent => {\n                if (dialogAnimationEvent.state === 'opening') {\n                    this._dialogAnimatingOpen = true;\n                }\n                if (dialogAnimationEvent.state === 'opened') {\n                    this._dialogAnimatingOpen = false;\n                    animationStateSubscription.unsubscribe();\n                }\n            });\n            if (!this._animationStateSubscriptions) {\n                this._animationStateSubscriptions = new Subscription();\n            }\n            this._animationStateSubscriptions.add(animationStateSubscription);\n        }\n        const dialogRef = this._attachDialogContent(componentOrTemplateRef, dialogContainer, overlayRef, config);\n        this._lastDialogRef = dialogRef;\n        // If this is the first dialog that we're opening, hide all the non-overlay content.\n        if (!this.openDialogs.length) {\n            this._hideNonDialogContentFromAssistiveTechnology();\n        }\n        this.openDialogs.push(dialogRef);\n        dialogRef.afterClosed().subscribe(() => this._removeOpenDialog(dialogRef));\n        this.afterOpened.next(dialogRef);\n        // Notify the dialog container that the content has been attached.\n        dialogContainer._initializeWithAttachedContent();\n        return dialogRef;\n    }\n    /**\n     * Closes all of the currently-open dialogs.\n     */\n    closeAll() {\n        this._closeDialogs(this.openDialogs);\n    }\n    /**\n     * Finds an open dialog by its id.\n     * @param id ID to use when looking up the dialog.\n     */\n    getDialogById(id) {\n        return this.openDialogs.find(dialog => dialog.id === id);\n    }\n    ngOnDestroy() {\n        // Only close the dialogs at this level on destroy\n        // since the parent service may still be active.\n        this._closeDialogs(this._openDialogsAtThisLevel);\n        this._afterAllClosedAtThisLevel.complete();\n        this._afterOpenedAtThisLevel.complete();\n        // Clean up any subscriptions to dialogs that never finished opening.\n        if (this._animationStateSubscriptions) {\n            this._animationStateSubscriptions.unsubscribe();\n        }\n    }\n    /**\n     * Creates the overlay into which the dialog will be loaded.\n     * @param config The dialog configuration.\n     * @returns A promise resolving to the OverlayRef for the created overlay.\n     */\n    _createOverlay(config) {\n        const overlayConfig = this._getOverlayConfig(config);\n        return this._overlay.create(overlayConfig);\n    }\n    /**\n     * Creates an overlay config from a dialog config.\n     * @param dialogConfig The dialog configuration.\n     * @returns The overlay configuration.\n     */\n    _getOverlayConfig(dialogConfig) {\n        const state = new OverlayConfig({\n            positionStrategy: this._overlay.position().global(),\n            scrollStrategy: dialogConfig.scrollStrategy || this._scrollStrategy(),\n            panelClass: dialogConfig.panelClass,\n            hasBackdrop: dialogConfig.hasBackdrop,\n            direction: dialogConfig.direction,\n            minWidth: dialogConfig.minWidth,\n            minHeight: dialogConfig.minHeight,\n            maxWidth: dialogConfig.maxWidth,\n            maxHeight: dialogConfig.maxHeight,\n            disposeOnNavigation: dialogConfig.closeOnNavigation,\n        });\n        if (dialogConfig.backdropClass) {\n            state.backdropClass = dialogConfig.backdropClass;\n        }\n        return state;\n    }\n    /**\n     * Attaches a dialog container to a dialog's already-created overlay.\n     * @param overlay Reference to the dialog's underlying overlay.\n     * @param config The dialog configuration.\n     * @returns A promise resolving to a ComponentRef for the attached container.\n     */\n    _attachDialogContainer(overlay, config) {\n        const userInjector = config && config.viewContainerRef && config.viewContainerRef.injector;\n        const injector = Injector.create({\n            parent: userInjector || this._injector,\n            providers: [{ provide: MatDialogConfig, useValue: config }],\n        });\n        const containerPortal = new ComponentPortal(this._dialogContainerType, config.viewContainerRef, injector, config.componentFactoryResolver);\n        const containerRef = overlay.attach(containerPortal);\n        return containerRef.instance;\n    }\n    /**\n     * Attaches the user-provided component to the already-created dialog container.\n     * @param componentOrTemplateRef The type of component being loaded into the dialog,\n     *     or a TemplateRef to instantiate as the content.\n     * @param dialogContainer Reference to the wrapping dialog container.\n     * @param overlayRef Reference to the overlay in which the dialog resides.\n     * @param config The dialog configuration.\n     * @returns A promise resolving to the MatDialogRef that should be returned to the user.\n     */\n    _attachDialogContent(componentOrTemplateRef, dialogContainer, overlayRef, config) {\n        // Create a reference to the dialog we're creating in order to give the user a handle\n        // to modify and close it.\n        const dialogRef = new this._dialogRefConstructor(overlayRef, dialogContainer, config.id);\n        if (componentOrTemplateRef instanceof TemplateRef) {\n            dialogContainer.attachTemplatePortal(new TemplatePortal(componentOrTemplateRef, null, {\n                $implicit: config.data,\n                dialogRef,\n            }));\n        }\n        else {\n            const injector = this._createInjector(config, dialogRef, dialogContainer);\n            const contentRef = dialogContainer.attachComponentPortal(new ComponentPortal(componentOrTemplateRef, config.viewContainerRef, injector));\n            dialogRef.componentInstance = contentRef.instance;\n        }\n        dialogRef.updateSize(config.width, config.height).updatePosition(config.position);\n        return dialogRef;\n    }\n    /**\n     * Creates a custom injector to be used inside the dialog. This allows a component loaded inside\n     * of a dialog to close itself and, optionally, to return a value.\n     * @param config Config object that is used to construct the dialog.\n     * @param dialogRef Reference to the dialog.\n     * @param dialogContainer Dialog container element that wraps all of the contents.\n     * @returns The custom injector that can be used inside the dialog.\n     */\n    _createInjector(config, dialogRef, dialogContainer) {\n        const userInjector = config && config.viewContainerRef && config.viewContainerRef.injector;\n        // The dialog container should be provided as the dialog container and the dialog's\n        // content are created out of the same `ViewContainerRef` and as such, are siblings\n        // for injector purposes. To allow the hierarchy that is expected, the dialog\n        // container is explicitly provided in the injector.\n        const providers = [\n            { provide: this._dialogContainerType, useValue: dialogContainer },\n            { provide: this._dialogDataToken, useValue: config.data },\n            { provide: this._dialogRefConstructor, useValue: dialogRef },\n        ];\n        if (config.direction &&\n            (!userInjector ||\n                !userInjector.get(Directionality, null, InjectFlags.Optional))) {\n            providers.push({\n                provide: Directionality,\n                useValue: { value: config.direction, change: of() },\n            });\n        }\n        return Injector.create({ parent: userInjector || this._injector, providers });\n    }\n    /**\n     * Removes a dialog from the array of open dialogs.\n     * @param dialogRef Dialog to be removed.\n     */\n    _removeOpenDialog(dialogRef) {\n        const index = this.openDialogs.indexOf(dialogRef);\n        if (index > -1) {\n            this.openDialogs.splice(index, 1);\n            // If all the dialogs were closed, remove/restore the `aria-hidden`\n            // to a the siblings and emit to the `afterAllClosed` stream.\n            if (!this.openDialogs.length) {\n                this._ariaHiddenElements.forEach((previousValue, element) => {\n                    if (previousValue) {\n                        element.setAttribute('aria-hidden', previousValue);\n                    }\n                    else {\n                        element.removeAttribute('aria-hidden');\n                    }\n                });\n                this._ariaHiddenElements.clear();\n                this._getAfterAllClosed().next();\n            }\n        }\n    }\n    /**\n     * Hides all of the content that isn't an overlay from assistive technology.\n     */\n    _hideNonDialogContentFromAssistiveTechnology() {\n        const overlayContainer = this._overlayContainer.getContainerElement();\n        // Ensure that the overlay container is attached to the DOM.\n        if (overlayContainer.parentElement) {\n            const siblings = overlayContainer.parentElement.children;\n            for (let i = siblings.length - 1; i > -1; i--) {\n                let sibling = siblings[i];\n                if (sibling !== overlayContainer &&\n                    sibling.nodeName !== 'SCRIPT' &&\n                    sibling.nodeName !== 'STYLE' &&\n                    !sibling.hasAttribute('aria-live')) {\n                    this._ariaHiddenElements.set(sibling, sibling.getAttribute('aria-hidden'));\n                    sibling.setAttribute('aria-hidden', 'true');\n                }\n            }\n        }\n    }\n    /** Closes all of the dialogs in an array. */\n    _closeDialogs(dialogs) {\n        let i = dialogs.length;\n        while (i--) {\n            // The `_openDialogs` property isn't updated after close until the rxjs subscription\n            // runs on the next microtask, in addition to modifying the array as we're going\n            // through it. We loop through all of them and call close without assuming that\n            // they'll be removed from the list instantaneously.\n            dialogs[i].close();\n        }\n    }\n}\n_MatDialogBase.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: _MatDialogBase, deps: \"invalid\", target: i0.ɵɵFactoryTarget.Directive });\n_MatDialogBase.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: _MatDialogBase, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: _MatDialogBase, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: i1$1.Overlay }, { type: i0.Injector }, { type: undefined }, { type: undefined }, { type: i1$1.OverlayContainer }, { type: undefined }, { type: i0.Type }, { type: i0.Type }, { type: i0.InjectionToken }, { type: undefined }]; } });\n/**\n * Service to open Material Design modal dialogs.\n */\nclass MatDialog extends _MatDialogBase {\n    constructor(overlay, injector, \n    /**\n     * @deprecated `_location` parameter to be removed.\n     * @breaking-change 10.0.0\n     */\n    location, defaultOptions, scrollStrategy, parentDialog, overlayContainer, animationMode) {\n        super(overlay, injector, defaultOptions, parentDialog, overlayContainer, scrollStrategy, MatDialogRef, MatDialogContainer, MAT_DIALOG_DATA, animationMode);\n    }\n}\nMatDialog.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatDialog, deps: [{ token: i1$1.Overlay }, { token: i0.Injector }, { token: i2.Location, optional: true }, { token: MAT_DIALOG_DEFAULT_OPTIONS, optional: true }, { token: MAT_DIALOG_SCROLL_STRATEGY }, { token: MatDialog, optional: true, skipSelf: true }, { token: i1$1.OverlayContainer }, { token: ANIMATION_MODULE_TYPE, optional: true }], target: i0.ɵɵFactoryTarget.Injectable });\nMatDialog.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatDialog });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatDialog, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () {\n        return [{ type: i1$1.Overlay }, { type: i0.Injector }, { type: i2.Location, decorators: [{\n                        type: Optional\n                    }] }, { type: MatDialogConfig, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [MAT_DIALOG_DEFAULT_OPTIONS]\n                    }] }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [MAT_DIALOG_SCROLL_STRATEGY]\n                    }] }, { type: MatDialog, decorators: [{\n                        type: Optional\n                    }, {\n                        type: SkipSelf\n                    }] }, { type: i1$1.OverlayContainer }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [ANIMATION_MODULE_TYPE]\n                    }] }];\n    } });\n/**\n * Applies default options to the dialog config.\n * @param config Config to be modified.\n * @param defaultOptions Default options provided.\n * @returns The new configuration object.\n */\nfunction _applyConfigDefaults(config, defaultOptions) {\n    return Object.assign(Object.assign({}, defaultOptions), config);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Counter used to generate unique IDs for dialog elements. */\nlet dialogElementUid = 0;\n/**\n * Button that will close the current dialog.\n */\nclass MatDialogClose {\n    constructor(\n    /**\n     * Reference to the containing dialog.\n     * @deprecated `dialogRef` property to become private.\n     * @breaking-change 13.0.0\n     */\n    // The dialog title directive is always used in combination with a `MatDialogRef`.\n    // tslint:disable-next-line: lightweight-tokens\n    dialogRef, _elementRef, _dialog) {\n        this.dialogRef = dialogRef;\n        this._elementRef = _elementRef;\n        this._dialog = _dialog;\n        /** Default to \"button\" to prevents accidental form submits. */\n        this.type = 'button';\n    }\n    ngOnInit() {\n        if (!this.dialogRef) {\n            // When this directive is included in a dialog via TemplateRef (rather than being\n            // in a Component), the DialogRef isn't available via injection because embedded\n            // views cannot be given a custom injector. Instead, we look up the DialogRef by\n            // ID. This must occur in `onInit`, as the ID binding for the dialog container won't\n            // be resolved at constructor time.\n            this.dialogRef = getClosestDialog(this._elementRef, this._dialog.openDialogs);\n        }\n    }\n    ngOnChanges(changes) {\n        const proxiedChange = changes['_matDialogClose'] || changes['_matDialogCloseResult'];\n        if (proxiedChange) {\n            this.dialogResult = proxiedChange.currentValue;\n        }\n    }\n    _onButtonClick(event) {\n        // Determinate the focus origin using the click event, because using the FocusMonitor will\n        // result in incorrect origins. Most of the time, close buttons will be auto focused in the\n        // dialog, and therefore clicking the button won't result in a focus change. This means that\n        // the FocusMonitor won't detect any origin change, and will always output `program`.\n        _closeDialogVia(this.dialogRef, event.screenX === 0 && event.screenY === 0 ? 'keyboard' : 'mouse', this.dialogResult);\n    }\n}\nMatDialogClose.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatDialogClose, deps: [{ token: MatDialogRef, optional: true }, { token: i0.ElementRef }, { token: MatDialog }], target: i0.ɵɵFactoryTarget.Directive });\nMatDialogClose.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatDialogClose, selector: \"[mat-dialog-close], [matDialogClose]\", inputs: { ariaLabel: [\"aria-label\", \"ariaLabel\"], type: \"type\", dialogResult: [\"mat-dialog-close\", \"dialogResult\"], _matDialogClose: [\"matDialogClose\", \"_matDialogClose\"] }, host: { listeners: { \"click\": \"_onButtonClick($event)\" }, properties: { \"attr.aria-label\": \"ariaLabel || null\", \"attr.type\": \"type\" } }, exportAs: [\"matDialogClose\"], usesOnChanges: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatDialogClose, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[mat-dialog-close], [matDialogClose]',\n                    exportAs: 'matDialogClose',\n                    host: {\n                        '(click)': '_onButtonClick($event)',\n                        '[attr.aria-label]': 'ariaLabel || null',\n                        '[attr.type]': 'type',\n                    },\n                }]\n        }], ctorParameters: function () {\n        return [{ type: MatDialogRef, decorators: [{\n                        type: Optional\n                    }] }, { type: i0.ElementRef }, { type: MatDialog }];\n    }, propDecorators: { ariaLabel: [{\n                type: Input,\n                args: ['aria-label']\n            }], type: [{\n                type: Input\n            }], dialogResult: [{\n                type: Input,\n                args: ['mat-dialog-close']\n            }], _matDialogClose: [{\n                type: Input,\n                args: ['matDialogClose']\n            }] } });\n/**\n * Title of a dialog element. Stays fixed to the top of the dialog when scrolling.\n */\nclass MatDialogTitle {\n    constructor(\n    // The dialog title directive is always used in combination with a `MatDialogRef`.\n    // tslint:disable-next-line: lightweight-tokens\n    _dialogRef, _elementRef, _dialog) {\n        this._dialogRef = _dialogRef;\n        this._elementRef = _elementRef;\n        this._dialog = _dialog;\n        /** Unique id for the dialog title. If none is supplied, it will be auto-generated. */\n        this.id = `mat-dialog-title-${dialogElementUid++}`;\n    }\n    ngOnInit() {\n        if (!this._dialogRef) {\n            this._dialogRef = getClosestDialog(this._elementRef, this._dialog.openDialogs);\n        }\n        if (this._dialogRef) {\n            Promise.resolve().then(() => {\n                const container = this._dialogRef._containerInstance;\n                if (container && !container._ariaLabelledBy) {\n                    container._ariaLabelledBy = this.id;\n                }\n            });\n        }\n    }\n}\nMatDialogTitle.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatDialogTitle, deps: [{ token: MatDialogRef, optional: true }, { token: i0.ElementRef }, { token: MatDialog }], target: i0.ɵɵFactoryTarget.Directive });\nMatDialogTitle.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatDialogTitle, selector: \"[mat-dialog-title], [matDialogTitle]\", inputs: { id: \"id\" }, host: { properties: { \"id\": \"id\" }, classAttribute: \"mat-dialog-title\" }, exportAs: [\"matDialogTitle\"], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatDialogTitle, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[mat-dialog-title], [matDialogTitle]',\n                    exportAs: 'matDialogTitle',\n                    host: {\n                        'class': 'mat-dialog-title',\n                        '[id]': 'id',\n                    },\n                }]\n        }], ctorParameters: function () {\n        return [{ type: MatDialogRef, decorators: [{\n                        type: Optional\n                    }] }, { type: i0.ElementRef }, { type: MatDialog }];\n    }, propDecorators: { id: [{\n                type: Input\n            }] } });\n/**\n * Scrollable content container of a dialog.\n */\nclass MatDialogContent {\n}\nMatDialogContent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatDialogContent, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nMatDialogContent.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatDialogContent, selector: \"[mat-dialog-content], mat-dialog-content, [matDialogContent]\", host: { classAttribute: \"mat-dialog-content\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatDialogContent, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: `[mat-dialog-content], mat-dialog-content, [matDialogContent]`,\n                    host: { 'class': 'mat-dialog-content' },\n                }]\n        }] });\n/**\n * Container for the bottom action buttons in a dialog.\n * Stays fixed to the bottom when scrolling.\n */\nclass MatDialogActions {\n}\nMatDialogActions.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatDialogActions, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nMatDialogActions.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatDialogActions, selector: \"[mat-dialog-actions], mat-dialog-actions, [matDialogActions]\", host: { classAttribute: \"mat-dialog-actions\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatDialogActions, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: `[mat-dialog-actions], mat-dialog-actions, [matDialogActions]`,\n                    host: { 'class': 'mat-dialog-actions' },\n                }]\n        }] });\n/**\n * Finds the closest MatDialogRef to an element by looking at the DOM.\n * @param element Element relative to which to look for a dialog.\n * @param openDialogs References to the currently-open dialogs.\n */\nfunction getClosestDialog(element, openDialogs) {\n    let parent = element.nativeElement.parentElement;\n    while (parent && !parent.classList.contains('mat-dialog-container')) {\n        parent = parent.parentElement;\n    }\n    return parent ? openDialogs.find(dialog => dialog.id === parent.id) : null;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatDialogModule {\n}\nMatDialogModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatDialogModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatDialogModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatDialogModule, declarations: [MatDialogContainer,\n        MatDialogClose,\n        MatDialogTitle,\n        MatDialogActions,\n        MatDialogContent], imports: [OverlayModule, PortalModule, MatCommonModule], exports: [MatDialogContainer,\n        MatDialogClose,\n        MatDialogTitle,\n        MatDialogContent,\n        MatDialogActions,\n        MatCommonModule] });\nMatDialogModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatDialogModule, providers: [MatDialog, MAT_DIALOG_SCROLL_STRATEGY_PROVIDER], imports: [[OverlayModule, PortalModule, MatCommonModule], MatCommonModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatDialogModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [OverlayModule, PortalModule, MatCommonModule],\n                    exports: [\n                        MatDialogContainer,\n                        MatDialogClose,\n                        MatDialogTitle,\n                        MatDialogContent,\n                        MatDialogActions,\n                        MatCommonModule,\n                    ],\n                    declarations: [\n                        MatDialogContainer,\n                        MatDialogClose,\n                        MatDialogTitle,\n                        MatDialogActions,\n                        MatDialogContent,\n                    ],\n                    providers: [MatDialog, MAT_DIALOG_SCROLL_STRATEGY_PROVIDER],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_DIALOG_DATA, MAT_DIALOG_DEFAULT_OPTIONS, MAT_DIALOG_SCROLL_STRATEGY, MAT_DIALOG_SCROLL_STRATEGY_FACTORY, MAT_DIALOG_SCROLL_STRATEGY_PROVIDER, MAT_DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY, MatDialog, MatDialogActions, MatDialogClose, MatDialogConfig, MatDialogContainer, MatDialogContent, MatDialogModule, MatDialogRef, MatDialogTitle, _MatDialogBase, _MatDialogContainerBase, _closeDialogVia, matDialogAnimations, throwMatDialogContentAlreadyAttachedError };\n","import * as i4 from '@angular/cdk/observers';\nimport { ObserversModule } from '@angular/cdk/observers';\nimport * as i3 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, Directive, Attribute, Input, Component, ViewEncapsulation, ChangeDetectionStrategy, Optional, Inject, ViewChild, ContentChild, ContentChildren, NgModule } from '@angular/core';\nimport { mixinColor, MatCommonModule } from '@angular/material/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Subject, merge, fromEvent } from 'rxjs';\nimport { startWith, takeUntil, take } from 'rxjs/operators';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport * as i1 from '@angular/cdk/bidi';\nimport * as i2 from '@angular/cdk/platform';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nlet nextUniqueId$2 = 0;\n/**\n * Injection token that can be used to reference instances of `MatError`. It serves as\n * alternative token to the actual `MatError` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_ERROR = new InjectionToken('MatError');\n/** Single error message to be shown underneath the form field. */\nclass MatError {\n    constructor(ariaLive, elementRef) {\n        this.id = `mat-error-${nextUniqueId$2++}`;\n        // If no aria-live value is set add 'polite' as a default. This is preferred over setting\n        // role='alert' so that screen readers do not interrupt the current task to read this aloud.\n        if (!ariaLive) {\n            elementRef.nativeElement.setAttribute('aria-live', 'polite');\n        }\n    }\n}\nMatError.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatError, deps: [{ token: 'aria-live', attribute: true }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });\nMatError.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatError, selector: \"mat-error\", inputs: { id: \"id\" }, host: { attributes: { \"aria-atomic\": \"true\" }, properties: { \"attr.id\": \"id\" }, classAttribute: \"mat-error\" }, providers: [{ provide: MAT_ERROR, useExisting: MatError }], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatError, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-error',\n                    host: {\n                        'class': 'mat-error',\n                        '[attr.id]': 'id',\n                        'aria-atomic': 'true',\n                    },\n                    providers: [{ provide: MAT_ERROR, useExisting: MatError }],\n                }]\n        }], ctorParameters: function () {\n        return [{ type: undefined, decorators: [{\n                        type: Attribute,\n                        args: ['aria-live']\n                    }] }, { type: i0.ElementRef }];\n    }, propDecorators: { id: [{\n                type: Input\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Animations used by the MatFormField.\n * @docs-private\n */\nconst matFormFieldAnimations = {\n    /** Animation that transitions the form field's error and hint messages. */\n    transitionMessages: trigger('transitionMessages', [\n        // TODO(mmalerba): Use angular animations for label animation as well.\n        state('enter', style({ opacity: 1, transform: 'translateY(0%)' })),\n        transition('void => enter', [\n            style({ opacity: 0, transform: 'translateY(-5px)' }),\n            animate('300ms cubic-bezier(0.55, 0, 0.55, 0.2)'),\n        ]),\n    ]),\n};\n\n/** An interface which allows a control to work inside of a `MatFormField`. */\nclass MatFormFieldControl {\n}\nMatFormFieldControl.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatFormFieldControl, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nMatFormFieldControl.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatFormFieldControl, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatFormFieldControl, decorators: [{\n            type: Directive\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @docs-private */\nfunction getMatFormFieldPlaceholderConflictError() {\n    return Error('Placeholder attribute and child element were both specified.');\n}\n/** @docs-private */\nfunction getMatFormFieldDuplicatedHintError(align) {\n    return Error(`A hint was already declared for 'align=\"${align}\"'.`);\n}\n/** @docs-private */\nfunction getMatFormFieldMissingControlError() {\n    return Error('mat-form-field must contain a MatFormFieldControl.');\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nlet nextUniqueId$1 = 0;\n/**\n * Injection token that can be used to reference instances of `MatHint`. It serves as\n * alternative token to the actual `MatHint` class which could cause unnecessary\n * retention of the class and its directive metadata.\n *\n * *Note*: This is not part of the public API as the MDC-based form-field will not\n * need a lightweight token for `MatHint` and we want to reduce breaking changes.\n */\nconst _MAT_HINT = new InjectionToken('MatHint');\n/** Hint text to be shown underneath the form field control. */\nclass MatHint {\n    constructor() {\n        /** Whether to align the hint label at the start or end of the line. */\n        this.align = 'start';\n        /** Unique ID for the hint. Used for the aria-describedby on the form field control. */\n        this.id = `mat-hint-${nextUniqueId$1++}`;\n    }\n}\nMatHint.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatHint, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nMatHint.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatHint, selector: \"mat-hint\", inputs: { align: \"align\", id: \"id\" }, host: { properties: { \"class.mat-form-field-hint-end\": \"align === \\\"end\\\"\", \"attr.id\": \"id\", \"attr.align\": \"null\" }, classAttribute: \"mat-hint\" }, providers: [{ provide: _MAT_HINT, useExisting: MatHint }], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatHint, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-hint',\n                    host: {\n                        'class': 'mat-hint',\n                        '[class.mat-form-field-hint-end]': 'align === \"end\"',\n                        '[attr.id]': 'id',\n                        // Remove align attribute to prevent it from interfering with layout.\n                        '[attr.align]': 'null',\n                    },\n                    providers: [{ provide: _MAT_HINT, useExisting: MatHint }],\n                }]\n        }], propDecorators: { align: [{\n                type: Input\n            }], id: [{\n                type: Input\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** The floating label for a `mat-form-field`. */\nclass MatLabel {\n}\nMatLabel.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatLabel, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nMatLabel.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatLabel, selector: \"mat-label\", ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatLabel, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-label',\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The placeholder text for an `MatFormField`.\n * @deprecated Use `<mat-label>` to specify the label and the `placeholder` attribute to specify the\n *     placeholder.\n * @breaking-change 8.0.0\n */\nclass MatPlaceholder {\n}\nMatPlaceholder.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatPlaceholder, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nMatPlaceholder.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatPlaceholder, selector: \"mat-placeholder\", ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatPlaceholder, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-placeholder',\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used to reference instances of `MatPrefix`. It serves as\n * alternative token to the actual `MatPrefix` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_PREFIX = new InjectionToken('MatPrefix');\n/** Prefix to be placed in front of the form field. */\nclass MatPrefix {\n}\nMatPrefix.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatPrefix, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nMatPrefix.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatPrefix, selector: \"[matPrefix]\", providers: [{ provide: MAT_PREFIX, useExisting: MatPrefix }], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatPrefix, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matPrefix]',\n                    providers: [{ provide: MAT_PREFIX, useExisting: MatPrefix }],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used to reference instances of `MatSuffix`. It serves as\n * alternative token to the actual `MatSuffix` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_SUFFIX = new InjectionToken('MatSuffix');\n/** Suffix to be placed at the end of the form field. */\nclass MatSuffix {\n}\nMatSuffix.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatSuffix, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nMatSuffix.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatSuffix, selector: \"[matSuffix]\", providers: [{ provide: MAT_SUFFIX, useExisting: MatSuffix }], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatSuffix, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matSuffix]',\n                    providers: [{ provide: MAT_SUFFIX, useExisting: MatSuffix }],\n                }]\n        }] });\n\nlet nextUniqueId = 0;\nconst floatingLabelScale = 0.75;\nconst outlineGapPadding = 5;\n/**\n * Boilerplate for applying mixins to MatFormField.\n * @docs-private\n */\nconst _MatFormFieldBase = mixinColor(class {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}, 'primary');\n/**\n * Injection token that can be used to configure the\n * default options for all form field within an app.\n */\nconst MAT_FORM_FIELD_DEFAULT_OPTIONS = new InjectionToken('MAT_FORM_FIELD_DEFAULT_OPTIONS');\n/**\n * Injection token that can be used to inject an instances of `MatFormField`. It serves\n * as alternative token to the actual `MatFormField` class which would cause unnecessary\n * retention of the `MatFormField` class and its component metadata.\n */\nconst MAT_FORM_FIELD = new InjectionToken('MatFormField');\n/** Container for form controls that applies Material Design styling and behavior. */\nclass MatFormField extends _MatFormFieldBase {\n    constructor(elementRef, _changeDetectorRef, _dir, _defaults, _platform, _ngZone, _animationMode) {\n        super(elementRef);\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dir = _dir;\n        this._defaults = _defaults;\n        this._platform = _platform;\n        this._ngZone = _ngZone;\n        /**\n         * Whether the outline gap needs to be calculated\n         * immediately on the next change detection run.\n         */\n        this._outlineGapCalculationNeededImmediately = false;\n        /** Whether the outline gap needs to be calculated next time the zone has stabilized. */\n        this._outlineGapCalculationNeededOnStable = false;\n        this._destroyed = new Subject();\n        /** Override for the logic that disables the label animation in certain cases. */\n        this._showAlwaysAnimate = false;\n        /** State of the mat-hint and mat-error animations. */\n        this._subscriptAnimationState = '';\n        this._hintLabel = '';\n        // Unique id for the hint label.\n        this._hintLabelId = `mat-hint-${nextUniqueId++}`;\n        // Unique id for the label element.\n        this._labelId = `mat-form-field-label-${nextUniqueId++}`;\n        this.floatLabel = this._getDefaultFloatLabelState();\n        this._animationsEnabled = _animationMode !== 'NoopAnimations';\n        // Set the default through here so we invoke the setter on the first run.\n        this.appearance = _defaults && _defaults.appearance ? _defaults.appearance : 'legacy';\n        this._hideRequiredMarker =\n            _defaults && _defaults.hideRequiredMarker != null ? _defaults.hideRequiredMarker : false;\n    }\n    /** The form-field appearance style. */\n    get appearance() {\n        return this._appearance;\n    }\n    set appearance(value) {\n        const oldValue = this._appearance;\n        this._appearance = value || (this._defaults && this._defaults.appearance) || 'legacy';\n        if (this._appearance === 'outline' && oldValue !== value) {\n            this._outlineGapCalculationNeededOnStable = true;\n        }\n    }\n    /** Whether the required marker should be hidden. */\n    get hideRequiredMarker() {\n        return this._hideRequiredMarker;\n    }\n    set hideRequiredMarker(value) {\n        this._hideRequiredMarker = coerceBooleanProperty(value);\n    }\n    /** Whether the floating label should always float or not. */\n    _shouldAlwaysFloat() {\n        return this.floatLabel === 'always' && !this._showAlwaysAnimate;\n    }\n    /** Whether the label can float or not. */\n    _canLabelFloat() {\n        return this.floatLabel !== 'never';\n    }\n    /** Text for the form field hint. */\n    get hintLabel() {\n        return this._hintLabel;\n    }\n    set hintLabel(value) {\n        this._hintLabel = value;\n        this._processHints();\n    }\n    /**\n     * Whether the label should always float, never float or float as the user types.\n     *\n     * Note: only the legacy appearance supports the `never` option. `never` was originally added as a\n     * way to make the floating label emulate the behavior of a standard input placeholder. However\n     * the form field now supports both floating labels and placeholders. Therefore in the non-legacy\n     * appearances the `never` option has been disabled in favor of just using the placeholder.\n     */\n    get floatLabel() {\n        return this.appearance !== 'legacy' && this._floatLabel === 'never' ? 'auto' : this._floatLabel;\n    }\n    set floatLabel(value) {\n        if (value !== this._floatLabel) {\n            this._floatLabel = value || this._getDefaultFloatLabelState();\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    get _control() {\n        // TODO(crisbeto): we need this workaround in order to support both Ivy and ViewEngine.\n        //  We should clean this up once Ivy is the default renderer.\n        return this._explicitFormFieldControl || this._controlNonStatic || this._controlStatic;\n    }\n    set _control(value) {\n        this._explicitFormFieldControl = value;\n    }\n    /**\n     * Gets the id of the label element. If no label is present, returns `null`.\n     */\n    getLabelId() {\n        return this._hasFloatingLabel() ? this._labelId : null;\n    }\n    /**\n     * Gets an ElementRef for the element that a overlay attached to the form-field should be\n     * positioned relative to.\n     */\n    getConnectedOverlayOrigin() {\n        return this._connectionContainerRef || this._elementRef;\n    }\n    ngAfterContentInit() {\n        this._validateControlChild();\n        const control = this._control;\n        if (control.controlType) {\n            this._elementRef.nativeElement.classList.add(`mat-form-field-type-${control.controlType}`);\n        }\n        // Subscribe to changes in the child control state in order to update the form field UI.\n        control.stateChanges.pipe(startWith(null)).subscribe(() => {\n            this._validatePlaceholders();\n            this._syncDescribedByIds();\n            this._changeDetectorRef.markForCheck();\n        });\n        // Run change detection if the value changes.\n        if (control.ngControl && control.ngControl.valueChanges) {\n            control.ngControl.valueChanges\n                .pipe(takeUntil(this._destroyed))\n                .subscribe(() => this._changeDetectorRef.markForCheck());\n        }\n        // Note that we have to run outside of the `NgZone` explicitly,\n        // in order to avoid throwing users into an infinite loop\n        // if `zone-patch-rxjs` is included.\n        this._ngZone.runOutsideAngular(() => {\n            this._ngZone.onStable.pipe(takeUntil(this._destroyed)).subscribe(() => {\n                if (this._outlineGapCalculationNeededOnStable) {\n                    this.updateOutlineGap();\n                }\n            });\n        });\n        // Run change detection and update the outline if the suffix or prefix changes.\n        merge(this._prefixChildren.changes, this._suffixChildren.changes).subscribe(() => {\n            this._outlineGapCalculationNeededOnStable = true;\n            this._changeDetectorRef.markForCheck();\n        });\n        // Re-validate when the number of hints changes.\n        this._hintChildren.changes.pipe(startWith(null)).subscribe(() => {\n            this._processHints();\n            this._changeDetectorRef.markForCheck();\n        });\n        // Update the aria-described by when the number of errors changes.\n        this._errorChildren.changes.pipe(startWith(null)).subscribe(() => {\n            this._syncDescribedByIds();\n            this._changeDetectorRef.markForCheck();\n        });\n        if (this._dir) {\n            this._dir.change.pipe(takeUntil(this._destroyed)).subscribe(() => {\n                if (typeof requestAnimationFrame === 'function') {\n                    this._ngZone.runOutsideAngular(() => {\n                        requestAnimationFrame(() => this.updateOutlineGap());\n                    });\n                }\n                else {\n                    this.updateOutlineGap();\n                }\n            });\n        }\n    }\n    ngAfterContentChecked() {\n        this._validateControlChild();\n        if (this._outlineGapCalculationNeededImmediately) {\n            this.updateOutlineGap();\n        }\n    }\n    ngAfterViewInit() {\n        // Avoid animations on load.\n        this._subscriptAnimationState = 'enter';\n        this._changeDetectorRef.detectChanges();\n    }\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /** Determines whether a class from the NgControl should be forwarded to the host element. */\n    _shouldForward(prop) {\n        const ngControl = this._control ? this._control.ngControl : null;\n        return ngControl && ngControl[prop];\n    }\n    _hasPlaceholder() {\n        return !!((this._control && this._control.placeholder) || this._placeholderChild);\n    }\n    _hasLabel() {\n        return !!(this._labelChildNonStatic || this._labelChildStatic);\n    }\n    _shouldLabelFloat() {\n        return (this._canLabelFloat() &&\n            ((this._control && this._control.shouldLabelFloat) || this._shouldAlwaysFloat()));\n    }\n    _hideControlPlaceholder() {\n        // In the legacy appearance the placeholder is promoted to a label if no label is given.\n        return ((this.appearance === 'legacy' && !this._hasLabel()) ||\n            (this._hasLabel() && !this._shouldLabelFloat()));\n    }\n    _hasFloatingLabel() {\n        // In the legacy appearance the placeholder is promoted to a label if no label is given.\n        return this._hasLabel() || (this.appearance === 'legacy' && this._hasPlaceholder());\n    }\n    /** Determines whether to display hints or errors. */\n    _getDisplayedMessages() {\n        return this._errorChildren && this._errorChildren.length > 0 && this._control.errorState\n            ? 'error'\n            : 'hint';\n    }\n    /** Animates the placeholder up and locks it in position. */\n    _animateAndLockLabel() {\n        if (this._hasFloatingLabel() && this._canLabelFloat()) {\n            // If animations are disabled, we shouldn't go in here,\n            // because the `transitionend` will never fire.\n            if (this._animationsEnabled && this._label) {\n                this._showAlwaysAnimate = true;\n                fromEvent(this._label.nativeElement, 'transitionend')\n                    .pipe(take(1))\n                    .subscribe(() => {\n                    this._showAlwaysAnimate = false;\n                });\n            }\n            this.floatLabel = 'always';\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * Ensure that there is only one placeholder (either `placeholder` attribute on the child control\n     * or child element with the `mat-placeholder` directive).\n     */\n    _validatePlaceholders() {\n        if (this._control.placeholder &&\n            this._placeholderChild &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getMatFormFieldPlaceholderConflictError();\n        }\n    }\n    /** Does any extra processing that is required when handling the hints. */\n    _processHints() {\n        this._validateHints();\n        this._syncDescribedByIds();\n    }\n    /**\n     * Ensure that there is a maximum of one of each `<mat-hint>` alignment specified, with the\n     * attribute being considered as `align=\"start\"`.\n     */\n    _validateHints() {\n        if (this._hintChildren && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            let startHint;\n            let endHint;\n            this._hintChildren.forEach((hint) => {\n                if (hint.align === 'start') {\n                    if (startHint || this.hintLabel) {\n                        throw getMatFormFieldDuplicatedHintError('start');\n                    }\n                    startHint = hint;\n                }\n                else if (hint.align === 'end') {\n                    if (endHint) {\n                        throw getMatFormFieldDuplicatedHintError('end');\n                    }\n                    endHint = hint;\n                }\n            });\n        }\n    }\n    /** Gets the default float label state. */\n    _getDefaultFloatLabelState() {\n        return (this._defaults && this._defaults.floatLabel) || 'auto';\n    }\n    /**\n     * Sets the list of element IDs that describe the child control. This allows the control to update\n     * its `aria-describedby` attribute accordingly.\n     */\n    _syncDescribedByIds() {\n        if (this._control) {\n            let ids = [];\n            // TODO(wagnermaciel): Remove the type check when we find the root cause of this bug.\n            if (this._control.userAriaDescribedBy &&\n                typeof this._control.userAriaDescribedBy === 'string') {\n                ids.push(...this._control.userAriaDescribedBy.split(' '));\n            }\n            if (this._getDisplayedMessages() === 'hint') {\n                const startHint = this._hintChildren\n                    ? this._hintChildren.find(hint => hint.align === 'start')\n                    : null;\n                const endHint = this._hintChildren\n                    ? this._hintChildren.find(hint => hint.align === 'end')\n                    : null;\n                if (startHint) {\n                    ids.push(startHint.id);\n                }\n                else if (this._hintLabel) {\n                    ids.push(this._hintLabelId);\n                }\n                if (endHint) {\n                    ids.push(endHint.id);\n                }\n            }\n            else if (this._errorChildren) {\n                ids.push(...this._errorChildren.map(error => error.id));\n            }\n            this._control.setDescribedByIds(ids);\n        }\n    }\n    /** Throws an error if the form field's control is missing. */\n    _validateControlChild() {\n        if (!this._control && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getMatFormFieldMissingControlError();\n        }\n    }\n    /**\n     * Updates the width and position of the gap in the outline. Only relevant for the outline\n     * appearance.\n     */\n    updateOutlineGap() {\n        const labelEl = this._label ? this._label.nativeElement : null;\n        if (this.appearance !== 'outline' ||\n            !labelEl ||\n            !labelEl.children.length ||\n            !labelEl.textContent.trim()) {\n            return;\n        }\n        if (!this._platform.isBrowser) {\n            // getBoundingClientRect isn't available on the server.\n            return;\n        }\n        // If the element is not present in the DOM, the outline gap will need to be calculated\n        // the next time it is checked and in the DOM.\n        if (!this._isAttachedToDOM()) {\n            this._outlineGapCalculationNeededImmediately = true;\n            return;\n        }\n        let startWidth = 0;\n        let gapWidth = 0;\n        const container = this._connectionContainerRef.nativeElement;\n        const startEls = container.querySelectorAll('.mat-form-field-outline-start');\n        const gapEls = container.querySelectorAll('.mat-form-field-outline-gap');\n        if (this._label && this._label.nativeElement.children.length) {\n            const containerRect = container.getBoundingClientRect();\n            // If the container's width and height are zero, it means that the element is\n            // invisible and we can't calculate the outline gap. Mark the element as needing\n            // to be checked the next time the zone stabilizes. We can't do this immediately\n            // on the next change detection, because even if the element becomes visible,\n            // the `ClientRect` won't be reclaculated immediately. We reset the\n            // `_outlineGapCalculationNeededImmediately` flag some we don't run the checks twice.\n            if (containerRect.width === 0 && containerRect.height === 0) {\n                this._outlineGapCalculationNeededOnStable = true;\n                this._outlineGapCalculationNeededImmediately = false;\n                return;\n            }\n            const containerStart = this._getStartEnd(containerRect);\n            const labelChildren = labelEl.children;\n            const labelStart = this._getStartEnd(labelChildren[0].getBoundingClientRect());\n            let labelWidth = 0;\n            for (let i = 0; i < labelChildren.length; i++) {\n                labelWidth += labelChildren[i].offsetWidth;\n            }\n            startWidth = Math.abs(labelStart - containerStart) - outlineGapPadding;\n            gapWidth = labelWidth > 0 ? labelWidth * floatingLabelScale + outlineGapPadding * 2 : 0;\n        }\n        for (let i = 0; i < startEls.length; i++) {\n            startEls[i].style.width = `${startWidth}px`;\n        }\n        for (let i = 0; i < gapEls.length; i++) {\n            gapEls[i].style.width = `${gapWidth}px`;\n        }\n        this._outlineGapCalculationNeededOnStable = this._outlineGapCalculationNeededImmediately =\n            false;\n    }\n    /** Gets the start end of the rect considering the current directionality. */\n    _getStartEnd(rect) {\n        return this._dir && this._dir.value === 'rtl' ? rect.right : rect.left;\n    }\n    /** Checks whether the form field is attached to the DOM. */\n    _isAttachedToDOM() {\n        const element = this._elementRef.nativeElement;\n        if (element.getRootNode) {\n            const rootNode = element.getRootNode();\n            // If the element is inside the DOM the root node will be either the document\n            // or the closest shadow root, otherwise it'll be the element itself.\n            return rootNode && rootNode !== element;\n        }\n        // Otherwise fall back to checking if it's in the document. This doesn't account for\n        // shadow DOM, however browser that support shadow DOM should support `getRootNode` as well.\n        return document.documentElement.contains(element);\n    }\n}\nMatFormField.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatFormField, deps: [{ token: i0.ElementRef }, { token: i0.ChangeDetectorRef }, { token: i1.Directionality, optional: true }, { token: MAT_FORM_FIELD_DEFAULT_OPTIONS, optional: true }, { token: i2.Platform }, { token: i0.NgZone }, { token: ANIMATION_MODULE_TYPE, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nMatFormField.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatFormField, selector: \"mat-form-field\", inputs: { color: \"color\", appearance: \"appearance\", hideRequiredMarker: \"hideRequiredMarker\", hintLabel: \"hintLabel\", floatLabel: \"floatLabel\" }, host: { properties: { \"class.mat-form-field-appearance-standard\": \"appearance == \\\"standard\\\"\", \"class.mat-form-field-appearance-fill\": \"appearance == \\\"fill\\\"\", \"class.mat-form-field-appearance-outline\": \"appearance == \\\"outline\\\"\", \"class.mat-form-field-appearance-legacy\": \"appearance == \\\"legacy\\\"\", \"class.mat-form-field-invalid\": \"_control.errorState\", \"class.mat-form-field-can-float\": \"_canLabelFloat()\", \"class.mat-form-field-should-float\": \"_shouldLabelFloat()\", \"class.mat-form-field-has-label\": \"_hasFloatingLabel()\", \"class.mat-form-field-hide-placeholder\": \"_hideControlPlaceholder()\", \"class.mat-form-field-disabled\": \"_control.disabled\", \"class.mat-form-field-autofilled\": \"_control.autofilled\", \"class.mat-focused\": \"_control.focused\", \"class.ng-untouched\": \"_shouldForward(\\\"untouched\\\")\", \"class.ng-touched\": \"_shouldForward(\\\"touched\\\")\", \"class.ng-pristine\": \"_shouldForward(\\\"pristine\\\")\", \"class.ng-dirty\": \"_shouldForward(\\\"dirty\\\")\", \"class.ng-valid\": \"_shouldForward(\\\"valid\\\")\", \"class.ng-invalid\": \"_shouldForward(\\\"invalid\\\")\", \"class.ng-pending\": \"_shouldForward(\\\"pending\\\")\", \"class._mat-animation-noopable\": \"!_animationsEnabled\" }, classAttribute: \"mat-form-field\" }, providers: [{ provide: MAT_FORM_FIELD, useExisting: MatFormField }], queries: [{ propertyName: \"_controlNonStatic\", first: true, predicate: MatFormFieldControl, descendants: true }, { propertyName: \"_controlStatic\", first: true, predicate: MatFormFieldControl, descendants: true, static: true }, { propertyName: \"_labelChildNonStatic\", first: true, predicate: MatLabel, descendants: true }, { propertyName: \"_labelChildStatic\", first: true, predicate: MatLabel, descendants: true, static: true }, { propertyName: \"_placeholderChild\", first: true, predicate: MatPlaceholder, descendants: true }, { propertyName: \"_errorChildren\", predicate: MAT_ERROR, descendants: true }, { propertyName: \"_hintChildren\", predicate: _MAT_HINT, descendants: true }, { propertyName: \"_prefixChildren\", predicate: MAT_PREFIX, descendants: true }, { propertyName: \"_suffixChildren\", predicate: MAT_SUFFIX, descendants: true }], viewQueries: [{ propertyName: \"_connectionContainerRef\", first: true, predicate: [\"connectionContainer\"], descendants: true, static: true }, { propertyName: \"_inputContainerRef\", first: true, predicate: [\"inputContainer\"], descendants: true }, { propertyName: \"_label\", first: true, predicate: [\"label\"], descendants: true }], exportAs: [\"matFormField\"], usesInheritance: true, ngImport: i0, template: \"<div class=\\\"mat-form-field-wrapper\\\">\\n  <div class=\\\"mat-form-field-flex\\\" #connectionContainer\\n       (click)=\\\"_control.onContainerClick && _control.onContainerClick($event)\\\">\\n\\n    <!-- Outline used for outline appearance. -->\\n    <ng-container *ngIf=\\\"appearance == 'outline'\\\">\\n      <div class=\\\"mat-form-field-outline\\\">\\n        <div class=\\\"mat-form-field-outline-start\\\"></div>\\n        <div class=\\\"mat-form-field-outline-gap\\\"></div>\\n        <div class=\\\"mat-form-field-outline-end\\\"></div>\\n      </div>\\n      <div class=\\\"mat-form-field-outline mat-form-field-outline-thick\\\">\\n        <div class=\\\"mat-form-field-outline-start\\\"></div>\\n        <div class=\\\"mat-form-field-outline-gap\\\"></div>\\n        <div class=\\\"mat-form-field-outline-end\\\"></div>\\n      </div>\\n    </ng-container>\\n\\n    <div\\n      class=\\\"mat-form-field-prefix\\\"\\n      *ngIf=\\\"_prefixChildren.length\\\"\\n      (cdkObserveContent)=\\\"updateOutlineGap()\\\"\\n      [cdkObserveContentDisabled]=\\\"appearance != 'outline'\\\">\\n      <ng-content select=\\\"[matPrefix]\\\"></ng-content>\\n    </div>\\n\\n    <div class=\\\"mat-form-field-infix\\\" #inputContainer>\\n      <ng-content></ng-content>\\n\\n      <span class=\\\"mat-form-field-label-wrapper\\\">\\n        <!-- We add aria-owns as a workaround for an issue in JAWS & NVDA where the label isn't\\n             read if it comes before the control in the DOM. -->\\n        <label class=\\\"mat-form-field-label\\\"\\n               (cdkObserveContent)=\\\"updateOutlineGap()\\\"\\n               [cdkObserveContentDisabled]=\\\"appearance != 'outline'\\\"\\n               [id]=\\\"_labelId\\\"\\n               [attr.for]=\\\"_control.id\\\"\\n               [attr.aria-owns]=\\\"_control.id\\\"\\n               [class.mat-empty]=\\\"_control.empty && !_shouldAlwaysFloat()\\\"\\n               [class.mat-form-field-empty]=\\\"_control.empty && !_shouldAlwaysFloat()\\\"\\n               [class.mat-accent]=\\\"color == 'accent'\\\"\\n               [class.mat-warn]=\\\"color == 'warn'\\\"\\n               #label\\n               *ngIf=\\\"_hasFloatingLabel()\\\"\\n               [ngSwitch]=\\\"_hasLabel()\\\">\\n\\n          <!-- @breaking-change 8.0.0 remove in favor of mat-label element an placeholder attr. -->\\n          <ng-container *ngSwitchCase=\\\"false\\\">\\n            <ng-content select=\\\"mat-placeholder\\\"></ng-content>\\n            <span>{{_control.placeholder}}</span>\\n          </ng-container>\\n\\n          <ng-content select=\\\"mat-label\\\" *ngSwitchCase=\\\"true\\\"></ng-content>\\n\\n          <!-- @breaking-change 8.0.0 remove `mat-placeholder-required` class -->\\n          <span\\n            class=\\\"mat-placeholder-required mat-form-field-required-marker\\\"\\n            aria-hidden=\\\"true\\\"\\n            *ngIf=\\\"!hideRequiredMarker && _control.required && !_control.disabled\\\">&#32;*</span>\\n        </label>\\n      </span>\\n    </div>\\n\\n    <div class=\\\"mat-form-field-suffix\\\" *ngIf=\\\"_suffixChildren.length\\\">\\n      <ng-content select=\\\"[matSuffix]\\\"></ng-content>\\n    </div>\\n  </div>\\n\\n  <!-- Underline used for legacy, standard, and box appearances. -->\\n  <div class=\\\"mat-form-field-underline\\\"\\n       *ngIf=\\\"appearance != 'outline'\\\">\\n    <span class=\\\"mat-form-field-ripple\\\"\\n          [class.mat-accent]=\\\"color == 'accent'\\\"\\n          [class.mat-warn]=\\\"color == 'warn'\\\"></span>\\n  </div>\\n\\n  <div class=\\\"mat-form-field-subscript-wrapper\\\"\\n       [ngSwitch]=\\\"_getDisplayedMessages()\\\">\\n    <div *ngSwitchCase=\\\"'error'\\\" [@transitionMessages]=\\\"_subscriptAnimationState\\\">\\n      <ng-content select=\\\"mat-error\\\"></ng-content>\\n    </div>\\n\\n    <div class=\\\"mat-form-field-hint-wrapper\\\" *ngSwitchCase=\\\"'hint'\\\"\\n      [@transitionMessages]=\\\"_subscriptAnimationState\\\">\\n      <!-- TODO(mmalerba): use an actual <mat-hint> once all selectors are switched to mat-* -->\\n      <div *ngIf=\\\"hintLabel\\\" [id]=\\\"_hintLabelId\\\" class=\\\"mat-hint\\\">{{hintLabel}}</div>\\n      <ng-content select=\\\"mat-hint:not([align='end'])\\\"></ng-content>\\n      <div class=\\\"mat-form-field-hint-spacer\\\"></div>\\n      <ng-content select=\\\"mat-hint[align='end']\\\"></ng-content>\\n    </div>\\n  </div>\\n</div>\\n\", styles: [\".mat-form-field{display:inline-block;position:relative;text-align:left}[dir=rtl] .mat-form-field{text-align:right}.mat-form-field-wrapper{position:relative}.mat-form-field-flex{display:inline-flex;align-items:baseline;box-sizing:border-box;width:100%}.mat-form-field-prefix,.mat-form-field-suffix{white-space:nowrap;flex:none;position:relative}.mat-form-field-infix{display:block;position:relative;flex:auto;min-width:0;width:180px}.cdk-high-contrast-active .mat-form-field-infix{border-image:linear-gradient(transparent, transparent)}.mat-form-field-label-wrapper{position:absolute;left:0;box-sizing:content-box;width:100%;height:100%;overflow:hidden;pointer-events:none}[dir=rtl] .mat-form-field-label-wrapper{left:auto;right:0}.mat-form-field-label{position:absolute;left:0;font:inherit;pointer-events:none;width:100%;white-space:nowrap;text-overflow:ellipsis;overflow:hidden;transform-origin:0 0;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),color 400ms cubic-bezier(0.25, 0.8, 0.25, 1),width 400ms cubic-bezier(0.25, 0.8, 0.25, 1);display:none}[dir=rtl] .mat-form-field-label{transform-origin:100% 0;left:auto;right:0}.mat-form-field-empty.mat-form-field-label,.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label{display:block}.mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:block;transition:none}.mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-form-field-can-float .mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:block}.mat-form-field-label:not(.mat-form-field-empty){transition:none}.mat-form-field-underline{position:absolute;width:100%;pointer-events:none;transform:scale3d(1, 1.0001, 1)}.mat-form-field-ripple{position:absolute;left:0;width:100%;transform-origin:50%;transform:scaleX(0.5);opacity:0;transition:background-color 300ms cubic-bezier(0.55, 0, 0.55, 0.2)}.mat-form-field.mat-focused .mat-form-field-ripple,.mat-form-field.mat-form-field-invalid .mat-form-field-ripple{opacity:1;transform:none;transition:transform 300ms cubic-bezier(0.25, 0.8, 0.25, 1),opacity 100ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 300ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-subscript-wrapper{position:absolute;box-sizing:border-box;width:100%;overflow:hidden}.mat-form-field-subscript-wrapper .mat-icon,.mat-form-field-label-wrapper .mat-icon{width:1em;height:1em;font-size:inherit;vertical-align:baseline}.mat-form-field-hint-wrapper{display:flex}.mat-form-field-hint-spacer{flex:1 0 1em}.mat-error{display:block}.mat-form-field-control-wrapper{position:relative}.mat-form-field-hint-end{order:1}.mat-form-field._mat-animation-noopable .mat-form-field-label,.mat-form-field._mat-animation-noopable .mat-form-field-ripple{transition:none}\\n\", \".mat-form-field-appearance-fill .mat-form-field-flex{border-radius:4px 4px 0 0;padding:.75em .75em 0 .75em}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-form-field-flex{outline:solid 1px}.cdk-high-contrast-active .mat-form-field-appearance-fill.mat-focused .mat-form-field-flex{outline:dashed 3px}.mat-form-field-appearance-fill .mat-form-field-underline::before{content:\\\"\\\";display:block;position:absolute;bottom:0;height:1px;width:100%}.mat-form-field-appearance-fill .mat-form-field-ripple{bottom:0;height:2px}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-form-field-ripple{height:0}.mat-form-field-appearance-fill:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-fill._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}.mat-form-field-appearance-fill .mat-form-field-subscript-wrapper{padding:0 1em}\\n\", \".mat-input-element{font:inherit;background:transparent;color:currentColor;border:none;outline:none;padding:0;margin:0;width:100%;max-width:100%;vertical-align:bottom;text-align:inherit;box-sizing:content-box}.mat-input-element:-moz-ui-invalid{box-shadow:none}.mat-input-element,.mat-input-element::-webkit-search-cancel-button,.mat-input-element::-webkit-search-decoration,.mat-input-element::-webkit-search-results-button,.mat-input-element::-webkit-search-results-decoration{-webkit-appearance:none}.mat-input-element::-webkit-contacts-auto-fill-button,.mat-input-element::-webkit-caps-lock-indicator,.mat-input-element:not([type=password])::-webkit-credentials-auto-fill-button{visibility:hidden}.mat-input-element[type=date],.mat-input-element[type=datetime],.mat-input-element[type=datetime-local],.mat-input-element[type=month],.mat-input-element[type=week],.mat-input-element[type=time]{line-height:1}.mat-input-element[type=date]::after,.mat-input-element[type=datetime]::after,.mat-input-element[type=datetime-local]::after,.mat-input-element[type=month]::after,.mat-input-element[type=week]::after,.mat-input-element[type=time]::after{content:\\\" \\\";white-space:pre;width:1px}.mat-input-element::-webkit-inner-spin-button,.mat-input-element::-webkit-calendar-picker-indicator,.mat-input-element::-webkit-clear-button{font-size:.75em}.mat-input-element::placeholder{-webkit-user-select:none;-moz-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::-moz-placeholder{-webkit-user-select:none;-moz-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::-webkit-input-placeholder{-webkit-user-select:none;-moz-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element:-ms-input-placeholder{-webkit-user-select:none;-moz-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-hide-placeholder .mat-input-element::placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.cdk-high-contrast-active .mat-form-field-hide-placeholder .mat-input-element::placeholder{opacity:0}.mat-form-field-hide-placeholder .mat-input-element::-moz-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.cdk-high-contrast-active .mat-form-field-hide-placeholder .mat-input-element::-moz-placeholder{opacity:0}.mat-form-field-hide-placeholder .mat-input-element::-webkit-input-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.cdk-high-contrast-active .mat-form-field-hide-placeholder .mat-input-element::-webkit-input-placeholder{opacity:0}.mat-form-field-hide-placeholder .mat-input-element:-ms-input-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.cdk-high-contrast-active .mat-form-field-hide-placeholder .mat-input-element:-ms-input-placeholder{opacity:0}textarea.mat-input-element{resize:vertical;overflow:auto}textarea.mat-input-element.cdk-textarea-autosize{resize:none}textarea.mat-input-element{padding:2px 0;margin:-2px 0}select.mat-input-element{-moz-appearance:none;-webkit-appearance:none;position:relative;background-color:transparent;display:inline-flex;box-sizing:border-box;padding-top:1em;top:-1em;margin-bottom:-1em}select.mat-input-element::-moz-focus-inner{border:0}select.mat-input-element:not(:disabled){cursor:pointer}.mat-form-field-type-mat-native-select .mat-form-field-infix::after{content:\\\"\\\";width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top:5px solid;position:absolute;top:50%;right:0;margin-top:-2.5px;pointer-events:none}[dir=rtl] .mat-form-field-type-mat-native-select .mat-form-field-infix::after{right:auto;left:0}.mat-form-field-type-mat-native-select .mat-input-element{padding-right:15px}[dir=rtl] .mat-form-field-type-mat-native-select .mat-input-element{padding-right:0;padding-left:15px}.mat-form-field-type-mat-native-select .mat-form-field-label-wrapper{max-width:calc(100% - 10px)}.mat-form-field-type-mat-native-select.mat-form-field-appearance-outline .mat-form-field-infix::after{margin-top:-5px}.mat-form-field-type-mat-native-select.mat-form-field-appearance-fill .mat-form-field-infix::after{margin-top:-10px}\\n\", \".mat-form-field-appearance-legacy .mat-form-field-label{transform:perspective(100px)}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon{width:1em}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button{font:inherit;vertical-align:baseline}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button .mat-icon{font-size:inherit}.mat-form-field-appearance-legacy .mat-form-field-underline{height:1px}.cdk-high-contrast-active .mat-form-field-appearance-legacy .mat-form-field-underline{height:0;border-top:solid 1px}.mat-form-field-appearance-legacy .mat-form-field-ripple{top:0;height:2px;overflow:hidden}.cdk-high-contrast-active .mat-form-field-appearance-legacy .mat-form-field-ripple{height:0;border-top:solid 2px}.mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}.cdk-high-contrast-active .mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}.mat-form-field-appearance-legacy.mat-form-field-invalid:not(.mat-focused) .mat-form-field-ripple{height:1px}\\n\", \".mat-form-field-appearance-outline .mat-form-field-wrapper{margin:.25em 0}.mat-form-field-appearance-outline .mat-form-field-flex{padding:0 .75em 0 .75em;margin-top:-0.25em;position:relative}.mat-form-field-appearance-outline .mat-form-field-prefix,.mat-form-field-appearance-outline .mat-form-field-suffix{top:.25em}.mat-form-field-appearance-outline .mat-form-field-outline{display:flex;position:absolute;top:.25em;left:0;right:0;bottom:0;pointer-events:none}.mat-form-field-appearance-outline .mat-form-field-outline-start,.mat-form-field-appearance-outline .mat-form-field-outline-end{border:1px solid currentColor;min-width:5px}.mat-form-field-appearance-outline .mat-form-field-outline-start{border-radius:5px 0 0 5px;border-right-style:none}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-start{border-right-style:solid;border-left-style:none;border-radius:0 5px 5px 0}.mat-form-field-appearance-outline .mat-form-field-outline-end{border-radius:0 5px 5px 0;border-left-style:none;flex-grow:1}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-end{border-left-style:solid;border-right-style:none;border-radius:5px 0 0 5px}.mat-form-field-appearance-outline .mat-form-field-outline-gap{border-radius:.000001px;border:1px solid currentColor;border-left-style:none;border-right-style:none}.mat-form-field-appearance-outline.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-outline-gap{border-top-color:transparent}.mat-form-field-appearance-outline .mat-form-field-outline-thick{opacity:0}.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-start,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-end,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-gap{border-width:2px}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline{opacity:0;transition:opacity 100ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline-thick,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline-thick{opacity:1}.cdk-high-contrast-active .mat-form-field-appearance-outline.mat-focused .mat-form-field-outline-thick{border:3px dashed}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline{opacity:0;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline-thick{opacity:1}.mat-form-field-appearance-outline .mat-form-field-subscript-wrapper{padding:0 1em}.mat-form-field-appearance-outline._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-start,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-end,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-gap{transition:none}\\n\", \".mat-form-field-appearance-standard .mat-form-field-flex{padding-top:.75em}.mat-form-field-appearance-standard .mat-form-field-underline{height:1px}.cdk-high-contrast-active .mat-form-field-appearance-standard .mat-form-field-underline{height:0;border-top:solid 1px}.mat-form-field-appearance-standard .mat-form-field-ripple{bottom:0;height:2px}.cdk-high-contrast-active .mat-form-field-appearance-standard .mat-form-field-ripple{height:0;border-top:solid 2px}.mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}.cdk-high-contrast-active .mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}.mat-form-field-appearance-standard:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-standard._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}\\n\"], directives: [{ type: i3.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i4.CdkObserveContent, selector: \"[cdkObserveContent]\", inputs: [\"cdkObserveContentDisabled\", \"debounce\"], outputs: [\"cdkObserveContent\"], exportAs: [\"cdkObserveContent\"] }, { type: i3.NgSwitch, selector: \"[ngSwitch]\", inputs: [\"ngSwitch\"] }, { type: i3.NgSwitchCase, selector: \"[ngSwitchCase]\", inputs: [\"ngSwitchCase\"] }], animations: [matFormFieldAnimations.transitionMessages], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatFormField, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-form-field', exportAs: 'matFormField', animations: [matFormFieldAnimations.transitionMessages], host: {\n                        'class': 'mat-form-field',\n                        '[class.mat-form-field-appearance-standard]': 'appearance == \"standard\"',\n                        '[class.mat-form-field-appearance-fill]': 'appearance == \"fill\"',\n                        '[class.mat-form-field-appearance-outline]': 'appearance == \"outline\"',\n                        '[class.mat-form-field-appearance-legacy]': 'appearance == \"legacy\"',\n                        '[class.mat-form-field-invalid]': '_control.errorState',\n                        '[class.mat-form-field-can-float]': '_canLabelFloat()',\n                        '[class.mat-form-field-should-float]': '_shouldLabelFloat()',\n                        '[class.mat-form-field-has-label]': '_hasFloatingLabel()',\n                        '[class.mat-form-field-hide-placeholder]': '_hideControlPlaceholder()',\n                        '[class.mat-form-field-disabled]': '_control.disabled',\n                        '[class.mat-form-field-autofilled]': '_control.autofilled',\n                        '[class.mat-focused]': '_control.focused',\n                        '[class.ng-untouched]': '_shouldForward(\"untouched\")',\n                        '[class.ng-touched]': '_shouldForward(\"touched\")',\n                        '[class.ng-pristine]': '_shouldForward(\"pristine\")',\n                        '[class.ng-dirty]': '_shouldForward(\"dirty\")',\n                        '[class.ng-valid]': '_shouldForward(\"valid\")',\n                        '[class.ng-invalid]': '_shouldForward(\"invalid\")',\n                        '[class.ng-pending]': '_shouldForward(\"pending\")',\n                        '[class._mat-animation-noopable]': '!_animationsEnabled',\n                    }, inputs: ['color'], encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, providers: [{ provide: MAT_FORM_FIELD, useExisting: MatFormField }], template: \"<div class=\\\"mat-form-field-wrapper\\\">\\n  <div class=\\\"mat-form-field-flex\\\" #connectionContainer\\n       (click)=\\\"_control.onContainerClick && _control.onContainerClick($event)\\\">\\n\\n    <!-- Outline used for outline appearance. -->\\n    <ng-container *ngIf=\\\"appearance == 'outline'\\\">\\n      <div class=\\\"mat-form-field-outline\\\">\\n        <div class=\\\"mat-form-field-outline-start\\\"></div>\\n        <div class=\\\"mat-form-field-outline-gap\\\"></div>\\n        <div class=\\\"mat-form-field-outline-end\\\"></div>\\n      </div>\\n      <div class=\\\"mat-form-field-outline mat-form-field-outline-thick\\\">\\n        <div class=\\\"mat-form-field-outline-start\\\"></div>\\n        <div class=\\\"mat-form-field-outline-gap\\\"></div>\\n        <div class=\\\"mat-form-field-outline-end\\\"></div>\\n      </div>\\n    </ng-container>\\n\\n    <div\\n      class=\\\"mat-form-field-prefix\\\"\\n      *ngIf=\\\"_prefixChildren.length\\\"\\n      (cdkObserveContent)=\\\"updateOutlineGap()\\\"\\n      [cdkObserveContentDisabled]=\\\"appearance != 'outline'\\\">\\n      <ng-content select=\\\"[matPrefix]\\\"></ng-content>\\n    </div>\\n\\n    <div class=\\\"mat-form-field-infix\\\" #inputContainer>\\n      <ng-content></ng-content>\\n\\n      <span class=\\\"mat-form-field-label-wrapper\\\">\\n        <!-- We add aria-owns as a workaround for an issue in JAWS & NVDA where the label isn't\\n             read if it comes before the control in the DOM. -->\\n        <label class=\\\"mat-form-field-label\\\"\\n               (cdkObserveContent)=\\\"updateOutlineGap()\\\"\\n               [cdkObserveContentDisabled]=\\\"appearance != 'outline'\\\"\\n               [id]=\\\"_labelId\\\"\\n               [attr.for]=\\\"_control.id\\\"\\n               [attr.aria-owns]=\\\"_control.id\\\"\\n               [class.mat-empty]=\\\"_control.empty && !_shouldAlwaysFloat()\\\"\\n               [class.mat-form-field-empty]=\\\"_control.empty && !_shouldAlwaysFloat()\\\"\\n               [class.mat-accent]=\\\"color == 'accent'\\\"\\n               [class.mat-warn]=\\\"color == 'warn'\\\"\\n               #label\\n               *ngIf=\\\"_hasFloatingLabel()\\\"\\n               [ngSwitch]=\\\"_hasLabel()\\\">\\n\\n          <!-- @breaking-change 8.0.0 remove in favor of mat-label element an placeholder attr. -->\\n          <ng-container *ngSwitchCase=\\\"false\\\">\\n            <ng-content select=\\\"mat-placeholder\\\"></ng-content>\\n            <span>{{_control.placeholder}}</span>\\n          </ng-container>\\n\\n          <ng-content select=\\\"mat-label\\\" *ngSwitchCase=\\\"true\\\"></ng-content>\\n\\n          <!-- @breaking-change 8.0.0 remove `mat-placeholder-required` class -->\\n          <span\\n            class=\\\"mat-placeholder-required mat-form-field-required-marker\\\"\\n            aria-hidden=\\\"true\\\"\\n            *ngIf=\\\"!hideRequiredMarker && _control.required && !_control.disabled\\\">&#32;*</span>\\n        </label>\\n      </span>\\n    </div>\\n\\n    <div class=\\\"mat-form-field-suffix\\\" *ngIf=\\\"_suffixChildren.length\\\">\\n      <ng-content select=\\\"[matSuffix]\\\"></ng-content>\\n    </div>\\n  </div>\\n\\n  <!-- Underline used for legacy, standard, and box appearances. -->\\n  <div class=\\\"mat-form-field-underline\\\"\\n       *ngIf=\\\"appearance != 'outline'\\\">\\n    <span class=\\\"mat-form-field-ripple\\\"\\n          [class.mat-accent]=\\\"color == 'accent'\\\"\\n          [class.mat-warn]=\\\"color == 'warn'\\\"></span>\\n  </div>\\n\\n  <div class=\\\"mat-form-field-subscript-wrapper\\\"\\n       [ngSwitch]=\\\"_getDisplayedMessages()\\\">\\n    <div *ngSwitchCase=\\\"'error'\\\" [@transitionMessages]=\\\"_subscriptAnimationState\\\">\\n      <ng-content select=\\\"mat-error\\\"></ng-content>\\n    </div>\\n\\n    <div class=\\\"mat-form-field-hint-wrapper\\\" *ngSwitchCase=\\\"'hint'\\\"\\n      [@transitionMessages]=\\\"_subscriptAnimationState\\\">\\n      <!-- TODO(mmalerba): use an actual <mat-hint> once all selectors are switched to mat-* -->\\n      <div *ngIf=\\\"hintLabel\\\" [id]=\\\"_hintLabelId\\\" class=\\\"mat-hint\\\">{{hintLabel}}</div>\\n      <ng-content select=\\\"mat-hint:not([align='end'])\\\"></ng-content>\\n      <div class=\\\"mat-form-field-hint-spacer\\\"></div>\\n      <ng-content select=\\\"mat-hint[align='end']\\\"></ng-content>\\n    </div>\\n  </div>\\n</div>\\n\", styles: [\".mat-form-field{display:inline-block;position:relative;text-align:left}[dir=rtl] .mat-form-field{text-align:right}.mat-form-field-wrapper{position:relative}.mat-form-field-flex{display:inline-flex;align-items:baseline;box-sizing:border-box;width:100%}.mat-form-field-prefix,.mat-form-field-suffix{white-space:nowrap;flex:none;position:relative}.mat-form-field-infix{display:block;position:relative;flex:auto;min-width:0;width:180px}.cdk-high-contrast-active .mat-form-field-infix{border-image:linear-gradient(transparent, transparent)}.mat-form-field-label-wrapper{position:absolute;left:0;box-sizing:content-box;width:100%;height:100%;overflow:hidden;pointer-events:none}[dir=rtl] .mat-form-field-label-wrapper{left:auto;right:0}.mat-form-field-label{position:absolute;left:0;font:inherit;pointer-events:none;width:100%;white-space:nowrap;text-overflow:ellipsis;overflow:hidden;transform-origin:0 0;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),color 400ms cubic-bezier(0.25, 0.8, 0.25, 1),width 400ms cubic-bezier(0.25, 0.8, 0.25, 1);display:none}[dir=rtl] .mat-form-field-label{transform-origin:100% 0;left:auto;right:0}.mat-form-field-empty.mat-form-field-label,.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label{display:block}.mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:block;transition:none}.mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-form-field-can-float .mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:block}.mat-form-field-label:not(.mat-form-field-empty){transition:none}.mat-form-field-underline{position:absolute;width:100%;pointer-events:none;transform:scale3d(1, 1.0001, 1)}.mat-form-field-ripple{position:absolute;left:0;width:100%;transform-origin:50%;transform:scaleX(0.5);opacity:0;transition:background-color 300ms cubic-bezier(0.55, 0, 0.55, 0.2)}.mat-form-field.mat-focused .mat-form-field-ripple,.mat-form-field.mat-form-field-invalid .mat-form-field-ripple{opacity:1;transform:none;transition:transform 300ms cubic-bezier(0.25, 0.8, 0.25, 1),opacity 100ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 300ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-subscript-wrapper{position:absolute;box-sizing:border-box;width:100%;overflow:hidden}.mat-form-field-subscript-wrapper .mat-icon,.mat-form-field-label-wrapper .mat-icon{width:1em;height:1em;font-size:inherit;vertical-align:baseline}.mat-form-field-hint-wrapper{display:flex}.mat-form-field-hint-spacer{flex:1 0 1em}.mat-error{display:block}.mat-form-field-control-wrapper{position:relative}.mat-form-field-hint-end{order:1}.mat-form-field._mat-animation-noopable .mat-form-field-label,.mat-form-field._mat-animation-noopable .mat-form-field-ripple{transition:none}\\n\", \".mat-form-field-appearance-fill .mat-form-field-flex{border-radius:4px 4px 0 0;padding:.75em .75em 0 .75em}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-form-field-flex{outline:solid 1px}.cdk-high-contrast-active .mat-form-field-appearance-fill.mat-focused .mat-form-field-flex{outline:dashed 3px}.mat-form-field-appearance-fill .mat-form-field-underline::before{content:\\\"\\\";display:block;position:absolute;bottom:0;height:1px;width:100%}.mat-form-field-appearance-fill .mat-form-field-ripple{bottom:0;height:2px}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-form-field-ripple{height:0}.mat-form-field-appearance-fill:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-fill._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}.mat-form-field-appearance-fill .mat-form-field-subscript-wrapper{padding:0 1em}\\n\", \".mat-input-element{font:inherit;background:transparent;color:currentColor;border:none;outline:none;padding:0;margin:0;width:100%;max-width:100%;vertical-align:bottom;text-align:inherit;box-sizing:content-box}.mat-input-element:-moz-ui-invalid{box-shadow:none}.mat-input-element,.mat-input-element::-webkit-search-cancel-button,.mat-input-element::-webkit-search-decoration,.mat-input-element::-webkit-search-results-button,.mat-input-element::-webkit-search-results-decoration{-webkit-appearance:none}.mat-input-element::-webkit-contacts-auto-fill-button,.mat-input-element::-webkit-caps-lock-indicator,.mat-input-element:not([type=password])::-webkit-credentials-auto-fill-button{visibility:hidden}.mat-input-element[type=date],.mat-input-element[type=datetime],.mat-input-element[type=datetime-local],.mat-input-element[type=month],.mat-input-element[type=week],.mat-input-element[type=time]{line-height:1}.mat-input-element[type=date]::after,.mat-input-element[type=datetime]::after,.mat-input-element[type=datetime-local]::after,.mat-input-element[type=month]::after,.mat-input-element[type=week]::after,.mat-input-element[type=time]::after{content:\\\" \\\";white-space:pre;width:1px}.mat-input-element::-webkit-inner-spin-button,.mat-input-element::-webkit-calendar-picker-indicator,.mat-input-element::-webkit-clear-button{font-size:.75em}.mat-input-element::placeholder{-webkit-user-select:none;-moz-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::-moz-placeholder{-webkit-user-select:none;-moz-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::-webkit-input-placeholder{-webkit-user-select:none;-moz-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element:-ms-input-placeholder{-webkit-user-select:none;-moz-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-hide-placeholder .mat-input-element::placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.cdk-high-contrast-active .mat-form-field-hide-placeholder .mat-input-element::placeholder{opacity:0}.mat-form-field-hide-placeholder .mat-input-element::-moz-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.cdk-high-contrast-active .mat-form-field-hide-placeholder .mat-input-element::-moz-placeholder{opacity:0}.mat-form-field-hide-placeholder .mat-input-element::-webkit-input-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.cdk-high-contrast-active .mat-form-field-hide-placeholder .mat-input-element::-webkit-input-placeholder{opacity:0}.mat-form-field-hide-placeholder .mat-input-element:-ms-input-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.cdk-high-contrast-active .mat-form-field-hide-placeholder .mat-input-element:-ms-input-placeholder{opacity:0}textarea.mat-input-element{resize:vertical;overflow:auto}textarea.mat-input-element.cdk-textarea-autosize{resize:none}textarea.mat-input-element{padding:2px 0;margin:-2px 0}select.mat-input-element{-moz-appearance:none;-webkit-appearance:none;position:relative;background-color:transparent;display:inline-flex;box-sizing:border-box;padding-top:1em;top:-1em;margin-bottom:-1em}select.mat-input-element::-moz-focus-inner{border:0}select.mat-input-element:not(:disabled){cursor:pointer}.mat-form-field-type-mat-native-select .mat-form-field-infix::after{content:\\\"\\\";width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top:5px solid;position:absolute;top:50%;right:0;margin-top:-2.5px;pointer-events:none}[dir=rtl] .mat-form-field-type-mat-native-select .mat-form-field-infix::after{right:auto;left:0}.mat-form-field-type-mat-native-select .mat-input-element{padding-right:15px}[dir=rtl] .mat-form-field-type-mat-native-select .mat-input-element{padding-right:0;padding-left:15px}.mat-form-field-type-mat-native-select .mat-form-field-label-wrapper{max-width:calc(100% - 10px)}.mat-form-field-type-mat-native-select.mat-form-field-appearance-outline .mat-form-field-infix::after{margin-top:-5px}.mat-form-field-type-mat-native-select.mat-form-field-appearance-fill .mat-form-field-infix::after{margin-top:-10px}\\n\", \".mat-form-field-appearance-legacy .mat-form-field-label{transform:perspective(100px)}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon{width:1em}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button{font:inherit;vertical-align:baseline}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button .mat-icon{font-size:inherit}.mat-form-field-appearance-legacy .mat-form-field-underline{height:1px}.cdk-high-contrast-active .mat-form-field-appearance-legacy .mat-form-field-underline{height:0;border-top:solid 1px}.mat-form-field-appearance-legacy .mat-form-field-ripple{top:0;height:2px;overflow:hidden}.cdk-high-contrast-active .mat-form-field-appearance-legacy .mat-form-field-ripple{height:0;border-top:solid 2px}.mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}.cdk-high-contrast-active .mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}.mat-form-field-appearance-legacy.mat-form-field-invalid:not(.mat-focused) .mat-form-field-ripple{height:1px}\\n\", \".mat-form-field-appearance-outline .mat-form-field-wrapper{margin:.25em 0}.mat-form-field-appearance-outline .mat-form-field-flex{padding:0 .75em 0 .75em;margin-top:-0.25em;position:relative}.mat-form-field-appearance-outline .mat-form-field-prefix,.mat-form-field-appearance-outline .mat-form-field-suffix{top:.25em}.mat-form-field-appearance-outline .mat-form-field-outline{display:flex;position:absolute;top:.25em;left:0;right:0;bottom:0;pointer-events:none}.mat-form-field-appearance-outline .mat-form-field-outline-start,.mat-form-field-appearance-outline .mat-form-field-outline-end{border:1px solid currentColor;min-width:5px}.mat-form-field-appearance-outline .mat-form-field-outline-start{border-radius:5px 0 0 5px;border-right-style:none}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-start{border-right-style:solid;border-left-style:none;border-radius:0 5px 5px 0}.mat-form-field-appearance-outline .mat-form-field-outline-end{border-radius:0 5px 5px 0;border-left-style:none;flex-grow:1}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-end{border-left-style:solid;border-right-style:none;border-radius:5px 0 0 5px}.mat-form-field-appearance-outline .mat-form-field-outline-gap{border-radius:.000001px;border:1px solid currentColor;border-left-style:none;border-right-style:none}.mat-form-field-appearance-outline.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-outline-gap{border-top-color:transparent}.mat-form-field-appearance-outline .mat-form-field-outline-thick{opacity:0}.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-start,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-end,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-gap{border-width:2px}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline{opacity:0;transition:opacity 100ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline-thick,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline-thick{opacity:1}.cdk-high-contrast-active .mat-form-field-appearance-outline.mat-focused .mat-form-field-outline-thick{border:3px dashed}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline{opacity:0;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline-thick{opacity:1}.mat-form-field-appearance-outline .mat-form-field-subscript-wrapper{padding:0 1em}.mat-form-field-appearance-outline._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-start,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-end,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-gap{transition:none}\\n\", \".mat-form-field-appearance-standard .mat-form-field-flex{padding-top:.75em}.mat-form-field-appearance-standard .mat-form-field-underline{height:1px}.cdk-high-contrast-active .mat-form-field-appearance-standard .mat-form-field-underline{height:0;border-top:solid 1px}.mat-form-field-appearance-standard .mat-form-field-ripple{bottom:0;height:2px}.cdk-high-contrast-active .mat-form-field-appearance-standard .mat-form-field-ripple{height:0;border-top:solid 2px}.mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}.cdk-high-contrast-active .mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}.mat-form-field-appearance-standard:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-standard._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}\\n\"] }]\n        }], ctorParameters: function () {\n        return [{ type: i0.ElementRef }, { type: i0.ChangeDetectorRef }, { type: i1.Directionality, decorators: [{\n                        type: Optional\n                    }] }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [MAT_FORM_FIELD_DEFAULT_OPTIONS]\n                    }] }, { type: i2.Platform }, { type: i0.NgZone }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [ANIMATION_MODULE_TYPE]\n                    }] }];\n    }, propDecorators: { appearance: [{\n                type: Input\n            }], hideRequiredMarker: [{\n                type: Input\n            }], hintLabel: [{\n                type: Input\n            }], floatLabel: [{\n                type: Input\n            }], _connectionContainerRef: [{\n                type: ViewChild,\n                args: ['connectionContainer', { static: true }]\n            }], _inputContainerRef: [{\n                type: ViewChild,\n                args: ['inputContainer']\n            }], _label: [{\n                type: ViewChild,\n                args: ['label']\n            }], _controlNonStatic: [{\n                type: ContentChild,\n                args: [MatFormFieldControl]\n            }], _controlStatic: [{\n                type: ContentChild,\n                args: [MatFormFieldControl, { static: true }]\n            }], _labelChildNonStatic: [{\n                type: ContentChild,\n                args: [MatLabel]\n            }], _labelChildStatic: [{\n                type: ContentChild,\n                args: [MatLabel, { static: true }]\n            }], _placeholderChild: [{\n                type: ContentChild,\n                args: [MatPlaceholder]\n            }], _errorChildren: [{\n                type: ContentChildren,\n                args: [MAT_ERROR, { descendants: true }]\n            }], _hintChildren: [{\n                type: ContentChildren,\n                args: [_MAT_HINT, { descendants: true }]\n            }], _prefixChildren: [{\n                type: ContentChildren,\n                args: [MAT_PREFIX, { descendants: true }]\n            }], _suffixChildren: [{\n                type: ContentChildren,\n                args: [MAT_SUFFIX, { descendants: true }]\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatFormFieldModule {\n}\nMatFormFieldModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatFormFieldModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatFormFieldModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatFormFieldModule, declarations: [MatError, MatFormField, MatHint, MatLabel, MatPlaceholder, MatPrefix, MatSuffix], imports: [CommonModule, MatCommonModule, ObserversModule], exports: [MatCommonModule,\n        MatError,\n        MatFormField,\n        MatHint,\n        MatLabel,\n        MatPlaceholder,\n        MatPrefix,\n        MatSuffix] });\nMatFormFieldModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatFormFieldModule, imports: [[CommonModule, MatCommonModule, ObserversModule], MatCommonModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatFormFieldModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [MatError, MatFormField, MatHint, MatLabel, MatPlaceholder, MatPrefix, MatSuffix],\n                    imports: [CommonModule, MatCommonModule, ObserversModule],\n                    exports: [\n                        MatCommonModule,\n                        MatError,\n                        MatFormField,\n                        MatHint,\n                        MatLabel,\n                        MatPlaceholder,\n                        MatPrefix,\n                        MatSuffix,\n                    ],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_ERROR, MAT_FORM_FIELD, MAT_FORM_FIELD_DEFAULT_OPTIONS, MAT_PREFIX, MAT_SUFFIX, MatError, MatFormField, MatFormFieldControl, MatFormFieldModule, MatHint, MatLabel, MatPlaceholder, MatPrefix, MatSuffix, _MAT_HINT, getMatFormFieldDuplicatedHintError, getMatFormFieldMissingControlError, getMatFormFieldPlaceholderConflictError, matFormFieldAnimations };\n","import { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport * as i1 from '@angular/cdk/platform';\nimport { getSupportedInputTypes } from '@angular/cdk/platform';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, Directive, Optional, Self, Inject, Input, NgModule } from '@angular/core';\nimport * as i2 from '@angular/forms';\nimport { Validators } from '@angular/forms';\nimport * as i3 from '@angular/material/core';\nimport { mixinErrorState, MatCommonModule, ErrorStateMatcher } from '@angular/material/core';\nimport * as i5 from '@angular/material/form-field';\nimport { MAT_FORM_FIELD, MatFormFieldControl, MatFormFieldModule } from '@angular/material/form-field';\nimport { Subject } from 'rxjs';\nimport * as i4 from '@angular/cdk/text-field';\nimport { TextFieldModule } from '@angular/cdk/text-field';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @docs-private */\nfunction getMatInputUnsupportedTypeError(type) {\n    return Error(`Input type \"${type}\" isn't supported by matInput.`);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * This token is used to inject the object whose value should be set into `MatInput`. If none is\n * provided, the native `HTMLInputElement` is used. Directives like `MatDatepickerInput` can provide\n * themselves for this token, in order to make `MatInput` delegate the getting and setting of the\n * value to them.\n */\nconst MAT_INPUT_VALUE_ACCESSOR = new InjectionToken('MAT_INPUT_VALUE_ACCESSOR');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Invalid input type. Using one of these will throw an MatInputUnsupportedTypeError.\nconst MAT_INPUT_INVALID_TYPES = [\n    'button',\n    'checkbox',\n    'file',\n    'hidden',\n    'image',\n    'radio',\n    'range',\n    'reset',\n    'submit',\n];\nlet nextUniqueId = 0;\n// Boilerplate for applying mixins to MatInput.\n/** @docs-private */\nconst _MatInputBase = mixinErrorState(class {\n    constructor(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, \n    /** @docs-private */\n    ngControl) {\n        this._defaultErrorStateMatcher = _defaultErrorStateMatcher;\n        this._parentForm = _parentForm;\n        this._parentFormGroup = _parentFormGroup;\n        this.ngControl = ngControl;\n    }\n});\n/** Directive that allows a native input to work inside a `MatFormField`. */\nclass MatInput extends _MatInputBase {\n    constructor(_elementRef, _platform, ngControl, _parentForm, _parentFormGroup, _defaultErrorStateMatcher, inputValueAccessor, _autofillMonitor, ngZone, \n    // TODO: Remove this once the legacy appearance has been removed. We only need\n    // to inject the form-field for determining whether the placeholder has been promoted.\n    _formField) {\n        super(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl);\n        this._elementRef = _elementRef;\n        this._platform = _platform;\n        this._autofillMonitor = _autofillMonitor;\n        this._formField = _formField;\n        this._uid = `mat-input-${nextUniqueId++}`;\n        /**\n         * Implemented as part of MatFormFieldControl.\n         * @docs-private\n         */\n        this.focused = false;\n        /**\n         * Implemented as part of MatFormFieldControl.\n         * @docs-private\n         */\n        this.stateChanges = new Subject();\n        /**\n         * Implemented as part of MatFormFieldControl.\n         * @docs-private\n         */\n        this.controlType = 'mat-input';\n        /**\n         * Implemented as part of MatFormFieldControl.\n         * @docs-private\n         */\n        this.autofilled = false;\n        this._disabled = false;\n        this._type = 'text';\n        this._readonly = false;\n        this._neverEmptyInputTypes = [\n            'date',\n            'datetime',\n            'datetime-local',\n            'month',\n            'time',\n            'week',\n        ].filter(t => getSupportedInputTypes().has(t));\n        const element = this._elementRef.nativeElement;\n        const nodeName = element.nodeName.toLowerCase();\n        // If no input value accessor was explicitly specified, use the element as the input value\n        // accessor.\n        this._inputValueAccessor = inputValueAccessor || element;\n        this._previousNativeValue = this.value;\n        // Force setter to be called in case id was not specified.\n        this.id = this.id;\n        // On some versions of iOS the caret gets stuck in the wrong place when holding down the delete\n        // key. In order to get around this we need to \"jiggle\" the caret loose. Since this bug only\n        // exists on iOS, we only bother to install the listener on iOS.\n        if (_platform.IOS) {\n            ngZone.runOutsideAngular(() => {\n                _elementRef.nativeElement.addEventListener('keyup', (event) => {\n                    const el = event.target;\n                    // Note: We specifically check for 0, rather than `!el.selectionStart`, because the two\n                    // indicate different things. If the value is 0, it means that the caret is at the start\n                    // of the input, whereas a value of `null` means that the input doesn't support\n                    // manipulating the selection range. Inputs that don't support setting the selection range\n                    // will throw an error so we want to avoid calling `setSelectionRange` on them. See:\n                    // https://html.spec.whatwg.org/multipage/input.html#do-not-apply\n                    if (!el.value && el.selectionStart === 0 && el.selectionEnd === 0) {\n                        // Note: Just setting `0, 0` doesn't fix the issue. Setting\n                        // `1, 1` fixes it for the first time that you type text and\n                        // then hold delete. Toggling to `1, 1` and then back to\n                        // `0, 0` seems to completely fix it.\n                        el.setSelectionRange(1, 1);\n                        el.setSelectionRange(0, 0);\n                    }\n                });\n            });\n        }\n        this._isServer = !this._platform.isBrowser;\n        this._isNativeSelect = nodeName === 'select';\n        this._isTextarea = nodeName === 'textarea';\n        this._isInFormField = !!_formField;\n        if (this._isNativeSelect) {\n            this.controlType = element.multiple\n                ? 'mat-native-select-multiple'\n                : 'mat-native-select';\n        }\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get disabled() {\n        if (this.ngControl && this.ngControl.disabled !== null) {\n            return this.ngControl.disabled;\n        }\n        return this._disabled;\n    }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        // Browsers may not fire the blur event if the input is disabled too quickly.\n        // Reset from here to ensure that the element doesn't become stuck.\n        if (this.focused) {\n            this.focused = false;\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get id() {\n        return this._id;\n    }\n    set id(value) {\n        this._id = value || this._uid;\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get required() {\n        var _a, _b, _c, _d;\n        return (_d = (_a = this._required) !== null && _a !== void 0 ? _a : (_c = (_b = this.ngControl) === null || _b === void 0 ? void 0 : _b.control) === null || _c === void 0 ? void 0 : _c.hasValidator(Validators.required)) !== null && _d !== void 0 ? _d : false;\n    }\n    set required(value) {\n        this._required = coerceBooleanProperty(value);\n    }\n    /** Input type of the element. */\n    get type() {\n        return this._type;\n    }\n    set type(value) {\n        this._type = value || 'text';\n        this._validateType();\n        // When using Angular inputs, developers are no longer able to set the properties on the native\n        // input element. To ensure that bindings for `type` work, we need to sync the setter\n        // with the native property. Textarea elements don't support the type property or attribute.\n        if (!this._isTextarea && getSupportedInputTypes().has(this._type)) {\n            this._elementRef.nativeElement.type = this._type;\n        }\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get value() {\n        return this._inputValueAccessor.value;\n    }\n    set value(value) {\n        if (value !== this.value) {\n            this._inputValueAccessor.value = value;\n            this.stateChanges.next();\n        }\n    }\n    /** Whether the element is readonly. */\n    get readonly() {\n        return this._readonly;\n    }\n    set readonly(value) {\n        this._readonly = coerceBooleanProperty(value);\n    }\n    ngAfterViewInit() {\n        if (this._platform.isBrowser) {\n            this._autofillMonitor.monitor(this._elementRef.nativeElement).subscribe(event => {\n                this.autofilled = event.isAutofilled;\n                this.stateChanges.next();\n            });\n        }\n    }\n    ngOnChanges() {\n        this.stateChanges.next();\n    }\n    ngOnDestroy() {\n        this.stateChanges.complete();\n        if (this._platform.isBrowser) {\n            this._autofillMonitor.stopMonitoring(this._elementRef.nativeElement);\n        }\n    }\n    ngDoCheck() {\n        if (this.ngControl) {\n            // We need to re-evaluate this on every change detection cycle, because there are some\n            // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n            // that whatever logic is in here has to be super lean or we risk destroying the performance.\n            this.updateErrorState();\n        }\n        // We need to dirty-check the native element's value, because there are some cases where\n        // we won't be notified when it changes (e.g. the consumer isn't using forms or they're\n        // updating the value using `emitEvent: false`).\n        this._dirtyCheckNativeValue();\n        // We need to dirty-check and set the placeholder attribute ourselves, because whether it's\n        // present or not depends on a query which is prone to \"changed after checked\" errors.\n        this._dirtyCheckPlaceholder();\n    }\n    /** Focuses the input. */\n    focus(options) {\n        this._elementRef.nativeElement.focus(options);\n    }\n    /** Callback for the cases where the focused state of the input changes. */\n    _focusChanged(isFocused) {\n        if (isFocused !== this.focused) {\n            this.focused = isFocused;\n            this.stateChanges.next();\n        }\n    }\n    _onInput() {\n        // This is a noop function and is used to let Angular know whenever the value changes.\n        // Angular will run a new change detection each time the `input` event has been dispatched.\n        // It's necessary that Angular recognizes the value change, because when floatingLabel\n        // is set to false and Angular forms aren't used, the placeholder won't recognize the\n        // value changes and will not disappear.\n        // Listening to the input event wouldn't be necessary when the input is using the\n        // FormsModule or ReactiveFormsModule, because Angular forms also listens to input events.\n    }\n    /** Does some manual dirty checking on the native input `placeholder` attribute. */\n    _dirtyCheckPlaceholder() {\n        var _a, _b;\n        // If we're hiding the native placeholder, it should also be cleared from the DOM, otherwise\n        // screen readers will read it out twice: once from the label and once from the attribute.\n        // TODO: can be removed once we get rid of the `legacy` style for the form field, because it's\n        // the only one that supports promoting the placeholder to a label.\n        const placeholder = ((_b = (_a = this._formField) === null || _a === void 0 ? void 0 : _a._hideControlPlaceholder) === null || _b === void 0 ? void 0 : _b.call(_a)) ? null : this.placeholder;\n        if (placeholder !== this._previousPlaceholder) {\n            const element = this._elementRef.nativeElement;\n            this._previousPlaceholder = placeholder;\n            placeholder\n                ? element.setAttribute('placeholder', placeholder)\n                : element.removeAttribute('placeholder');\n        }\n    }\n    /** Does some manual dirty checking on the native input `value` property. */\n    _dirtyCheckNativeValue() {\n        const newValue = this._elementRef.nativeElement.value;\n        if (this._previousNativeValue !== newValue) {\n            this._previousNativeValue = newValue;\n            this.stateChanges.next();\n        }\n    }\n    /** Make sure the input is a supported type. */\n    _validateType() {\n        if (MAT_INPUT_INVALID_TYPES.indexOf(this._type) > -1 &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getMatInputUnsupportedTypeError(this._type);\n        }\n    }\n    /** Checks whether the input type is one of the types that are never empty. */\n    _isNeverEmpty() {\n        return this._neverEmptyInputTypes.indexOf(this._type) > -1;\n    }\n    /** Checks whether the input is invalid based on the native validation. */\n    _isBadInput() {\n        // The `validity` property won't be present on platform-server.\n        let validity = this._elementRef.nativeElement.validity;\n        return validity && validity.badInput;\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get empty() {\n        return (!this._isNeverEmpty() &&\n            !this._elementRef.nativeElement.value &&\n            !this._isBadInput() &&\n            !this.autofilled);\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get shouldLabelFloat() {\n        if (this._isNativeSelect) {\n            // For a single-selection `<select>`, the label should float when the selected option has\n            // a non-empty display value. For a `<select multiple>`, the label *always* floats to avoid\n            // overlapping the label with the options.\n            const selectElement = this._elementRef.nativeElement;\n            const firstOption = selectElement.options[0];\n            // On most browsers the `selectedIndex` will always be 0, however on IE and Edge it'll be\n            // -1 if the `value` is set to something, that isn't in the list of options, at a later point.\n            return (this.focused ||\n                selectElement.multiple ||\n                !this.empty ||\n                !!(selectElement.selectedIndex > -1 && firstOption && firstOption.label));\n        }\n        else {\n            return this.focused || !this.empty;\n        }\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    setDescribedByIds(ids) {\n        if (ids.length) {\n            this._elementRef.nativeElement.setAttribute('aria-describedby', ids.join(' '));\n        }\n        else {\n            this._elementRef.nativeElement.removeAttribute('aria-describedby');\n        }\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    onContainerClick() {\n        // Do not re-focus the input element if the element is already focused. Otherwise it can happen\n        // that someone clicks on a time input and the cursor resets to the \"hours\" field while the\n        // \"minutes\" field was actually clicked. See: https://github.com/angular/components/issues/12849\n        if (!this.focused) {\n            this.focus();\n        }\n    }\n    /** Whether the form control is a native select that is displayed inline. */\n    _isInlineSelect() {\n        const element = this._elementRef.nativeElement;\n        return this._isNativeSelect && (element.multiple || element.size > 1);\n    }\n}\nMatInput.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatInput, deps: [{ token: i0.ElementRef }, { token: i1.Platform }, { token: i2.NgControl, optional: true, self: true }, { token: i2.NgForm, optional: true }, { token: i2.FormGroupDirective, optional: true }, { token: i3.ErrorStateMatcher }, { token: MAT_INPUT_VALUE_ACCESSOR, optional: true, self: true }, { token: i4.AutofillMonitor }, { token: i0.NgZone }, { token: MAT_FORM_FIELD, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nMatInput.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatInput, selector: \"input[matInput], textarea[matInput], select[matNativeControl],\\n      input[matNativeControl], textarea[matNativeControl]\", inputs: { disabled: \"disabled\", id: \"id\", placeholder: \"placeholder\", required: \"required\", type: \"type\", errorStateMatcher: \"errorStateMatcher\", userAriaDescribedBy: [\"aria-describedby\", \"userAriaDescribedBy\"], value: \"value\", readonly: \"readonly\" }, host: { listeners: { \"focus\": \"_focusChanged(true)\", \"blur\": \"_focusChanged(false)\", \"input\": \"_onInput()\" }, properties: { \"class.mat-input-server\": \"_isServer\", \"attr.id\": \"id\", \"attr.data-placeholder\": \"placeholder\", \"disabled\": \"disabled\", \"required\": \"required\", \"attr.readonly\": \"readonly && !_isNativeSelect || null\", \"class.mat-native-select-inline\": \"_isInlineSelect()\", \"attr.aria-invalid\": \"(empty && required) ? null : errorState\", \"attr.aria-required\": \"required\" }, classAttribute: \"mat-input-element mat-form-field-autofill-control\" }, providers: [{ provide: MatFormFieldControl, useExisting: MatInput }], exportAs: [\"matInput\"], usesInheritance: true, usesOnChanges: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatInput, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: `input[matInput], textarea[matInput], select[matNativeControl],\n      input[matNativeControl], textarea[matNativeControl]`,\n                    exportAs: 'matInput',\n                    host: {\n                        /**\n                         * @breaking-change 8.0.0 remove .mat-form-field-autofill-control in favor of AutofillMonitor.\n                         */\n                        'class': 'mat-input-element mat-form-field-autofill-control',\n                        '[class.mat-input-server]': '_isServer',\n                        // Native input properties that are overwritten by Angular inputs need to be synced with\n                        // the native input element. Otherwise property bindings for those don't work.\n                        '[attr.id]': 'id',\n                        // At the time of writing, we have a lot of customer tests that look up the input based on its\n                        // placeholder. Since we sometimes omit the placeholder attribute from the DOM to prevent screen\n                        // readers from reading it twice, we have to keep it somewhere in the DOM for the lookup.\n                        '[attr.data-placeholder]': 'placeholder',\n                        '[disabled]': 'disabled',\n                        '[required]': 'required',\n                        '[attr.readonly]': 'readonly && !_isNativeSelect || null',\n                        '[class.mat-native-select-inline]': '_isInlineSelect()',\n                        // Only mark the input as invalid for assistive technology if it has a value since the\n                        // state usually overlaps with `aria-required` when the input is empty and can be redundant.\n                        '[attr.aria-invalid]': '(empty && required) ? null : errorState',\n                        '[attr.aria-required]': 'required',\n                        '(focus)': '_focusChanged(true)',\n                        '(blur)': '_focusChanged(false)',\n                        '(input)': '_onInput()',\n                    },\n                    providers: [{ provide: MatFormFieldControl, useExisting: MatInput }],\n                }]\n        }], ctorParameters: function () {\n        return [{ type: i0.ElementRef }, { type: i1.Platform }, { type: i2.NgControl, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Self\n                    }] }, { type: i2.NgForm, decorators: [{\n                        type: Optional\n                    }] }, { type: i2.FormGroupDirective, decorators: [{\n                        type: Optional\n                    }] }, { type: i3.ErrorStateMatcher }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Self\n                    }, {\n                        type: Inject,\n                        args: [MAT_INPUT_VALUE_ACCESSOR]\n                    }] }, { type: i4.AutofillMonitor }, { type: i0.NgZone }, { type: i5.MatFormField, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [MAT_FORM_FIELD]\n                    }] }];\n    }, propDecorators: { disabled: [{\n                type: Input\n            }], id: [{\n                type: Input\n            }], placeholder: [{\n                type: Input\n            }], required: [{\n                type: Input\n            }], type: [{\n                type: Input\n            }], errorStateMatcher: [{\n                type: Input\n            }], userAriaDescribedBy: [{\n                type: Input,\n                args: ['aria-describedby']\n            }], value: [{\n                type: Input\n            }], readonly: [{\n                type: Input\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatInputModule {\n}\nMatInputModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatInputModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatInputModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatInputModule, declarations: [MatInput], imports: [TextFieldModule, MatFormFieldModule, MatCommonModule], exports: [TextFieldModule,\n        // We re-export the `MatFormFieldModule` since `MatInput` will almost always\n        // be used together with `MatFormField`.\n        MatFormFieldModule,\n        MatInput] });\nMatInputModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatInputModule, providers: [ErrorStateMatcher], imports: [[TextFieldModule, MatFormFieldModule, MatCommonModule], TextFieldModule,\n        // We re-export the `MatFormFieldModule` since `MatInput` will almost always\n        // be used together with `MatFormField`.\n        MatFormFieldModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatInputModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [MatInput],\n                    imports: [TextFieldModule, MatFormFieldModule, MatCommonModule],\n                    exports: [\n                        TextFieldModule,\n                        // We re-export the `MatFormFieldModule` since `MatInput` will almost always\n                        // be used together with `MatFormField`.\n                        MatFormFieldModule,\n                        MatInput,\n                    ],\n                    providers: [ErrorStateMatcher],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_INPUT_VALUE_ACCESSOR, MatInput, MatInputModule, getMatInputUnsupportedTypeError };\n","import * as i0 from '@angular/core';\nimport { Directive, Component, ViewEncapsulation, ChangeDetectionStrategy, Input, NgModule } from '@angular/core';\nimport * as i1 from '@angular/cdk/table';\nimport { CdkTable, CDK_TABLE, _COALESCED_STYLE_SCHEDULER, _CoalescedStyleScheduler, STICKY_POSITIONING_LISTENER, CDK_TABLE_TEMPLATE, CdkCellDef, CdkHeaderCellDef, CdkFooterCellDef, CdkColumnDef, CdkHeaderCell, CdkFooterCell, CdkCell, CdkHeaderRowDef, CdkFooterRowDef, CdkRowDef, CdkHeaderRow, CDK_ROW_TEMPLATE, CdkFooterRow, CdkRow, CdkNoDataRow, CdkTextColumn, CdkTableModule, DataSource } from '@angular/cdk/table';\nimport { _VIEW_REPEATER_STRATEGY, _RecycleViewRepeaterStrategy, _DisposeViewRepeaterStrategy } from '@angular/cdk/collections';\nimport { MatCommonModule } from '@angular/material/core';\nimport { _isNumberValue } from '@angular/cdk/coercion';\nimport { BehaviorSubject, Subject, merge, of, combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Enables the recycle view repeater strategy, which reduces rendering latency. Not compatible with\n * tables that animate rows.\n */\nclass MatRecycleRows {\n}\nMatRecycleRows.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatRecycleRows, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nMatRecycleRows.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatRecycleRows, selector: \"mat-table[recycleRows], table[mat-table][recycleRows]\", providers: [{ provide: _VIEW_REPEATER_STRATEGY, useClass: _RecycleViewRepeaterStrategy }], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatRecycleRows, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-table[recycleRows], table[mat-table][recycleRows]',\n                    providers: [{ provide: _VIEW_REPEATER_STRATEGY, useClass: _RecycleViewRepeaterStrategy }],\n                }]\n        }] });\n/**\n * Wrapper for the CdkTable with Material design styles.\n */\nclass MatTable extends CdkTable {\n    constructor() {\n        super(...arguments);\n        /** Overrides the sticky CSS class set by the `CdkTable`. */\n        this.stickyCssClass = 'mat-table-sticky';\n        /** Overrides the need to add position: sticky on every sticky cell element in `CdkTable`. */\n        this.needsPositionStickyOnElement = false;\n    }\n}\nMatTable.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatTable, deps: null, target: i0.ɵɵFactoryTarget.Component });\nMatTable.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatTable, selector: \"mat-table, table[mat-table]\", host: { properties: { \"class.mat-table-fixed-layout\": \"fixedLayout\" }, classAttribute: \"mat-table\" }, providers: [\n        // TODO(michaeljamesparsons) Abstract the view repeater strategy to a directive API so this code\n        //  is only included in the build if used.\n        { provide: _VIEW_REPEATER_STRATEGY, useClass: _DisposeViewRepeaterStrategy },\n        { provide: CdkTable, useExisting: MatTable },\n        { provide: CDK_TABLE, useExisting: MatTable },\n        { provide: _COALESCED_STYLE_SCHEDULER, useClass: _CoalescedStyleScheduler },\n        // Prevent nested tables from seeing this table's StickyPositioningListener.\n        { provide: STICKY_POSITIONING_LISTENER, useValue: null },\n    ], exportAs: [\"matTable\"], usesInheritance: true, ngImport: i0, template: \"\\n  <ng-content select=\\\"caption\\\"></ng-content>\\n  <ng-content select=\\\"colgroup, col\\\"></ng-content>\\n  <ng-container headerRowOutlet></ng-container>\\n  <ng-container rowOutlet></ng-container>\\n  <ng-container noDataRowOutlet></ng-container>\\n  <ng-container footerRowOutlet></ng-container>\\n\", isInline: true, styles: [\"mat-table{display:block}mat-header-row{min-height:56px}mat-row,mat-footer-row{min-height:48px}mat-row,mat-header-row,mat-footer-row{display:flex;border-width:0;border-bottom-width:1px;border-style:solid;align-items:center;box-sizing:border-box}mat-row::after,mat-header-row::after,mat-footer-row::after{display:inline-block;min-height:inherit;content:\\\"\\\"}mat-cell:first-of-type,mat-header-cell:first-of-type,mat-footer-cell:first-of-type{padding-left:24px}[dir=rtl] mat-cell:first-of-type:not(:only-of-type),[dir=rtl] mat-header-cell:first-of-type:not(:only-of-type),[dir=rtl] mat-footer-cell:first-of-type:not(:only-of-type){padding-left:0;padding-right:24px}mat-cell:last-of-type,mat-header-cell:last-of-type,mat-footer-cell:last-of-type{padding-right:24px}[dir=rtl] mat-cell:last-of-type:not(:only-of-type),[dir=rtl] mat-header-cell:last-of-type:not(:only-of-type),[dir=rtl] mat-footer-cell:last-of-type:not(:only-of-type){padding-right:0;padding-left:24px}mat-cell,mat-header-cell,mat-footer-cell{flex:1;display:flex;align-items:center;overflow:hidden;word-wrap:break-word;min-height:inherit}table.mat-table{border-spacing:0}tr.mat-header-row{height:56px}tr.mat-row,tr.mat-footer-row{height:48px}th.mat-header-cell{text-align:left}[dir=rtl] th.mat-header-cell{text-align:right}th.mat-header-cell,td.mat-cell,td.mat-footer-cell{padding:0;border-bottom-width:1px;border-bottom-style:solid}th.mat-header-cell:first-of-type,td.mat-cell:first-of-type,td.mat-footer-cell:first-of-type{padding-left:24px}[dir=rtl] th.mat-header-cell:first-of-type:not(:only-of-type),[dir=rtl] td.mat-cell:first-of-type:not(:only-of-type),[dir=rtl] td.mat-footer-cell:first-of-type:not(:only-of-type){padding-left:0;padding-right:24px}th.mat-header-cell:last-of-type,td.mat-cell:last-of-type,td.mat-footer-cell:last-of-type{padding-right:24px}[dir=rtl] th.mat-header-cell:last-of-type:not(:only-of-type),[dir=rtl] td.mat-cell:last-of-type:not(:only-of-type),[dir=rtl] td.mat-footer-cell:last-of-type:not(:only-of-type){padding-right:0;padding-left:24px}.mat-table-sticky{position:-webkit-sticky !important;position:sticky !important}.mat-table-fixed-layout{table-layout:fixed}\\n\"], directives: [{ type: i1.HeaderRowOutlet, selector: \"[headerRowOutlet]\" }, { type: i1.DataRowOutlet, selector: \"[rowOutlet]\" }, { type: i1.NoDataRowOutlet, selector: \"[noDataRowOutlet]\" }, { type: i1.FooterRowOutlet, selector: \"[footerRowOutlet]\" }], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatTable, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-table, table[mat-table]', exportAs: 'matTable', template: CDK_TABLE_TEMPLATE, host: {\n                        'class': 'mat-table',\n                        '[class.mat-table-fixed-layout]': 'fixedLayout',\n                    }, providers: [\n                        // TODO(michaeljamesparsons) Abstract the view repeater strategy to a directive API so this code\n                        //  is only included in the build if used.\n                        { provide: _VIEW_REPEATER_STRATEGY, useClass: _DisposeViewRepeaterStrategy },\n                        { provide: CdkTable, useExisting: MatTable },\n                        { provide: CDK_TABLE, useExisting: MatTable },\n                        { provide: _COALESCED_STYLE_SCHEDULER, useClass: _CoalescedStyleScheduler },\n                        // Prevent nested tables from seeing this table's StickyPositioningListener.\n                        { provide: STICKY_POSITIONING_LISTENER, useValue: null },\n                    ], encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.Default, styles: [\"mat-table{display:block}mat-header-row{min-height:56px}mat-row,mat-footer-row{min-height:48px}mat-row,mat-header-row,mat-footer-row{display:flex;border-width:0;border-bottom-width:1px;border-style:solid;align-items:center;box-sizing:border-box}mat-row::after,mat-header-row::after,mat-footer-row::after{display:inline-block;min-height:inherit;content:\\\"\\\"}mat-cell:first-of-type,mat-header-cell:first-of-type,mat-footer-cell:first-of-type{padding-left:24px}[dir=rtl] mat-cell:first-of-type:not(:only-of-type),[dir=rtl] mat-header-cell:first-of-type:not(:only-of-type),[dir=rtl] mat-footer-cell:first-of-type:not(:only-of-type){padding-left:0;padding-right:24px}mat-cell:last-of-type,mat-header-cell:last-of-type,mat-footer-cell:last-of-type{padding-right:24px}[dir=rtl] mat-cell:last-of-type:not(:only-of-type),[dir=rtl] mat-header-cell:last-of-type:not(:only-of-type),[dir=rtl] mat-footer-cell:last-of-type:not(:only-of-type){padding-right:0;padding-left:24px}mat-cell,mat-header-cell,mat-footer-cell{flex:1;display:flex;align-items:center;overflow:hidden;word-wrap:break-word;min-height:inherit}table.mat-table{border-spacing:0}tr.mat-header-row{height:56px}tr.mat-row,tr.mat-footer-row{height:48px}th.mat-header-cell{text-align:left}[dir=rtl] th.mat-header-cell{text-align:right}th.mat-header-cell,td.mat-cell,td.mat-footer-cell{padding:0;border-bottom-width:1px;border-bottom-style:solid}th.mat-header-cell:first-of-type,td.mat-cell:first-of-type,td.mat-footer-cell:first-of-type{padding-left:24px}[dir=rtl] th.mat-header-cell:first-of-type:not(:only-of-type),[dir=rtl] td.mat-cell:first-of-type:not(:only-of-type),[dir=rtl] td.mat-footer-cell:first-of-type:not(:only-of-type){padding-left:0;padding-right:24px}th.mat-header-cell:last-of-type,td.mat-cell:last-of-type,td.mat-footer-cell:last-of-type{padding-right:24px}[dir=rtl] th.mat-header-cell:last-of-type:not(:only-of-type),[dir=rtl] td.mat-cell:last-of-type:not(:only-of-type),[dir=rtl] td.mat-footer-cell:last-of-type:not(:only-of-type){padding-right:0;padding-left:24px}.mat-table-sticky{position:-webkit-sticky !important;position:sticky !important}.mat-table-fixed-layout{table-layout:fixed}\\n\"] }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Cell definition for the mat-table.\n * Captures the template of a column's data row cell as well as cell-specific properties.\n */\nclass MatCellDef extends CdkCellDef {\n}\nMatCellDef.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatCellDef, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nMatCellDef.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatCellDef, selector: \"[matCellDef]\", providers: [{ provide: CdkCellDef, useExisting: MatCellDef }], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatCellDef, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matCellDef]',\n                    providers: [{ provide: CdkCellDef, useExisting: MatCellDef }],\n                }]\n        }] });\n/**\n * Header cell definition for the mat-table.\n * Captures the template of a column's header cell and as well as cell-specific properties.\n */\nclass MatHeaderCellDef extends CdkHeaderCellDef {\n}\nMatHeaderCellDef.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatHeaderCellDef, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nMatHeaderCellDef.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatHeaderCellDef, selector: \"[matHeaderCellDef]\", providers: [{ provide: CdkHeaderCellDef, useExisting: MatHeaderCellDef }], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatHeaderCellDef, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matHeaderCellDef]',\n                    providers: [{ provide: CdkHeaderCellDef, useExisting: MatHeaderCellDef }],\n                }]\n        }] });\n/**\n * Footer cell definition for the mat-table.\n * Captures the template of a column's footer cell and as well as cell-specific properties.\n */\nclass MatFooterCellDef extends CdkFooterCellDef {\n}\nMatFooterCellDef.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatFooterCellDef, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nMatFooterCellDef.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatFooterCellDef, selector: \"[matFooterCellDef]\", providers: [{ provide: CdkFooterCellDef, useExisting: MatFooterCellDef }], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatFooterCellDef, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matFooterCellDef]',\n                    providers: [{ provide: CdkFooterCellDef, useExisting: MatFooterCellDef }],\n                }]\n        }] });\n/**\n * Column definition for the mat-table.\n * Defines a set of cells available for a table column.\n */\nclass MatColumnDef extends CdkColumnDef {\n    /** Unique name for this column. */\n    get name() {\n        return this._name;\n    }\n    set name(name) {\n        this._setNameInput(name);\n    }\n    /**\n     * Add \"mat-column-\" prefix in addition to \"cdk-column-\" prefix.\n     * In the future, this will only add \"mat-column-\" and columnCssClassName\n     * will change from type string[] to string.\n     * @docs-private\n     */\n    _updateColumnCssClassName() {\n        super._updateColumnCssClassName();\n        this._columnCssClassName.push(`mat-column-${this.cssClassFriendlyName}`);\n    }\n}\nMatColumnDef.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatColumnDef, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nMatColumnDef.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatColumnDef, selector: \"[matColumnDef]\", inputs: { sticky: \"sticky\", name: [\"matColumnDef\", \"name\"] }, providers: [\n        { provide: CdkColumnDef, useExisting: MatColumnDef },\n        { provide: 'MAT_SORT_HEADER_COLUMN_DEF', useExisting: MatColumnDef },\n    ], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatColumnDef, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matColumnDef]',\n                    inputs: ['sticky'],\n                    providers: [\n                        { provide: CdkColumnDef, useExisting: MatColumnDef },\n                        { provide: 'MAT_SORT_HEADER_COLUMN_DEF', useExisting: MatColumnDef },\n                    ],\n                }]\n        }], propDecorators: { name: [{\n                type: Input,\n                args: ['matColumnDef']\n            }] } });\n/** Header cell template container that adds the right classes and role. */\nclass MatHeaderCell extends CdkHeaderCell {\n}\nMatHeaderCell.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatHeaderCell, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nMatHeaderCell.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatHeaderCell, selector: \"mat-header-cell, th[mat-header-cell]\", host: { attributes: { \"role\": \"columnheader\" }, classAttribute: \"mat-header-cell\" }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatHeaderCell, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-header-cell, th[mat-header-cell]',\n                    host: {\n                        'class': 'mat-header-cell',\n                        'role': 'columnheader',\n                    },\n                }]\n        }] });\n/** Footer cell template container that adds the right classes and role. */\nclass MatFooterCell extends CdkFooterCell {\n}\nMatFooterCell.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatFooterCell, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nMatFooterCell.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatFooterCell, selector: \"mat-footer-cell, td[mat-footer-cell]\", host: { attributes: { \"role\": \"gridcell\" }, classAttribute: \"mat-footer-cell\" }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatFooterCell, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-footer-cell, td[mat-footer-cell]',\n                    host: {\n                        'class': 'mat-footer-cell',\n                        'role': 'gridcell',\n                    },\n                }]\n        }] });\n/** Cell template container that adds the right classes and role. */\nclass MatCell extends CdkCell {\n}\nMatCell.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatCell, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nMatCell.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatCell, selector: \"mat-cell, td[mat-cell]\", host: { attributes: { \"role\": \"gridcell\" }, classAttribute: \"mat-cell\" }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatCell, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-cell, td[mat-cell]',\n                    host: {\n                        'class': 'mat-cell',\n                        'role': 'gridcell',\n                    },\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Header row definition for the mat-table.\n * Captures the header row's template and other header properties such as the columns to display.\n */\nclass MatHeaderRowDef extends CdkHeaderRowDef {\n}\nMatHeaderRowDef.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatHeaderRowDef, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nMatHeaderRowDef.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatHeaderRowDef, selector: \"[matHeaderRowDef]\", inputs: { columns: [\"matHeaderRowDef\", \"columns\"], sticky: [\"matHeaderRowDefSticky\", \"sticky\"] }, providers: [{ provide: CdkHeaderRowDef, useExisting: MatHeaderRowDef }], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatHeaderRowDef, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matHeaderRowDef]',\n                    providers: [{ provide: CdkHeaderRowDef, useExisting: MatHeaderRowDef }],\n                    inputs: ['columns: matHeaderRowDef', 'sticky: matHeaderRowDefSticky'],\n                }]\n        }] });\n/**\n * Footer row definition for the mat-table.\n * Captures the footer row's template and other footer properties such as the columns to display.\n */\nclass MatFooterRowDef extends CdkFooterRowDef {\n}\nMatFooterRowDef.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatFooterRowDef, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nMatFooterRowDef.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatFooterRowDef, selector: \"[matFooterRowDef]\", inputs: { columns: [\"matFooterRowDef\", \"columns\"], sticky: [\"matFooterRowDefSticky\", \"sticky\"] }, providers: [{ provide: CdkFooterRowDef, useExisting: MatFooterRowDef }], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatFooterRowDef, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matFooterRowDef]',\n                    providers: [{ provide: CdkFooterRowDef, useExisting: MatFooterRowDef }],\n                    inputs: ['columns: matFooterRowDef', 'sticky: matFooterRowDefSticky'],\n                }]\n        }] });\n/**\n * Data row definition for the mat-table.\n * Captures the data row's template and other properties such as the columns to display and\n * a when predicate that describes when this row should be used.\n */\nclass MatRowDef extends CdkRowDef {\n}\nMatRowDef.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatRowDef, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nMatRowDef.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatRowDef, selector: \"[matRowDef]\", inputs: { columns: [\"matRowDefColumns\", \"columns\"], when: [\"matRowDefWhen\", \"when\"] }, providers: [{ provide: CdkRowDef, useExisting: MatRowDef }], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatRowDef, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matRowDef]',\n                    providers: [{ provide: CdkRowDef, useExisting: MatRowDef }],\n                    inputs: ['columns: matRowDefColumns', 'when: matRowDefWhen'],\n                }]\n        }] });\n/** Header template container that contains the cell outlet. Adds the right class and role. */\nclass MatHeaderRow extends CdkHeaderRow {\n}\nMatHeaderRow.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatHeaderRow, deps: null, target: i0.ɵɵFactoryTarget.Component });\nMatHeaderRow.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatHeaderRow, selector: \"mat-header-row, tr[mat-header-row]\", host: { attributes: { \"role\": \"row\" }, classAttribute: \"mat-header-row\" }, providers: [{ provide: CdkHeaderRow, useExisting: MatHeaderRow }], exportAs: [\"matHeaderRow\"], usesInheritance: true, ngImport: i0, template: \"<ng-container cdkCellOutlet></ng-container>\", isInline: true, directives: [{ type: i1.CdkCellOutlet, selector: \"[cdkCellOutlet]\" }], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatHeaderRow, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'mat-header-row, tr[mat-header-row]',\n                    template: CDK_ROW_TEMPLATE,\n                    host: {\n                        'class': 'mat-header-row',\n                        'role': 'row',\n                    },\n                    // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                    // tslint:disable-next-line:validate-decorators\n                    changeDetection: ChangeDetectionStrategy.Default,\n                    encapsulation: ViewEncapsulation.None,\n                    exportAs: 'matHeaderRow',\n                    providers: [{ provide: CdkHeaderRow, useExisting: MatHeaderRow }],\n                }]\n        }] });\n/** Footer template container that contains the cell outlet. Adds the right class and role. */\nclass MatFooterRow extends CdkFooterRow {\n}\nMatFooterRow.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatFooterRow, deps: null, target: i0.ɵɵFactoryTarget.Component });\nMatFooterRow.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatFooterRow, selector: \"mat-footer-row, tr[mat-footer-row]\", host: { attributes: { \"role\": \"row\" }, classAttribute: \"mat-footer-row\" }, providers: [{ provide: CdkFooterRow, useExisting: MatFooterRow }], exportAs: [\"matFooterRow\"], usesInheritance: true, ngImport: i0, template: \"<ng-container cdkCellOutlet></ng-container>\", isInline: true, directives: [{ type: i1.CdkCellOutlet, selector: \"[cdkCellOutlet]\" }], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatFooterRow, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'mat-footer-row, tr[mat-footer-row]',\n                    template: CDK_ROW_TEMPLATE,\n                    host: {\n                        'class': 'mat-footer-row',\n                        'role': 'row',\n                    },\n                    // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                    // tslint:disable-next-line:validate-decorators\n                    changeDetection: ChangeDetectionStrategy.Default,\n                    encapsulation: ViewEncapsulation.None,\n                    exportAs: 'matFooterRow',\n                    providers: [{ provide: CdkFooterRow, useExisting: MatFooterRow }],\n                }]\n        }] });\n/** Data row template container that contains the cell outlet. Adds the right class and role. */\nclass MatRow extends CdkRow {\n}\nMatRow.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatRow, deps: null, target: i0.ɵɵFactoryTarget.Component });\nMatRow.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatRow, selector: \"mat-row, tr[mat-row]\", host: { attributes: { \"role\": \"row\" }, classAttribute: \"mat-row\" }, providers: [{ provide: CdkRow, useExisting: MatRow }], exportAs: [\"matRow\"], usesInheritance: true, ngImport: i0, template: \"<ng-container cdkCellOutlet></ng-container>\", isInline: true, directives: [{ type: i1.CdkCellOutlet, selector: \"[cdkCellOutlet]\" }], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatRow, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'mat-row, tr[mat-row]',\n                    template: CDK_ROW_TEMPLATE,\n                    host: {\n                        'class': 'mat-row',\n                        'role': 'row',\n                    },\n                    // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                    // tslint:disable-next-line:validate-decorators\n                    changeDetection: ChangeDetectionStrategy.Default,\n                    encapsulation: ViewEncapsulation.None,\n                    exportAs: 'matRow',\n                    providers: [{ provide: CdkRow, useExisting: MatRow }],\n                }]\n        }] });\n/** Row that can be used to display a message when no data is shown in the table. */\nclass MatNoDataRow extends CdkNoDataRow {\n    constructor() {\n        super(...arguments);\n        this._contentClassName = 'mat-no-data-row';\n    }\n}\nMatNoDataRow.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatNoDataRow, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nMatNoDataRow.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatNoDataRow, selector: \"ng-template[matNoDataRow]\", providers: [{ provide: CdkNoDataRow, useExisting: MatNoDataRow }], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatNoDataRow, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'ng-template[matNoDataRow]',\n                    providers: [{ provide: CdkNoDataRow, useExisting: MatNoDataRow }],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Column that simply shows text content for the header and row cells. Assumes that the table\n * is using the native table implementation (`<table>`).\n *\n * By default, the name of this column will be the header text and data property accessor.\n * The header text can be overridden with the `headerText` input. Cell values can be overridden with\n * the `dataAccessor` input. Change the text justification to the start or end using the `justify`\n * input.\n */\nclass MatTextColumn extends CdkTextColumn {\n}\nMatTextColumn.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatTextColumn, deps: null, target: i0.ɵɵFactoryTarget.Component });\nMatTextColumn.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatTextColumn, selector: \"mat-text-column\", usesInheritance: true, ngImport: i0, template: `\n    <ng-container matColumnDef>\n      <th mat-header-cell *matHeaderCellDef [style.text-align]=\"justify\">\n        {{headerText}}\n      </th>\n      <td mat-cell *matCellDef=\"let data\" [style.text-align]=\"justify\">\n        {{dataAccessor(data, name)}}\n      </td>\n    </ng-container>\n  `, isInline: true, directives: [{ type: MatColumnDef, selector: \"[matColumnDef]\", inputs: [\"sticky\", \"matColumnDef\"] }, { type: MatHeaderCellDef, selector: \"[matHeaderCellDef]\" }, { type: MatHeaderCell, selector: \"mat-header-cell, th[mat-header-cell]\" }, { type: MatCellDef, selector: \"[matCellDef]\" }, { type: MatCell, selector: \"mat-cell, td[mat-cell]\" }], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatTextColumn, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'mat-text-column',\n                    template: `\n    <ng-container matColumnDef>\n      <th mat-header-cell *matHeaderCellDef [style.text-align]=\"justify\">\n        {{headerText}}\n      </th>\n      <td mat-cell *matCellDef=\"let data\" [style.text-align]=\"justify\">\n        {{dataAccessor(data, name)}}\n      </td>\n    </ng-container>\n  `,\n                    encapsulation: ViewEncapsulation.None,\n                    // Change detection is intentionally not set to OnPush. This component's template will be provided\n                    // to the table to be inserted into its view. This is problematic when change detection runs since\n                    // the bindings in this template will be evaluated _after_ the table's view is evaluated, which\n                    // mean's the template in the table's view will not have the updated value (and in fact will cause\n                    // an ExpressionChangedAfterItHasBeenCheckedError).\n                    // tslint:disable-next-line:validate-decorators\n                    changeDetection: ChangeDetectionStrategy.Default,\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst EXPORTED_DECLARATIONS = [\n    // Table\n    MatTable,\n    MatRecycleRows,\n    // Template defs\n    MatHeaderCellDef,\n    MatHeaderRowDef,\n    MatColumnDef,\n    MatCellDef,\n    MatRowDef,\n    MatFooterCellDef,\n    MatFooterRowDef,\n    // Cell directives\n    MatHeaderCell,\n    MatCell,\n    MatFooterCell,\n    // Row directives\n    MatHeaderRow,\n    MatRow,\n    MatFooterRow,\n    MatNoDataRow,\n    MatTextColumn,\n];\nclass MatTableModule {\n}\nMatTableModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatTableModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatTableModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatTableModule, declarations: [\n        // Table\n        MatTable,\n        MatRecycleRows,\n        // Template defs\n        MatHeaderCellDef,\n        MatHeaderRowDef,\n        MatColumnDef,\n        MatCellDef,\n        MatRowDef,\n        MatFooterCellDef,\n        MatFooterRowDef,\n        // Cell directives\n        MatHeaderCell,\n        MatCell,\n        MatFooterCell,\n        // Row directives\n        MatHeaderRow,\n        MatRow,\n        MatFooterRow,\n        MatNoDataRow,\n        MatTextColumn\n    ], imports: [CdkTableModule, MatCommonModule], exports: [MatCommonModule,\n        // Table\n        MatTable,\n        MatRecycleRows,\n        // Template defs\n        MatHeaderCellDef,\n        MatHeaderRowDef,\n        MatColumnDef,\n        MatCellDef,\n        MatRowDef,\n        MatFooterCellDef,\n        MatFooterRowDef,\n        // Cell directives\n        MatHeaderCell,\n        MatCell,\n        MatFooterCell,\n        // Row directives\n        MatHeaderRow,\n        MatRow,\n        MatFooterRow,\n        MatNoDataRow,\n        MatTextColumn] });\nMatTableModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatTableModule, imports: [[CdkTableModule, MatCommonModule], MatCommonModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatTableModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CdkTableModule, MatCommonModule],\n                    exports: [MatCommonModule, EXPORTED_DECLARATIONS],\n                    declarations: EXPORTED_DECLARATIONS,\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Corresponds to `Number.MAX_SAFE_INTEGER`. Moved out into a variable here due to\n * flaky browser support and the value not being defined in Closure's typings.\n */\nconst MAX_SAFE_INTEGER = 9007199254740991;\n/** Shared base class with MDC-based implementation. */\nclass _MatTableDataSource extends DataSource {\n    constructor(initialData = []) {\n        super();\n        /** Stream emitting render data to the table (depends on ordered data changes). */\n        this._renderData = new BehaviorSubject([]);\n        /** Stream that emits when a new filter string is set on the data source. */\n        this._filter = new BehaviorSubject('');\n        /** Used to react to internal changes of the paginator that are made by the data source itself. */\n        this._internalPageChanges = new Subject();\n        /**\n         * Subscription to the changes that should trigger an update to the table's rendered rows, such\n         * as filtering, sorting, pagination, or base data changes.\n         */\n        this._renderChangesSubscription = null;\n        /**\n         * Data accessor function that is used for accessing data properties for sorting through\n         * the default sortData function.\n         * This default function assumes that the sort header IDs (which defaults to the column name)\n         * matches the data's properties (e.g. column Xyz represents data['Xyz']).\n         * May be set to a custom function for different behavior.\n         * @param data Data object that is being accessed.\n         * @param sortHeaderId The name of the column that represents the data.\n         */\n        this.sortingDataAccessor = (data, sortHeaderId) => {\n            const value = data[sortHeaderId];\n            if (_isNumberValue(value)) {\n                const numberValue = Number(value);\n                // Numbers beyond `MAX_SAFE_INTEGER` can't be compared reliably so we\n                // leave them as strings. For more info: https://goo.gl/y5vbSg\n                return numberValue < MAX_SAFE_INTEGER ? numberValue : value;\n            }\n            return value;\n        };\n        /**\n         * Gets a sorted copy of the data array based on the state of the MatSort. Called\n         * after changes are made to the filtered data or when sort changes are emitted from MatSort.\n         * By default, the function retrieves the active sort and its direction and compares data\n         * by retrieving data using the sortingDataAccessor. May be overridden for a custom implementation\n         * of data ordering.\n         * @param data The array of data that should be sorted.\n         * @param sort The connected MatSort that holds the current sort state.\n         */\n        this.sortData = (data, sort) => {\n            const active = sort.active;\n            const direction = sort.direction;\n            if (!active || direction == '') {\n                return data;\n            }\n            return data.sort((a, b) => {\n                let valueA = this.sortingDataAccessor(a, active);\n                let valueB = this.sortingDataAccessor(b, active);\n                // If there are data in the column that can be converted to a number,\n                // it must be ensured that the rest of the data\n                // is of the same type so as not to order incorrectly.\n                const valueAType = typeof valueA;\n                const valueBType = typeof valueB;\n                if (valueAType !== valueBType) {\n                    if (valueAType === 'number') {\n                        valueA += '';\n                    }\n                    if (valueBType === 'number') {\n                        valueB += '';\n                    }\n                }\n                // If both valueA and valueB exist (truthy), then compare the two. Otherwise, check if\n                // one value exists while the other doesn't. In this case, existing value should come last.\n                // This avoids inconsistent results when comparing values to undefined/null.\n                // If neither value exists, return 0 (equal).\n                let comparatorResult = 0;\n                if (valueA != null && valueB != null) {\n                    // Check if one value is greater than the other; if equal, comparatorResult should remain 0.\n                    if (valueA > valueB) {\n                        comparatorResult = 1;\n                    }\n                    else if (valueA < valueB) {\n                        comparatorResult = -1;\n                    }\n                }\n                else if (valueA != null) {\n                    comparatorResult = 1;\n                }\n                else if (valueB != null) {\n                    comparatorResult = -1;\n                }\n                return comparatorResult * (direction == 'asc' ? 1 : -1);\n            });\n        };\n        /**\n         * Checks if a data object matches the data source's filter string. By default, each data object\n         * is converted to a string of its properties and returns true if the filter has\n         * at least one occurrence in that string. By default, the filter string has its whitespace\n         * trimmed and the match is case-insensitive. May be overridden for a custom implementation of\n         * filter matching.\n         * @param data Data object used to check against the filter.\n         * @param filter Filter string that has been set on the data source.\n         * @returns Whether the filter matches against the data\n         */\n        this.filterPredicate = (data, filter) => {\n            // Transform the data into a lowercase string of all property values.\n            const dataStr = Object.keys(data)\n                .reduce((currentTerm, key) => {\n                // Use an obscure Unicode character to delimit the words in the concatenated string.\n                // This avoids matches where the values of two columns combined will match the user's query\n                // (e.g. `Flute` and `Stop` will match `Test`). The character is intended to be something\n                // that has a very low chance of being typed in by somebody in a text field. This one in\n                // particular is \"White up-pointing triangle with dot\" from\n                // https://en.wikipedia.org/wiki/List_of_Unicode_characters\n                return currentTerm + data[key] + '◬';\n            }, '')\n                .toLowerCase();\n            // Transform the filter by converting it to lowercase and removing whitespace.\n            const transformedFilter = filter.trim().toLowerCase();\n            return dataStr.indexOf(transformedFilter) != -1;\n        };\n        this._data = new BehaviorSubject(initialData);\n        this._updateChangeSubscription();\n    }\n    /** Array of data that should be rendered by the table, where each object represents one row. */\n    get data() {\n        return this._data.value;\n    }\n    set data(data) {\n        this._data.next(data);\n        // Normally the `filteredData` is updated by the re-render\n        // subscription, but that won't happen if it's inactive.\n        if (!this._renderChangesSubscription) {\n            this._filterData(data);\n        }\n    }\n    /**\n     * Filter term that should be used to filter out objects from the data array. To override how\n     * data objects match to this filter string, provide a custom function for filterPredicate.\n     */\n    get filter() {\n        return this._filter.value;\n    }\n    set filter(filter) {\n        this._filter.next(filter);\n        // Normally the `filteredData` is updated by the re-render\n        // subscription, but that won't happen if it's inactive.\n        if (!this._renderChangesSubscription) {\n            this._filterData(this.data);\n        }\n    }\n    /**\n     * Instance of the MatSort directive used by the table to control its sorting. Sort changes\n     * emitted by the MatSort will trigger an update to the table's rendered data.\n     */\n    get sort() {\n        return this._sort;\n    }\n    set sort(sort) {\n        this._sort = sort;\n        this._updateChangeSubscription();\n    }\n    /**\n     * Instance of the MatPaginator component used by the table to control what page of the data is\n     * displayed. Page changes emitted by the MatPaginator will trigger an update to the\n     * table's rendered data.\n     *\n     * Note that the data source uses the paginator's properties to calculate which page of data\n     * should be displayed. If the paginator receives its properties as template inputs,\n     * e.g. `[pageLength]=100` or `[pageIndex]=1`, then be sure that the paginator's view has been\n     * initialized before assigning it to this data source.\n     */\n    get paginator() {\n        return this._paginator;\n    }\n    set paginator(paginator) {\n        this._paginator = paginator;\n        this._updateChangeSubscription();\n    }\n    /**\n     * Subscribe to changes that should trigger an update to the table's rendered rows. When the\n     * changes occur, process the current state of the filter, sort, and pagination along with\n     * the provided base data and send it to the table for rendering.\n     */\n    _updateChangeSubscription() {\n        var _a;\n        // Sorting and/or pagination should be watched if MatSort and/or MatPaginator are provided.\n        // The events should emit whenever the component emits a change or initializes, or if no\n        // component is provided, a stream with just a null event should be provided.\n        // The `sortChange` and `pageChange` acts as a signal to the combineLatests below so that the\n        // pipeline can progress to the next step. Note that the value from these streams are not used,\n        // they purely act as a signal to progress in the pipeline.\n        const sortChange = this._sort\n            ? merge(this._sort.sortChange, this._sort.initialized)\n            : of(null);\n        const pageChange = this._paginator\n            ? merge(this._paginator.page, this._internalPageChanges, this._paginator.initialized)\n            : of(null);\n        const dataStream = this._data;\n        // Watch for base data or filter changes to provide a filtered set of data.\n        const filteredData = combineLatest([dataStream, this._filter]).pipe(map(([data]) => this._filterData(data)));\n        // Watch for filtered data or sort changes to provide an ordered set of data.\n        const orderedData = combineLatest([filteredData, sortChange]).pipe(map(([data]) => this._orderData(data)));\n        // Watch for ordered data or page changes to provide a paged set of data.\n        const paginatedData = combineLatest([orderedData, pageChange]).pipe(map(([data]) => this._pageData(data)));\n        // Watched for paged data changes and send the result to the table to render.\n        (_a = this._renderChangesSubscription) === null || _a === void 0 ? void 0 : _a.unsubscribe();\n        this._renderChangesSubscription = paginatedData.subscribe(data => this._renderData.next(data));\n    }\n    /**\n     * Returns a filtered data array where each filter object contains the filter string within\n     * the result of the filterTermAccessor function. If no filter is set, returns the data array\n     * as provided.\n     */\n    _filterData(data) {\n        // If there is a filter string, filter out data that does not contain it.\n        // Each data object is converted to a string using the function defined by filterTermAccessor.\n        // May be overridden for customization.\n        this.filteredData =\n            this.filter == null || this.filter === ''\n                ? data\n                : data.filter(obj => this.filterPredicate(obj, this.filter));\n        if (this.paginator) {\n            this._updatePaginator(this.filteredData.length);\n        }\n        return this.filteredData;\n    }\n    /**\n     * Returns a sorted copy of the data if MatSort has a sort applied, otherwise just returns the\n     * data array as provided. Uses the default data accessor for data lookup, unless a\n     * sortDataAccessor function is defined.\n     */\n    _orderData(data) {\n        // If there is no active sort or direction, return the data without trying to sort.\n        if (!this.sort) {\n            return data;\n        }\n        return this.sortData(data.slice(), this.sort);\n    }\n    /**\n     * Returns a paged slice of the provided data array according to the provided MatPaginator's page\n     * index and length. If there is no paginator provided, returns the data array as provided.\n     */\n    _pageData(data) {\n        if (!this.paginator) {\n            return data;\n        }\n        const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\n        return data.slice(startIndex, startIndex + this.paginator.pageSize);\n    }\n    /**\n     * Updates the paginator to reflect the length of the filtered data, and makes sure that the page\n     * index does not exceed the paginator's last page. Values are changed in a resolved promise to\n     * guard against making property changes within a round of change detection.\n     */\n    _updatePaginator(filteredDataLength) {\n        Promise.resolve().then(() => {\n            const paginator = this.paginator;\n            if (!paginator) {\n                return;\n            }\n            paginator.length = filteredDataLength;\n            // If the page index is set beyond the page, reduce it to the last page.\n            if (paginator.pageIndex > 0) {\n                const lastPageIndex = Math.ceil(paginator.length / paginator.pageSize) - 1 || 0;\n                const newPageIndex = Math.min(paginator.pageIndex, lastPageIndex);\n                if (newPageIndex !== paginator.pageIndex) {\n                    paginator.pageIndex = newPageIndex;\n                    // Since the paginator only emits after user-generated changes,\n                    // we need our own stream so we know to should re-render the data.\n                    this._internalPageChanges.next();\n                }\n            }\n        });\n    }\n    /**\n     * Used by the MatTable. Called when it connects to the data source.\n     * @docs-private\n     */\n    connect() {\n        if (!this._renderChangesSubscription) {\n            this._updateChangeSubscription();\n        }\n        return this._renderData;\n    }\n    /**\n     * Used by the MatTable. Called when it disconnects from the data source.\n     * @docs-private\n     */\n    disconnect() {\n        var _a;\n        (_a = this._renderChangesSubscription) === null || _a === void 0 ? void 0 : _a.unsubscribe();\n        this._renderChangesSubscription = null;\n    }\n}\n/**\n * Data source that accepts a client-side data array and includes native support of filtering,\n * sorting (using MatSort), and pagination (using MatPaginator).\n *\n * Allows for sort customization by overriding sortingDataAccessor, which defines how data\n * properties are accessed. Also allows for filter customization by overriding filterTermAccessor,\n * which defines how row data is converted to a string for filter matching.\n *\n * **Note:** This class is meant to be a simple data source to help you get started. As such\n * it isn't equipped to handle some more advanced cases like robust i18n support or server-side\n * interactions. If your app needs to support more advanced use cases, consider implementing your\n * own `DataSource`.\n */\nclass MatTableDataSource extends _MatTableDataSource {\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatCell, MatCellDef, MatColumnDef, MatFooterCell, MatFooterCellDef, MatFooterRow, MatFooterRowDef, MatHeaderCell, MatHeaderCellDef, MatHeaderRow, MatHeaderRowDef, MatNoDataRow, MatRecycleRows, MatRow, MatRowDef, MatTable, MatTableDataSource, MatTableModule, MatTextColumn, _MatTableDataSource };\n"],"names":["Observable","async","asyncScheduler","isScheduler","isValidDate","timer","dueTime","intervalOrScheduler","scheduler","intervalDuration","subscriber","due","now","n","schedule","closed","next","undefined","complete","audit","auditTime","duration","isObservable","of","Subject","i0","Injectable","InjectionToken","DataSource","isDataSource","value","connect","ArrayDataSource","constructor","_data","disconnect","_DisposeViewRepeaterStrategy","applyChanges","changes","viewContainerRef","itemContextFactory","itemValueResolver","itemViewChanged","forEachOperation","record","adjustedPreviousIndex","currentIndex","view","operation","previousIndex","insertContext","createEmbeddedView","templateRef","context","index","remove","get","move","detach","_RecycleViewRepeaterStrategy","viewCacheSize","_viewCache","viewArgsFactory","_insertView","_detachAndCacheView","_moveView","destroy","cachedView","_insertViewFromCache","$implicit","viewArgs","detachedView","_maybeCacheView","length","push","indexOf","pop","insert","SelectionModel","_multiple","initiallySelectedValues","_emitChanges","_selection","Set","_deselectedToEmit","_selectedToEmit","changed","forEach","_markSelected","selected","_selected","Array","from","values","select","_verifyValueAssignment","_emitChangeEvent","deselect","_unmarkSelected","toggle","isSelected","clear","_unmarkAll","has","isEmpty","size","hasValue","sort","predicate","isMultipleSelection","source","added","removed","add","delete","ngDevMode","getMultipleValuesInSingleSelectionError","Error","UniqueSelectionDispatcher","_listeners","notify","id","name","listener","listen","filter","registered","ngOnDestroy","ɵfac","ɵprov","type","args","providedIn","_VIEW_REPEATER_STRATEGY","i1","ScrollingModule","CdkScrollable","ScrollDispatcher","ViewportRuler","i6","DOCUMENT","Inject","ElementRef","ApplicationRef","Directive","EventEmitter","Optional","Input","Output","NgModule","coerceCssPixelValue","coerceArray","coerceBooleanProperty","i1$1","supportsScrollBehavior","_isTestEnvironment","_getEventTarget","i5","BidiModule","DomPortalOutlet","TemplatePortal","PortalModule","Subscription","merge","take","takeUntil","takeWhile","ESCAPE","hasModifierKey","scrollBehaviorSupported","BlockScrollStrategy","_viewportRuler","document","_previousHTMLStyles","top","left","_isEnabled","_document","attach","enable","_canBeEnabled","root","documentElement","_previousScrollPosition","getViewportScrollPosition","style","classList","disable","html","body","htmlStyle","bodyStyle","previousHtmlScrollBehavior","scrollBehavior","previousBodyScrollBehavior","window","scroll","contains","viewport","getViewportSize","scrollHeight","height","scrollWidth","width","getMatScrollStrategyAlreadyAttachedError","CloseScrollStrategy","_scrollDispatcher","_ngZone","_config","_scrollSubscription","_detach","_overlayRef","hasAttached","run","overlayRef","stream","scrolled","threshold","_initialScrollPosition","subscribe","scrollPosition","Math","abs","updatePosition","unsubscribe","NoopScrollStrategy","isElementScrolledOutsideView","element","scrollContainers","some","containerBounds","outsideAbove","bottom","outsideBelow","outsideLeft","right","outsideRight","isElementClippedByScrolling","scrollContainerRect","clippedAbove","clippedBelow","clippedLeft","clippedRight","RepositionScrollStrategy","throttle","scrollThrottle","autoClose","overlayRect","overlayElement","getBoundingClientRect","parentRects","ScrollStrategyOptions","noop","close","config","block","reposition","NgZone","decorators","OverlayConfig","scrollStrategy","panelClass","hasBackdrop","backdropClass","disposeOnNavigation","configKeys","Object","keys","key","ConnectionPositionPair","origin","overlay","offsetX","offsetY","originX","originY","overlayX","overlayY","ScrollingVisibility","ConnectedOverlayPositionChange","connectionPair","scrollableViewProperties","validateVerticalPosition","property","validateHorizontalPosition","OverlayRef","_portalOutlet","_host","_pane","_keyboardDispatcher","_location","_outsideClickDispatcher","_backdropElement","_backdropClick","_attachments","_detachments","_locationChanges","EMPTY","_backdropClickHandler","event","_keydownEvents","_outsidePointerEvents","_scrollStrategy","_positionStrategy","positionStrategy","backdropElement","hostElement","portal","attachResult","parentElement","_previousHostParent","appendChild","_updateStackingOrder","_updateElementSize","_updateElementDirection","onStable","pipe","_togglePointerEvents","_attachBackdrop","_toggleClasses","dispose","detachBackdrop","detachmentResult","_detachContentWhenStable","_a","isAttached","_disposeScrollStrategy","_disposeBackdrop","backdropClick","attachments","detachments","keydownEvents","outsidePointerEvents","getConfig","apply","updatePositionStrategy","strategy","updateSize","sizeConfig","assign","setDirection","dir","direction","addPanelClass","classes","removePanelClass","getDirection","updateScrollStrategy","setAttribute","minWidth","minHeight","maxWidth","maxHeight","enablePointer","pointerEvents","showingClass","createElement","insertBefore","addEventListener","requestAnimationFrame","runOutsideAngular","nextSibling","parentNode","backdropToDetach","timeoutId","finishDetach","removeEventListener","clearTimeout","setTimeout","cssClasses","isAdd","c","subscription","children","backdrop","OverlayContainer","_platform","_containerElement","getContainerElement","_createContainer","containerClass","isBrowser","oppositePlatformContainers","querySelectorAll","i","container","Platform","boundingBoxClass","cssUnitPattern","FlexibleConnectedPositionStrategy","connectedTo","_overlayContainer","_lastBoundingBoxSize","_isPushed","_canPush","_growAfterOpen","_hasFlexibleDimensions","_positionLocked","_viewportMargin","_scrollables","_preferredPositions","_positionChanges","_resizeSubscription","_offsetX","_offsetY","_appliedPanelClasses","positionChanges","setOrigin","positions","_validatePositions","_boundingBox","_isDisposed","_isInitialRender","_lastPosition","change","reapplyLastPosition","_clearPanelClasses","_resetOverlayElementStyles","_resetBoundingBoxStyles","_viewportRect","_getNarrowedViewportRect","_originRect","_getOriginRect","_overlayRect","originRect","viewportRect","flexibleFits","fallback","pos","originPoint","_getOriginPoint","overlayPoint","_getOverlayPoint","overlayFit","_getOverlayFit","isCompletelyWithinViewport","_applyPosition","_canFitWithFlexibleDimensions","position","boundingBoxRect","_calculateBoundingBoxRect","visibleArea","bestFit","bestScore","fit","score","weight","_previousPushAmount","extendStyles","alignItems","justifyContent","lastPosition","withScrollableContainers","scrollables","withPositions","withViewportMargin","margin","withFlexibleDimensions","flexibleDimensions","withGrowAfterOpen","growAfterOpen","withPush","canPush","withLockedPosition","isLocked","_origin","withDefaultOffsetX","offset","withDefaultOffsetY","withTransformOriginOn","selector","_transformOriginSelector","x","startX","_isRtl","endX","y","overlayStartX","overlayStartY","point","rawOverlayRect","getRoundedBoundingClientRect","_getOffset","leftOverflow","rightOverflow","topOverflow","bottomOverflow","visibleWidth","_subtractOverflows","visibleHeight","fitsInViewportVertically","fitsInViewportHorizontally","availableHeight","availableWidth","getPixelValue","verticalFit","horizontalFit","_pushOverlayOnScreen","start","overflowRight","max","overflowBottom","overflowTop","overflowLeft","pushX","pushY","_setTransformOrigin","_setOverlayElementStyles","_setBoundingBoxStyles","_addPanelClasses","observers","_getScrollVisibility","changeEvent","elements","xOrigin","yOrigin","transformOrigin","isRtl","smallestDistanceToViewportEdge","min","previousHeight","isBoundedByRightViewportEdge","isBoundedByLeftViewportEdge","previousWidth","styles","_hasExactPosition","transform","hasExactPosition","hasFlexibleDimensions","_getExactOverlayY","_getExactOverlayX","transformString","trim","virtualKeyboardOffset","documentHeight","clientHeight","horizontalStyleProperty","documentWidth","clientWidth","originBounds","overlayBounds","scrollContainerBounds","map","scrollable","getElementRef","nativeElement","isOriginClipped","isOriginOutsideView","isOverlayClipped","isOverlayOutsideView","overflows","reduce","currentValue","currentOverflow","axis","pair","cssClass","Element","destination","hasOwnProperty","input","units","split","parseFloat","clientRect","floor","wrapperClass","GlobalPositionStrategy","_cssPosition","_topOffset","_bottomOffset","_leftOffset","_rightOffset","_alignItems","_justifyContent","_width","_height","centerHorizontally","centerVertically","parentStyles","shouldBeFlushHorizontally","shouldBeFlushVertically","marginLeft","marginTop","marginBottom","marginRight","parent","OverlayPositionBuilder","global","flexibleConnectedTo","BaseOverlayDispatcher","_attachedOverlays","splice","OverlayKeyboardDispatcher","_keydownListener","overlays","_isAttached","OverlayOutsideClickDispatcher","_cursorStyleIsSet","_pointerDownListener","_pointerDownEventTarget","_clickListener","target","slice","IOS","_cursorOriginalValue","cursor","nextUniqueId","Overlay","scrollStrategies","_componentFactoryResolver","_positionBuilder","_injector","_directionality","create","host","_createHostElement","pane","_createPaneElement","portalOutlet","_createPortalOutlet","overlayConfig","_appRef","ComponentFactoryResolver","Injector","Directionality","Location","defaultPositionList","CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY","CdkOverlayOrigin","elementRef","ɵdir","exportAs","CdkConnectedOverlay","_overlay","scrollStrategyFactory","_dir","_hasBackdrop","_lockPosition","_flexibleDimensions","_push","_backdropSubscription","_attachSubscription","_detachSubscription","_positionSubscription","viewportMargin","open","disableClose","positionChange","overlayKeydown","overlayOutsideClick","_templatePortal","_scrollStrategyFactory","_position","_updatePositionStrategy","lockPosition","ngOnChanges","_attachOverlay","_detachOverlay","_createOverlay","_buildConfig","emit","keyCode","preventDefault","_createPositionStrategy","currentPosition","_getFlexibleConnectedPositionStrategyOrigin","transformOriginSelector","TemplateRef","ViewContainerRef","CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER_FACTORY","CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER","provide","deps","useFactory","OverlayModule","ɵmod","ɵinj","imports","exports","declarations","providers","FullscreenOverlayContainer","platform","_fullScreenEventName","_fullScreenListener","_adjustParentForFullscreenChange","_addFullscreenChangeListener","fullscreenElement","getFullscreenElement","fn","eventName","_getEventName","fullscreenEnabled","webkitFullscreenEnabled","mozFullScreenEnabled","msFullscreenEnabled","webkitFullscreenElement","mozFullScreenElement","msFullscreenElement","throwNullPortalError","throwPortalAlreadyAttachedError","throwPortalOutletAlreadyDisposedError","throwUnknownPortalTypeError","throwNullPortalOutletError","throwNoPortalAttachedError","Portal","_attachedHost","setAttachedHost","ComponentPortal","component","injector","componentFactoryResolver","template","DomPortal","BasePortalOutlet","attachDomPortal","_attachedPortal","attachComponentPortal","attachTemplatePortal","_invokeDisposeFn","setDisposeFn","_disposeFn","BasePortalHost","outletElement","_defaultInjector","anchorNode","createComment","replaceChild","resolver","componentFactory","resolveComponentFactory","componentRef","createComponent","attachView","hostView","detachView","_getComponentRootNode","viewContainer","viewRef","rootNodes","rootNode","detectChanges","DomPortalHost","CdkPortal","TemplatePortalDirective","useExisting","CdkPortalOutlet","_viewContainerRef","_isInitialized","attached","_getRootNode","attachedRef","_attachedRef","ngOnInit","ref","nodeType","ELEMENT_NODE","inputs","PortalHostDirective","PortalInjector","_parentInjector","_customTokens","token","notFoundValue","coerceNumberProperty","coerceElement","forwardRef","Component","ViewEncapsulation","ChangeDetectionStrategy","ViewChild","SkipSelf","fromEvent","animationFrameScheduler","asapScheduler","distinctUntilChanged","startWith","pairwise","switchMap","shareReplay","getRtlScrollAxisType","PlatformModule","i2","i2$1","VIRTUAL_SCROLL_STRATEGY","FixedSizeVirtualScrollStrategy","itemSize","minBufferPx","maxBufferPx","_scrolledIndexChange","scrolledIndexChange","_viewport","_itemSize","_minBufferPx","_maxBufferPx","_updateTotalContentSize","_updateRenderedRange","updateItemAndBufferSize","onContentScrolled","onDataLengthChanged","onContentRendered","onRenderedOffsetChanged","scrollToIndex","behavior","scrollToOffset","setTotalContentSize","getDataLength","renderedRange","getRenderedRange","newRange","end","viewportSize","dataLength","scrollOffset","measureScrollOffset","firstVisibleIndex","maxVisibleItems","ceil","newVisibleIndex","startBuffer","expandStart","endBuffer","expandEnd","setRenderedRange","setRenderedContentOffset","_fixedSizeVirtualScrollStrategyFactory","fixedSizeDir","CdkFixedSizeVirtualScroll","DEFAULT_SCROLL_TIME","_scrolled","_globalSubscription","_scrolledCount","Map","register","set","elementScrolled","deregister","scrollableReference","auditTimeInMs","observer","_addGlobalListener","_removeGlobalListener","_","ancestorScrolled","elementOrElementRef","ancestors","getAncestorScrollContainers","scrollingContainers","_subscription","_scrollableContainsElement","_getWindow","defaultView","scrollableElement","scrollDispatcher","ngZone","_destroyed","_elementScrolled","scrollTo","options","el","_applyScrollToOptions","scrollTop","scrollLeft","LEFT","RIGHT","DEFAULT_RESIZE_TIME","_change","_changeListener","_viewportSize","_updateViewportSize","output","getViewportRect","documentRect","scrollY","scrollX","throttleTime","innerWidth","innerHeight","rangesEqual","r1","r2","SCROLL_SCHEDULER","CdkVirtualScrollViewport","_changeDetectorRef","viewportRuler","_detachedSubject","_renderedRangeSubject","_orientation","_appendOnly","Promise","resolve","then","renderedRangeStream","_totalContentSize","_totalContentWidth","_totalContentHeight","_renderedRange","_dataLength","_renderedContentOffset","_renderedContentOffsetNeedsRewrite","_isChangeDetectionPending","_runAfterChangeDetection","_viewportChanges","checkViewportSize","orientation","_calculateSpacerSize","appendOnly","_measureViewportSize","_markChangeDetectionNeeded","forOf","_forOf","dataStream","data","newLength","_doChangeDetection","range","getOffsetToRenderedContentStart","to","isHorizontal","axisDirection","Number","_renderedContentTransform","measureRenderedContentSize","contentEl","_contentWrapper","offsetWidth","offsetHeight","measureRangeSize","viewportEl","runAfter","markForCheck","runAfterChangeDetection","ChangeDetectorRef","ɵcmp","encapsulation","None","changeDetection","OnPush","static","getOffset","node","rect","CdkVirtualForOf","_template","_differs","_viewRepeater","viewChange","_dataSourceChanges","prev","cur","_changeDataSource","_differ","_needsUpdate","_onRenderedDataChange","cdkVirtualForOf","_cdkVirtualForOf","cdkVirtualForTrackBy","_cdkVirtualForTrackBy","item","cdkVirtualForTemplate","cdkVirtualForTemplateCacheSize","renderedStartIndex","rangeLen","firstNode","lastNode","ngDoCheck","diff","_renderedItems","_updateContext","_applyChanges","find","oldDs","newDs","count","_updateComputedContextProperties","_adjustedPreviousIndex","_getEmbeddedViewArgs","forEachIdentityChange","first","last","even","odd","IterableDiffers","useClass","CdkScrollableModule","ContentChild","EmbeddedViewRef","Attribute","ContentChildren","BehaviorSubject","i3","mixinHasStickyInput","base","_sticky","_hasStickyChanged","sticky","v","prevValue","hasStickyChanged","resetStickyChanged","CDK_TABLE","TEXT_COLUMN_OPTIONS","CdkCellDef","CdkHeaderCellDef","CdkFooterCellDef","CdkColumnDefBase","_CdkColumnDefBase","CdkColumnDef","_table","_stickyEnd","_name","_setNameInput","stickyEnd","_updateColumnCssClassName","_columnCssClassName","cssClassFriendlyName","replace","cell","headerCell","footerCell","BaseCdkCell","columnDef","className","CdkHeaderCell","CdkFooterCell","_elementRef","tableRole","getAttribute","role","CdkCell","_Schedule","tasks","endTasks","_COALESCED_STYLE_SCHEDULER","_CoalescedStyleScheduler","_currentSchedule","task","_createScheduleIfNeeded","scheduleEnd","_getScheduleObservable","isStable","CDK_ROW_TEMPLATE","BaseRowDef","_columnsDiffer","columns","getColumnsDiff","extractCellTemplate","column","CdkHeaderRowDef","CdkFooterRowDef","CdkHeaderRowDefBase","_CdkHeaderRowDefBase","CdkFooterRowDefBase","_CdkFooterRowDefBase","CdkRowDef","CdkCellOutlet","_viewContainer","mostRecentCellOutlet","CdkHeaderRow","Default","CdkFooterRow","CdkRow","CdkNoDataRow","_contentClassName","STICKY_DIRECTIONS","StickyStyler","_isNativeHtmlTable","_stickCellCss","_coalescedStyleScheduler","_isBrowser","_needsPositionStickyOnElement","_positionListener","_cachedCellWidths","_borderCellCss","clearStickyPositioning","rows","stickyDirections","elementsToClear","row","_removeStickyStyle","updateStickyColumns","stickyStartStates","stickyEndStates","recalculateCellWidths","state","stickyColumnsUpdated","sizes","stickyEndColumnsUpdated","firstRow","numCells","cellWidths","_getCellWidths","startPositions","_getStickyStartColumnPositions","endPositions","_getStickyEndColumnPositions","lastStickyStart","lastIndexOf","firstStickyEnd","_addStickyStyle","reverse","stickRows","rowsToStick","stickyStates","states","stickyOffsets","stickyCellHeights","elementsToStick","rowIndex","stickyOffset","borderedRowIndex","_b","isBorderedRowIndex","stickyHeaderRowsUpdated","offsets","stickyFooterRowsUpdated","updateStickyFooterContainer","tableElement","tfoot","querySelector","hasDirection","zIndex","_getCalculatedZIndex","dirValue","isBorderElement","cssText","zIndexIncrements","firstRowCells","widths","nextPosition","getTableUnknownColumnError","getTableDuplicateColumnNameError","getTableMultipleDefaultRowDefsError","getTableMissingMatchingRowDefError","JSON","stringify","getTableMissingRowDefsError","getTableUnknownDataSourceError","getTableTextColumnMissingParentTableError","getTableTextColumnMissingNameError","STICKY_POSITIONING_LISTENER","CdkRecycleRows","DataRowOutlet","HeaderRowOutlet","FooterRowOutlet","NoDataRowOutlet","CDK_TABLE_TEMPLATE","RowViewRef","CdkTable","_stickyPositioningListener","_onDestroy","_columnDefsByName","_customColumnDefs","_customRowDefs","_customHeaderRowDefs","_customFooterRowDefs","_headerRowDefChanged","_footerRowDefChanged","_stickyColumnStylesNeedReset","_forceRecalculateCellWidths","_cachedRenderRowsMap","stickyCssClass","needsPositionStickyOnElement","_isShowingNoDataRow","_multiTemplateDataRows","_fixedLayout","contentChanged","MAX_VALUE","nodeName","trackBy","_trackByFn","console","warn","dataSource","_dataSource","_switchDataSource","multiTemplateDataRows","_rowOutlet","_forceRenderDataRows","updateStickyColumnStyles","fixedLayout","_setupStickyStyler","_applyNativeTableSections","_dataDiffer","_i","dataRow","dataIndex","ngAfterContentChecked","_cacheRowDefs","_cacheColumnDefs","_headerRowDefs","_footerRowDefs","_rowDefs","columnsChanged","_renderUpdatedColumns","rowDefsChanged","_forceRenderHeaderRows","_forceRenderFooterRows","_renderChangeSubscription","_observeRenderChanges","_checkStickyStates","_noDataRowOutlet","_headerRowOutlet","_footerRowOutlet","renderRows","_renderRows","_getAllRenderRows","_updateNoDataRow","_renderCellTemplateForItem","rowDef","_updateRowIndexContext","rowView","addColumnDef","removeColumnDef","addRowDef","removeRowDef","addHeaderRowDef","headerRowDef","removeHeaderRowDef","addFooterRowDef","footerRowDef","removeFooterRowDef","setNoDataRow","noDataRow","_customNoDataRow","updateStickyHeaderRowStyles","headerRows","_getRenderedRows","thead","display","def","_stickyStyler","updateStickyFooterRowStyles","footerRows","dataRows","headerRow","_addStickyColumnStyles","footerRow","prevCachedRenderRows","renderRowsForData","_getRenderRowsForData","WeakMap","j","renderRow","cache","rowDefs","_getRowDefs","cachedRenderRows","shift","columnDefs","mergeArrayAndSet","_getOwnDefs","_contentColumnDefs","_contentHeaderRowDefs","_contentFooterRowDefs","_contentRowDefs","defaultRowDefs","when","_defaultRowDef","columnsDiffReducer","acc","dataColumnsChanged","headerColumnsChanged","footerColumnsChanged","isArray","_renderRow","columnName","rowOutlet","renderedRows","outlet","cellTemplate","_getCellTemplates","renderIndex","columnId","documentFragment","createDocumentFragment","sections","tag","outlets","section","stickyCheckReducer","d","items","_noDataRow","shouldShow","useValue","descendants","array","concat","CdkTextColumn","_options","justify","_syncColumnDefName","headerText","_createDefaultHeaderText","dataAccessor","defaultDataAccessor","defaultHeaderTextTransform","toUpperCase","EXPORTED_DECLARATIONS","CdkTableModule","normalizePassiveListenerOptions","listenerOptions","passive","AutofillMonitor","_monitoredElements","monitor","elementOrRef","info","subject","result","animationName","isAutofilled","unlisten","stopMonitoring","_info","CdkAutofill","_autofillMonitor","cdkAutofill","CdkTextareaAutosize","_enabled","_previousMinRows","_isViewInited","_handleFocusEvent","_hasFocus","_textareaElement","minRows","_minRows","_setMinHeight","maxRows","_maxRows","_setMaxHeight","enabled","resizeToFitContent","reset","placeholder","_cachedPlaceholderHeight","_cacheTextareaPlaceholderHeight","_cachedLineHeight","ngAfterViewInit","_initialHeight","_cacheTextareaLineHeight","textareaClone","cloneNode","visibility","border","padding","overflow","_measureScrollHeight","previousMargin","isFirefox","FIREFOX","needsMarginFiller","measuringClass","force","textarea","_previousValue","_scrollToCaretPosition","_noopInputHandler","_getDocument","doc","selectionStart","selectionEnd","isStopped","setSelectionRange","TextFieldModule","InjectFlags","MatCommonModule","defer","_getFocusedElementPierceShadowDom","trigger","transition","animate","ANIMATION_MODULE_TYPE","MatDialogConfig","ariaDescribedBy","ariaLabelledBy","ariaLabel","autoFocus","restoreFocus","closeOnNavigation","matDialogAnimations","dialogContainer","opacity","throwMatDialogContentAlreadyAttachedError","_MatDialogContainerBase","_focusTrapFactory","_interactivityChecker","_focusMonitor","_animationStateChanged","_elementFocusedBeforeDialogWasOpened","_closeInteractionType","_ariaLabelledBy","_initializeWithAttachedContent","_setupFocusTrap","_capturePreviouslyFocusedElement","_recaptureFocus","_containsFocus","_trapFocus","_forceFocus","isFocusable","tabIndex","removeAttribute","focus","_focusByCssSelector","elementToFocus","_focusTrap","focusInitialElementWhenReady","focusedSuccessfully","_focusDialogContainer","_restoreFocus","previousElement","activeElement","focusVia","FocusTrapFactory","InteractivityChecker","FocusMonitor","MatDialogContainer","arguments","_state","_onAnimationDone","toState","totalTime","_onAnimationStart","_startExitAnimation","animations","uniqueId","MatDialogRef","_containerInstance","_afterOpened","_afterClosed","_beforeClosed","_id","_closeFallbackTimeout","_finishDialogClose","_result","componentInstance","_closeDialogVia","dialogResult","afterOpened","afterClosed","beforeClosed","_getPositionStrategy","getState","interactionType","MAT_DIALOG_DATA","MAT_DIALOG_DEFAULT_OPTIONS","MAT_DIALOG_SCROLL_STRATEGY","MAT_DIALOG_SCROLL_STRATEGY_FACTORY","MAT_DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY","MAT_DIALOG_SCROLL_STRATEGY_PROVIDER","_MatDialogBase","_defaultOptions","_parentDialog","_dialogRefConstructor","_dialogContainerType","_dialogDataToken","_animationMode","_openDialogsAtThisLevel","_afterAllClosedAtThisLevel","_afterOpenedAtThisLevel","_ariaHiddenElements","_dialogAnimatingOpen","afterAllClosed","openDialogs","_getAfterAllClosed","componentOrTemplateRef","_applyConfigDefaults","getDialogById","_lastDialogRef","_attachDialogContainer","animationStateSubscription","dialogAnimationEvent","_animationStateSubscriptions","dialogRef","_attachDialogContent","_hideNonDialogContentFromAssistiveTechnology","_removeOpenDialog","closeAll","_closeDialogs","dialog","_getOverlayConfig","dialogConfig","userInjector","containerPortal","containerRef","instance","_createInjector","contentRef","previousValue","overlayContainer","siblings","sibling","hasAttribute","dialogs","Type","MatDialog","location","defaultOptions","parentDialog","animationMode","dialogElementUid","MatDialogClose","_dialog","getClosestDialog","proxiedChange","_onButtonClick","screenX","screenY","_matDialogClose","MatDialogTitle","_dialogRef","MatDialogContent","MatDialogActions","MatDialogModule","i4","ObserversModule","CommonModule","mixinColor","nextUniqueId$2","MAT_ERROR","MatError","ariaLive","matFormFieldAnimations","transitionMessages","MatFormFieldControl","getMatFormFieldPlaceholderConflictError","getMatFormFieldDuplicatedHintError","align","getMatFormFieldMissingControlError","nextUniqueId$1","_MAT_HINT","MatHint","MatLabel","MatPlaceholder","MAT_PREFIX","MatPrefix","MAT_SUFFIX","MatSuffix","floatingLabelScale","outlineGapPadding","_MatFormFieldBase","MAT_FORM_FIELD_DEFAULT_OPTIONS","MAT_FORM_FIELD","MatFormField","_defaults","_outlineGapCalculationNeededImmediately","_outlineGapCalculationNeededOnStable","_showAlwaysAnimate","_subscriptAnimationState","_hintLabel","_hintLabelId","_labelId","floatLabel","_getDefaultFloatLabelState","_animationsEnabled","appearance","_hideRequiredMarker","hideRequiredMarker","_appearance","oldValue","_shouldAlwaysFloat","_canLabelFloat","hintLabel","_processHints","_floatLabel","_control","_explicitFormFieldControl","_controlNonStatic","_controlStatic","getLabelId","_hasFloatingLabel","getConnectedOverlayOrigin","_connectionContainerRef","ngAfterContentInit","_validateControlChild","control","controlType","stateChanges","_validatePlaceholders","_syncDescribedByIds","ngControl","valueChanges","updateOutlineGap","_prefixChildren","_suffixChildren","_hintChildren","_errorChildren","_shouldForward","prop","_hasPlaceholder","_placeholderChild","_hasLabel","_labelChildNonStatic","_labelChildStatic","_shouldLabelFloat","shouldLabelFloat","_hideControlPlaceholder","_getDisplayedMessages","errorState","_animateAndLockLabel","_label","_validateHints","startHint","endHint","hint","ids","userAriaDescribedBy","error","setDescribedByIds","labelEl","textContent","_isAttachedToDOM","startWidth","gapWidth","startEls","gapEls","containerRect","containerStart","_getStartEnd","labelChildren","labelStart","labelWidth","getRootNode","NgIf","NgSwitch","NgSwitchCase","CdkObserveContent","_inputContainerRef","MatFormFieldModule","getSupportedInputTypes","Self","Validators","mixinErrorState","ErrorStateMatcher","getMatInputUnsupportedTypeError","MAT_INPUT_VALUE_ACCESSOR","MAT_INPUT_INVALID_TYPES","_MatInputBase","_defaultErrorStateMatcher","_parentForm","_parentFormGroup","MatInput","inputValueAccessor","_formField","_uid","focused","autofilled","_disabled","_type","_readonly","_neverEmptyInputTypes","t","toLowerCase","_inputValueAccessor","_previousNativeValue","_isServer","_isNativeSelect","_isTextarea","_isInFormField","multiple","disabled","required","_c","_d","_required","hasValidator","_validateType","readonly","updateErrorState","_dirtyCheckNativeValue","_dirtyCheckPlaceholder","_focusChanged","isFocused","_onInput","call","_previousPlaceholder","newValue","_isNeverEmpty","_isBadInput","validity","badInput","empty","selectElement","firstOption","selectedIndex","label","join","onContainerClick","_isInlineSelect","NgControl","NgForm","FormGroupDirective","errorStateMatcher","MatInputModule","_isNumberValue","combineLatest","MatRecycleRows","MatTable","MatCellDef","MatHeaderCellDef","MatFooterCellDef","MatColumnDef","MatHeaderCell","MatFooterCell","MatCell","MatHeaderRowDef","MatFooterRowDef","MatRowDef","MatHeaderRow","MatFooterRow","MatRow","MatNoDataRow","MatTextColumn","MatTableModule","MAX_SAFE_INTEGER","_MatTableDataSource","initialData","_renderData","_filter","_internalPageChanges","_renderChangesSubscription","sortingDataAccessor","sortHeaderId","numberValue","sortData","active","a","b","valueA","valueB","valueAType","valueBType","comparatorResult","filterPredicate","dataStr","currentTerm","transformedFilter","_updateChangeSubscription","_filterData","_sort","paginator","_paginator","sortChange","initialized","pageChange","page","filteredData","orderedData","_orderData","paginatedData","_pageData","obj","_updatePaginator","startIndex","pageIndex","pageSize","filteredDataLength","lastPageIndex","newPageIndex","MatTableDataSource"],"sourceRoot":"webpack:///"}